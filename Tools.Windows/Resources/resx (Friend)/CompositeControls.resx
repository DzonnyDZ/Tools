<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutoCompleteCacheName_d" xml:space="preserve">
    <value>Name of per-session cache of keywords used by this instance</value>
  </data>
  <data name="CaseSensitive_d" xml:space="preserve">
    <value>Gets or sets value idicating if keywords are case sensitive</value>
  </data>
  <data name="StatusState_d" xml:space="preserve">
    <value>Gets or sets state of Status</value>
  </data>
  <data name="Status_d" xml:space="preserve">
    <value>StatusMarker present on this control</value>
  </data>
  <data name="ThesaurusButtonAttribute_d" xml:space="preserve">
    <value>Gets or sets state of thesaurus button</value>
  </data>
  <data name="MergeButtonState_d" xml:space="preserve">
    <value>Gets or sets state of merge button</value>
  </data>
  <data name="Merge_d" xml:space="preserve">
    <value>Gets or sets value indicating if merge button is checked (orange) or not (gray)</value>
  </data>
  <data name="MergeChanged_d" xml:space="preserve">
    <value>Raised after value of the Merge property changed</value>
  </data>
  <data name="AutoChange_d" xml:space="preserve">
    <value>Gets or sets value indicating if Status.Status automatically changes when keyword is added or removed</value>
  </data>
  <data name="KeyWordRemoved_d" xml:space="preserve">
    <value>Raised after user manually removes keyword(s)</value>
  </data>
  <data name="AddMenuState_d" xml:space="preserve">
    <value>State of the Add menu item</value>
  </data>
  <data name="DeleteMenuState_d" xml:space="preserve">
    <value>State of the Delete menu item</value>
  </data>
  <data name="MarkAsChangedMenuState_d" xml:space="preserve">
    <value>State of the Mark-as-changed menu item</value>
  </data>
  <data name="ResetMenuState_d" xml:space="preserve">
    <value>State of the Reset menu item</value>
  </data>
  <data name="AutoChanged_d" xml:space="preserve">
    <value>Gets or sets value indicating if Status automatically changes to Statuses.Changed when tmiMarkAsChanged is clicked</value>
  </data>
  <data name="StatusMarkerStatus_d" xml:space="preserve">
    <value>Shown status of control</value>
  </data>
  <data name="StatusChanged_d" xml:space="preserve">
    <value>Raised after the Status property changes</value>
  </data>
  <data name="Add_d" xml:space="preserve">
    <value>Raised after Add menu item is clicked</value>
  </data>
  <data name="MarkAsChanged_d" xml:space="preserve">
    <value>Raised after Mark-as-changed menu item is clicked</value>
  </data>
  <data name="Reset_d" xml:space="preserve">
    <value>Raised after Reset menu item is clicked</value>
  </data>
  <data name="Delete_d" xml:space="preserve">
    <value>Raised after Delete menu item is clicked</value>
  </data>
  <data name="Deleted" xml:space="preserve">
    <value>Deleted</value>
    <comment>Tooltip</comment>
  </data>
  <data name="Changed" xml:space="preserve">
    <value>Changed</value>
    <comment>Tooltip</comment>
  </data>
  <data name="NA" xml:space="preserve">
    <value>N/A</value>
    <comment>Tooltip</comment>
  </data>
  <data name="New_" xml:space="preserve">
    <value>New</value>
    <comment>Tooltip</comment>
  </data>
  <data name="Normal" xml:space="preserve">
    <value>Normal</value>
    <comment>Tooltip</comment>
  </data>
  <data name="Null" xml:space="preserve">
    <value>Null</value>
    <comment>Tooltip</comment>
  </data>
  <data name="AutomaticLists_d" xml:space="preserve">
    <value>Indicates if editor uses automatically shared lists of keywords and synonyms (among instances with same AutoCompleteCacheName) or not.</value>
  </data>
  <data name="DisplayStype_d" xml:space="preserve">
    <value>Gets or sets format string used to display name of encodings in list.
{0} is replaced by user friendly encoding name, {1} is replaced with IANA-registered name and {2} is replaced with code page number</value>
  </data>
  <data name="Style_d" xml:space="preserve">
    <value>Defines control used for showing encodings</value>
  </data>
  <data name="SelectedIndexChanged_d" xml:space="preserve">
    <value>Raised after the SelectedIndex property is changed</value>
  </data>
  <data name="SelectedCodePage_d" xml:space="preserve">
    <value>Gets code page identifier of selected encoding or tries to select encoding with given code page</value>
  </data>
  <data name="SelectedName_d" xml:space="preserve">
    <value>Gets The Internet Assigned Numbers Authority (IANA) name of selected encoding or tries to select encoding with given name</value>
  </data>
  <data name="NameColumnHeaderWidth_d" xml:space="preserve">
    <value>Defines width of ColumnHeader which displays Name of encoding. Applicable only when Style is ListView</value>
  </data>
  <data name="DisplayNameColumnHeaderWidth_d" xml:space="preserve">
    <value>Defines width of ColumnHeader which displays DisplayName of encoding. Applicable only when Style is ListView</value>
  </data>
  <data name="CodePageColumnHeaderWidht_d" xml:space="preserve">
    <value>Defines width of ColumnHeader which displays CodePage of encoding. Applicable only when Style is ListView</value>
  </data>
  <data name="NameColumnHeaderText_d" xml:space="preserve">
    <value>Gets or sets text of ColumnHeader which displays Name of encoding. Applicable only when Style is ListView</value>
  </data>
  <data name="DisplayNameColumnHeaderText_d" xml:space="preserve">
    <value>Gets or sets text of ColumnHeader which displays DisplayName of encoding. Applicable only when Style is ListView</value>
  </data>
  <data name="CodePageColumnHeaderText_d" xml:space="preserve">
    <value>Gets or sets text of ColumnHeader which displays CodePage of encoding. Applicable only when Style is ListView</value>
  </data>
  <data name="Sorting_d" xml:space="preserve">
    <value>Specifies column and order of sorting. Applies only when Style is ListBox.</value>
  </data>
  <data name="ColumnOrder_d" xml:space="preserve">
    <value>Gets or sets order of columns of ListView when Style is ListView</value>
  </data>
  <data name="ItemDoubleClick_d" xml:space="preserve">
    <value>Raised when Style is ListView or ListBox and user double clicks some item or raised when item is selected and user presses the enter key not depending on Style.</value>
  </data>
  <data name="ShowInheritedMembers_d" xml:space="preserve">
    <value>Gets or sets value indicating if inherited members are shown.</value>
  </data>
  <data name="ShowFlatNamespaces_d" xml:space="preserve">
    <value>Gets or sets value indicating if namespaces are shown flat (true) or hierarchically (false).</value>
  </data>
  <data name="ShowNestedTypes_d" xml:space="preserve">
    <value>Gets or sets value indicating if nested types are shown.</value>
  </data>
  <data name="ShowPrivateMembers_d" xml:space="preserve">
    <value>Gets or sets value indicating if private members are shown.</value>
  </data>
  <data name="ShowInternalMembers_d" xml:space="preserve">
    <value>Gets or sets value indicating if Internal members are shown.</value>
  </data>
  <data name="ShowProtectedMembers_d" xml:space="preserve">
    <value>Gets or sets value indicating if Protected members are shown.</value>
  </data>
  <data name="ShowInstanceMembers_d" xml:space="preserve">
    <value>Gets or sets value indicating if instance members are shown.</value>
  </data>
  <data name="ShowStaticMembers_d" xml:space="preserve">
    <value>Gets or sets value indicating if static members are shown.</value>
  </data>
  <data name="ShowSpecialMembers_d" xml:space="preserve">
    <value>Gets or sets value indicating if special members (parts of properties and events) are shown.</value>
  </data>
  <data name="ShowGlobalMembers_d" xml:space="preserve">
    <value>Gets or sets value indicating if Global members (parts of properties and events) are shown.</value>
  </data>
  <data name="ShowProperties_d" xml:space="preserve">
    <value>Gets or sets value indicating if properties are shown.</value>
  </data>
  <data name="ShowEvents_d" xml:space="preserve">
    <value>Gets or sets value indicating if Events are shown.</value>
  </data>
  <data name="ShowMethods_d" xml:space="preserve">
    <value>Gets or sets value indicating if Methods are shown.</value>
  </data>
  <data name="ShowFields_d" xml:space="preserve">
    <value>Gets or sets value indicating if Fields are shown.</value>
  </data>
  <data name="ShowCTors_d" xml:space="preserve">
    <value>Gets or sets value indicating if CTors are shown.</value>
  </data>
  <data name="ShowInitializers_d" xml:space="preserve">
    <value>Gets or sets value indicating if Initializers are shown.</value>
  </data>
  <data name="ShowGenericArguments_d" xml:space="preserve">
    <value>Gets or sets value indicating if generic arguments (type parameters) are shown.</value>
  </data>
  <data name="ShowReferences_d" xml:space="preserve">
    <value>Gets or sets value indicating if references are shown.</value>
  </data>
  <data name="ShowBaseTypes_d" xml:space="preserve">
    <value>Gets or sets value indicating if base types are shown.</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="ShowChanged_d" xml:space="preserve">
    <value>Raised after property that controls which members are displayed in ListView was changed.</value>
  </data>
  <data name="ShowShowMenu_d" xml:space="preserve">
    <value>Gets or sets value indicating if Show menu is shown.</value>
  </data>
  <data name="ShowToolbar_d" xml:space="preserve">
    <value>Gets or sets value indicating if the toolbar is shown.</value>
  </data>
  <data name="Objects_d" xml:space="preserve">
    <value>List of assemblies or any other objects listed at top-level of tree-view</value>
  </data>
  <data name="BaseTypes" xml:space="preserve">
    <value>Base Types</value>
  </data>
  <data name="References" xml:space="preserve">
    <value>References</value>
  </data>
  <data name="ProgressBarStyle_d" xml:space="preserve">
    <value>Style of ProgressBar that shows progresss</value>
  </data>
  <data name="CloseOnFinish_d" xml:space="preserve">
    <value>Indicates if form automatically closes when BackgroundWorker finishes its work.</value>
  </data>
  <data name="Prompt_d" xml:space="preserve">
    <value>Information text displayed in upper part of form</value>
  </data>
  <data name="Information_d" xml:space="preserve">
    <value>Informative text displayed below the progress bar</value>
  </data>
  <data name="CanCancel_d" xml:space="preserve">
    <value>Indicates if dialog supports cancelation.</value>
  </data>
  <data name="DoWorkOnShow_d" xml:space="preserve">
    <value>When true form will automatically start BackgroundWorker whne the Shown events occurs.</value>
  </data>
  <data name="WorkerArgument_d" xml:space="preserve">
    <value>Argument passed to RunWorkerAsync method when DoWorkOnShow is true.</value>
  </data>
  <data name="PasteManyLines" xml:space="preserve">
    <value>There are {0} lines of text in clipboard. Do you want to paste them as keywords?</value>
  </data>
  <data name="ContextMenuEnabled_d" xml:space="preserve">
    <value>Indicates if conext menu on ListBox with keywords is enabled</value>
  </data>
  <data name="ShortcutsEnabled_d" xml:space="preserve">
    <value>Indicates if keyboard shortcuts for clipboard manipulation are enabled</value>
  </data>
  <data name="DisplayMemberList_d" xml:space="preserve">
    <value>Indicates if member list is shown</value>
  </data>
  <data name="DisplayProperties_d" xml:space="preserve">
    <value>Indicates if property grid is shown</value>
  </data>
  <data name="DisplayDescription_d" xml:space="preserve">
    <value>Indicates if description pane is shown</value>
  </data>
  <data name="DisplayChanged_d" xml:space="preserve">
    <value>Raised when value of any properties indicating which parts of UI to show changes.</value>
  </data>
  <data name="ItemFiltering_d" xml:space="preserve">
    <value>Raised when item is about to be displayed to user. Operation can be cancelled.</value>
  </data>
</root>