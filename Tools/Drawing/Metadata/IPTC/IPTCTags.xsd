<?xml version="1.0" encoding="utf-8" ?>
<xs:schema id="ExifTags"
                  targetNamespace="http://codeplex.com/DTools/IPTCTags"
                  elementFormDefault="qualified"
                  xmlns="http://codeplex.com/DTools/IPTCTags"
                  xmlns:xs="http://www.w3.org/2001/XMLSchema"
                  xmlns:IPTC="http://codeplex.com/DTools/IPTCTags"
           >
    <xs:annotation>
        <xs:documentation>This XML schema defines structure of file used to generate classes and enums to work with IPTC tags. This schema is designed for private use when developing this project only.</xs:documentation>
    </xs:annotation>
    
    <!--Simple types:-->
    <xs:simpleType name="Categories">
        <xs:restriction base="xs:token">
            <xs:enumeration value="Old IPTC">
                <xs:annotation>
                    <xs:documentation>IPTC data that is not widely in use today.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Date">
                <xs:annotation>
                    <xs:documentation>Date and time fields</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Status">
                <xs:annotation>
                    <xs:documentation>Status and priority fields</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Category">
                <xs:annotation>
                    <xs:documentation>Categorization</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Location">
                <xs:annotation>
                    <xs:documentation>Localization</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Title">
                <xs:annotation>
                    <xs:documentation>Titles and descriptions</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Other">
                <xs:annotation>
                    <xs:documentation>Miscaleneous information</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Internal">
                <xs:annotation>
                    <xs:documentation>Internal IPTC information used for service purpuses</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Author">
                <xs:annotation>
                    <xs:documentation>Author and ©opyright information</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Image">
                <xs:annotation>
                    <xs:documentation>Image related data</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Audio">
                <xs:annotation>
                    <xs:documentation>Audio related data</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Embeded object">
                <xs:annotation>
                    <xs:documentation>Data related to object embeded in IPTC stream</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <!--Sepecification of attribute-->
    <xs:simpleType name="Attributes">
        <xs:restriction base="xs:string">
            <xs:pattern value="(&lt;(([\p{L}_]+)|(\[[\p{L}_]+\]))(\.[\p{L}_]+)* *\([^\n\r\t]*\)>)+"/>
        </xs:restriction>
    </xs:simpleType>
    <!--Record number 1÷9-->
    <xs:simpleType name="IPTCRecordNumber">
        <xs:annotation>
            <xs:documentation>Valid values for IPTC records numbers</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:unsignedByte">
            <xs:minInclusive value="1"/>
            <xs:maxInclusive value="9"/>
        </xs:restriction>
    </xs:simpleType>
    <!--Length of dataset up to 32767-->
    <xs:simpleType name="LengthSpec">
        <xs:annotation>
            <xs:documentation>Valid lengths for IPTC tags (datasets) lengths</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:unsignedInt">
            <xs:maxInclusive value="32767"/>
        </xs:restriction>
    </xs:simpleType>
    <!--Tag types-->
    <xs:simpleType name="TagType">
        <xs:annotation>
            <xs:documentation>Known types of IPTC data</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:NCName">
            <xs:enumeration value="UnsignedBinaryNumber">
                <xs:annotation>
                    <xs:documentation>Unsigned binary number of variable length</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Boolean-binary">
                <xs:annotation>
                    <xs:documentation>Binary stored number interpreted as False if 0, True otherwise</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Byte-binary">
                <xs:annotation>
                    <xs:documentation>1 Byte unsigned integer stored binary (must have fixed length 1 byte)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="UShort-binary">
                <xs:annotation>
                    <xs:documentation>2 Byte unsigned integer stored binary (must have fixed length 2 bytes)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NumericChar">
                <xs:annotation>
                    <xs:documentation>Numeric characters (number stored as ASCII string)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GraphicCharacters">
                <xs:annotation>
                    <xs:documentation>Graphic characters (no whitespaces, no cotrol characters)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TextWithSpaces">
                <xs:annotation>
                    <xs:documentation>Graphic characters and spaces (no tabs, endlines or control characters)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Text">
                <xs:annotation>
                    <xs:documentation>Graphic cgaracters, spaces and enters (no tabs, no control characters)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BW460">
                <xs:annotation>
                    <xs:documentation>Monochrome bitmap of width 460px</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Enum-binary">
                <xs:annotation>
                    <xs:documentation>Enumeration choice stored binary (actual enumeration is reffered by enum attribute)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Enum-NumChar">
                <xs:annotation>
                    <xs:documentation>Enumeration choice stored as numeric characters (actual enumeration is reffred by enum attribute), names contained in enums must fit into number of bytes reserved.)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CCYYMMDD">
                <xs:annotation>
                    <xs:documentation>Date format YYYYMMDD as of ISO 8601 stored as ASCII numeric string (must have fixed length 8 bytes)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CCYYMMDDommitable">
                <xs:annotation>
                    <xs:documentation>Date format YYYYMMDD as of ISO 8601 stored as ASCII numeric string (must have fixed length 8 bytes). Where the month or day cannot be determined, the information will be represented by “00”. Where the year cannot be determined, the information for century and year will be represented by “00”.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="HHMMSS-HHMM">
                <xs:annotation>
                    <xs:documentation>Time in format HHMMSS±HHMM where HHMMSS reffers to local time and ±HHMM offset from UTC (as described in ISO 8601). (stored as numeric characters must have fixed size 11)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ByteArray">
                <xs:annotation>
                    <xs:documentation>Array of unsigned bytes</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="UNO">
                <xs:annotation>
                    <xs:documentation>Graphic characters where '*' and '?' are not allowed and ':' and '/' have special meaning. UNO consists of UCD, IPR, ODE and OVI separated by ':'. There are inner structure and rules for UNO.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Num2-Str">
                <xs:annotation>
                    <xs:documentation>2 numeric characters followed by mandatory colon (so, lenght is minimally 3) and optional text part of variable lenght. It can be specified that number must be from specific enumeration by the enum attribute. Target enum must contain only maximally 2 digits long numbers!</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Num3-Str">
                <xs:annotation>
                    <xs:documentation>3 numeric characters followed by mandatory colon (so, lenght is minimally 4) and optional text part of variable lenght. It can be specified that number must be from specific enumeration by the enum attribute. Target enum must contain only maximally 3 digits long numbers!</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SubjectReference">
                <xs:annotation>
                    <xs:documentation>Structured description of amtter of objectstored as graphic characters (as defined by IPTC)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Alpha">
                <xs:annotation>
                    <xs:documentation>Alphabetic (Latin) character(s)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="StringEnum">
                <xs:annotation>
                    <xs:documentation>String enumeration. Actual type specified in enum attribute.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ImageType">
                <xs:annotation>
                    <xs:documentation>Two octets. The first octet is a numeric character and the second is an alphabetic character.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AudioType">
                <xs:annotation>
                    <xs:documentation>Two octets. The first octet is a numeric character, while the second is an alphabetic character.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="HHMMSS">
                <xs:annotation>
                    <xs:documentation>Six octets, consisting of numeric characters. Duration Designates in the form HHMMSS</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <!--Name for VB (without leading _)-->
    <xs:simpleType name="Name">
        <xs:annotation>
            <xs:documentation>Name for programming language</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:NCName">
            <xs:pattern value="[^-_][^-]*"/>
        </xs:restriction>
    </xs:simpleType>
    <!--VB integers-->
    <xs:simpleType name="NETIntegrals">
        <xs:annotation>
            <xs:documentation>Integrl types defined in .NET</xs:documentation>
        </xs:annotation>
        <xs:restriction base="Name">
            <xs:enumeration value="Byte">
                <xs:annotation>
                    <xs:documentation>Unsigned 1-Byte integer</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SByte">
                <xs:annotation>
                    <xs:documentation>Signed 1-Byte integer</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Short">
                <xs:annotation>
                    <xs:documentation>Signed 2-Bytes integer</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="UShort">
                <xs:annotation>
                    <xs:documentation>Unsigned 2-Bytes integer</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Integer">
                <xs:annotation>
                    <xs:documentation>Signed 4-Bytes integer</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="UInteger">
                <xs:annotation>
                    <xs:documentation>Unsigned 4-Bytes integer</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Long">
                <xs:annotation>
                    <xs:documentation>Signed 8-Bytes integer</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ULong">
                <xs:annotation>
                    <xs:documentation>Unsigned 8-Bytes integer</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <!--<xs:simpleType name="Int-Str">
        <xs:union memberTypes="NETIntegrals">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="String">
                        <xs:annotation>
                            <xs:documentation>Special type of enum thal enlists string values</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>    -->
    <!--Root:-->
    <xs:element name="Root">
        <xs:annotation>
            <xs:documentation>IPTC tags specification</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="record" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <!--Attributes for XSLT-->
            <xs:attribute name="transformer" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>Addres or name of XSLT file used to generate code from this XML</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Stage" use="required">
                <xs:annotation>
                    <xs:documentation>Stage of dicumment used for conditiona compilation</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="Nightly">
                            <xs:annotation>
                                <xs:documentation>Generated code is in Nightly stage</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="Alpha">
                            <xs:annotation>
                                <xs:documentation>Generated code is in Alpha stage</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="Beta">
                            <xs:annotation>
                                <xs:documentation>Generated code is in Beta stage</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="RC">
                            <xs:annotation>
                                <xs:documentation>Generated code is in Release Candidate stage</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="Release">
                            <xs:annotation>
                                <xs:documentation>Generated code is in Release stage</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
        <!--Constraints-->
        <xs:unique name="unqTagName">
            <xs:selector xpath="IPTC:record/IPTC:tag | IPTC:record/IPTC:group/IPTC:tag"/>
            <xs:field xpath="@name"/>
        </xs:unique>
        <xs:unique name="unqTagHumanName">
            <xs:selector xpath="IPTC:record/IPTC:tag | IPTC:record/IPTC:group/IPTC:tag"/>
            <xs:field xpath="@human-name"/>
        </xs:unique>
        <xs:unique name="allNames">
            <xs:selector xpath="IPTC:record/IPTC:tag | IPTC:record/IPTC:group/IPTC:tag | IPTC:record/IPTC:group"/>
            <xs:field xpath="@name"/>
        </xs:unique>
        <xs:unique name="allHuman-Names">
            <xs:selector xpath="IPTC:record/IPTC:tag | IPTC:record/IPTC:group/IPTC:tag | IPTC:record/IPTC:group"/>
            <xs:field xpath="@human-name"/>
        </xs:unique>
        <xs:unique name="unqRecordNumber">
            <xs:selector xpath="IPTC:record"/>
            <xs:field xpath="@number"/>
        </xs:unique>
        <xs:unique name="unqRecordName">
            <xs:selector xpath="IPTC:record"/>
            <xs:field xpath="@name"/>
        </xs:unique>
        <xs:unique name="unqRecordHumanName">
            <xs:selector xpath="IPTC:record"/>
            <xs:field xpath="@human-name"/>
        </xs:unique>
        <xs:key name="keyEnum">
            <xs:selector xpath="IPTC:record/IPTC:enum | IPTC:record/IPTC:senum"/>
            <xs:field xpath="@name"/>
        </xs:key>
        <xs:keyref name="EnumReference" refer="keyEnum">
            <xs:selector xpath="IPTC:record/IPTC:tag | IPTC:record/IPTC:group/IPTC:tag"/>
            <xs:field xpath="@enum"/>
        </xs:keyref>
    </xs:element>

    <!--Elements:-->
    <!--Tag-->
    <xs:element name="tag" type="tagType">
        <xs:annotation>
            <xs:documentation>Definition of one IPTC tag (dataset)</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="tagType">
        <xs:group ref="XMLDoc" minOccurs="1" maxOccurs="1"/>
        <xs:attributeGroup ref="attributes"/>
        <!--Basic info-->
        <xs:attribute name="number" type="xs:unsignedByte" use="required">
            <xs:annotation>
                <xs:documentation>Number of this tag (dataset)</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attributeGroup ref="Names"/>
        <!--Flags-->
        <xs:attribute name="mandatory" type="xs:boolean" use="required">
            <xs:annotation>
                <xs:documentation>Defines if tag is mandatory (accorting to IPTC standard) or not (valid in context of group or record). There must be at least one mandatory tag in each group.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="repeatable" type="xs:boolean" use="required">
            <xs:annotation>
                <xs:documentation>Defines if tag is repeatable or not (valid within record or group)</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="fixed" type="xs:boolean" use="required">
            <xs:annotation>
                <xs:documentation>Defines of tag data has fixed length (if true length is specified in length)</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="category" type="Categories" use="required">
            <xs:annotation>
                <xs:documentation>Category of rendered property</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <!--Type-->
        <xs:attribute name="type" type="TagType" use="required">
            <xs:annotation>
                <xs:documentation>Type of contained data</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="enum" type="Name" use="optional">
            <xs:annotation>
                <xs:documentation>If type is enum then put reference to enum here</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="length" type="LengthSpec" use="required">
            <xs:annotation>
                <xs:documentation>Maximum (if fixed is false) length in bytes of tag data. 0 for no limit (same effect 32767). For fixed 0 is prohibited.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    <!--Record (number group of tags)-->
    <xs:element name="record">
        <xs:annotation>
            <xs:documentation>Definition of one IPTC record (group of tags)</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence minOccurs="1" maxOccurs="1">
                <xs:group ref="XMLDoc" minOccurs="1" maxOccurs="1"/>
                <xs:element minOccurs="1" maxOccurs="1" ref="tag"/>
                <xs:sequence minOccurs="1" maxOccurs="unbounded">
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="tag"/>
                    <xs:element ref="enum" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="senum" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="group"/>
                </xs:sequence>
            </xs:sequence>
            <xs:attribute name="number" type="IPTCRecordNumber" use="required">
                <xs:annotation>
                    <xs:documentation>Number of this record (group of tags). Range 1÷9</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attributeGroup ref="Names"/>
        </xs:complexType>
        <xs:unique name="unqTag">
            <xs:selector xpath="IPTC:tag | IPTC:group/IPTC:tag"/>
            <xs:field xpath="@number"/>
        </xs:unique>
    </xs:element>
    <!--Enum definition-->
    <xs:element name="enum">
        <xs:annotation>
            <xs:documentation>Represents enumeration of values</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence minOccurs="1" maxOccurs="1">
                <xs:group maxOccurs="1" minOccurs="1" ref="XMLDoc"/>
                <xs:element minOccurs="1" maxOccurs="unbounded" name="item">
                    <xs:annotation>
                        <xs:documentation>Item of enumeration</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence minOccurs="1" maxOccurs="1">
                            <xs:group minOccurs="0" maxOccurs="1" ref="remarks"/>
                        </xs:sequence>
                        <xs:attributeGroup ref="Names"/>
                        <xs:attributeGroup ref="attributes"/>
                        <xs:attribute name="value" type="xs:long" use="required">
                            <xs:annotation>
                                <xs:documentation>Value of enum item</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attributeGroup ref="desc"/>
                    </xs:complexType>                    
                </xs:element>
            </xs:sequence>
            <xs:attributeGroup ref="EnumAttrs"/>
            <xs:attribute name="type" type="NETIntegrals" use="required">
                <xs:annotation>
                    <xs:documentation>Type of this enumeration</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
        <xs:unique name="unqInEnumName">
            <xs:selector xpath="IPTC:item"/>
            <xs:field xpath="@name"/>
        </xs:unique>
        <xs:unique name="unqInEnumValue">
            <xs:selector xpath="IPTC:item"/>
            <xs:field xpath="@value"/>
        </xs:unique>
    </xs:element>
    <xs:attributeGroup name="EnumAttrs">
        <xs:attributeGroup ref="attributes"/>
        <xs:attribute name="name" type="Name" use="required">
            <xs:annotation>
                <xs:documentation>Name of this enumeration for programming language</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="restrict" type="xs:boolean" default="true" use="optional">
            <xs:annotation>
                <xs:documentation>Indicates if only listed values can be assigned to field. Default value is true.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>
    <xs:element name="senum">
        <xs:annotation>
            <xs:documentation>Represents enumeration of string values</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence minOccurs="1" maxOccurs="1">
                <xs:group maxOccurs="1" minOccurs="1" ref="XMLDoc"/>
                <xs:element minOccurs="1" maxOccurs="unbounded" name="item">
                    <xs:annotation>
                        <xs:documentation>Item of enumeration</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence minOccurs="1" maxOccurs="1">
                            <xs:group minOccurs="0" maxOccurs="1" ref="remarks"/>
                        </xs:sequence>
                        <xs:attributeGroup ref="Names"/>
                        <xs:attributeGroup ref="attributes"/>
                        <xs:attribute name="value" type="xs:string" use="required">
                            <xs:annotation>
                                <xs:documentation>Value of enum item</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attributeGroup ref="desc"/>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attributeGroup ref="EnumAttrs"/>
            <xs:attribute name="type" use="required" fixed="String">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="String">
                            <xs:annotation>
                                <xs:documentation>Type of senum must be always string</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
        <xs:unique name="unqInSEnumName">
            <xs:selector xpath="IPTC:item"/>
            <xs:field xpath="@name"/>
        </xs:unique>
        <xs:unique name="unqInSEnumValue">
            <xs:selector xpath="IPTC:item"/>
            <xs:field xpath="@value"/>
        </xs:unique>
    </xs:element>
    <!--Logical group of tags-->
    <xs:element name="group">
        <xs:annotation>
            <xs:documentation>Group of tags (records) that has some ralation between</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence minOccurs="1" maxOccurs="1">
                <xs:group minOccurs="1" maxOccurs="1" ref="XMLDoc"/>
                <xs:element name="tag" minOccurs="2" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:restriction base="tagType">
                                <xs:group ref="XMLDoc" minOccurs="1" maxOccurs="1"/>
                                <xs:attribute name="repeatable" use="required">
                                    <xs:simpleType>
                                        <xs:restriction base="xs:boolean">
                                            <xs:pattern value="0|false"/> 
                                        </xs:restriction>
                                    </xs:simpleType>
                                </xs:attribute>
                            </xs:restriction>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attributeGroup ref="Names"/>
            <xs:attributeGroup ref="attributes"/>
            <xs:attribute name="mandatory" type="xs:boolean" use="required">
                <xs:annotation>
                    <xs:documentation>Is this group required?</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="repeatable" type="xs:boolean" use="required">
                <xs:annotation>
                    <xs:documentation>Can this group appear multiple times?</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="category" type="Categories" use="required">
                <xs:annotation>
                    <xs:documentation>Category of rendered property</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    
    <!--Attribute groups:-->
    <!--name and human-name-->
    <xs:attributeGroup name="Names">
        <xs:attribute name="name" type="Name" use="required">
            <xs:annotation>
                <xs:documentation>Name of the group (will be rendered as property)</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="human-name" type="xs:token" use="required">
            <xs:annotation>
                <xs:documentation>Human-readable name of group</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>
    <!--<! - -desc and remarks- ->
    <xs:attributeGroup name="XMLDoc">
        <xs:attributeGroup ref="desc"/>
        <xs:attributeGroup ref="remarks"/>
    </xs:attributeGroup>-->
    <!--desc-->
    <xs:attributeGroup name="desc">
        <xs:attribute name="desc" type="xs:token" use="required">
            <xs:annotation>
                <xs:documentation>Description of item (will be rendered as XML-doc comment summary)</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>
    <!--remarks
    <xs:attributeGroup name="remarks">
        <xs:attribute name="remarks" type="xs:token" use="optional">
            <xs:annotation>
                <xs:documentation>Additional info for item (will be rendered as XML-doc comment remarks)</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>-->
    <!--attributes-->
    <xs:attributeGroup name="attributes">
        <xs:attribute name="attributes" type="Attributes" use="optional">
            <xs:annotation>
                <xs:documentation>.NET attributes applyed on element</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>
   
    <!--Embeded XML docummentation:-->
    <xs:group name="XMLDoc">
        <xs:sequence>
            <xs:element name="desc" type="XMLDoc" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Description of this item. Content of this element will be rendered as is into XML-doc &lt;summary/></xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:group ref="remarks" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:group>
    <xs:group name="remarks">
        <xs:sequence>
            <xs:element name="remarks" type="XMLDoc" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Additional info for this item. Content of this element will be rendered as is into XML-doc &lt;remarks/></xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <xs:complexType name="XMLDoc" mixed="true">
        <xs:annotation>
            <xs:documentation>Represents item which's content is XML documentation</xs:documentation>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="see" type="reference">
                <xs:annotation>
                    <xs:documentation>Reference to code member</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="seealso" type="reference">
                <xs:annotation>
                    <xs:documentation>Reference to code members (this will be shown in the seealso list)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="para" type="XMLDoc">
                <xs:annotation>
                    <xs:documentation>Renders as paragraph</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="list">
                <xs:annotation>
                    <xs:documentation>Renders as list or table</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence minOccurs="1" maxOccurs="1">
                        <xs:element name="listheader" minOccurs="0" maxOccurs="1" type="listItem">
                            <xs:annotation>
                                <xs:documentation>Header of the list</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="item" minOccurs="0" maxOccurs="unbounded" type="listItem">
                            <xs:annotation>
                                <xs:documentation>Item of the list</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="type" use="optional">
                        <xs:annotation>
                            <xs:documentation>Type of the list</xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="table">
                                    <xs:annotation>
                                        <xs:documentation>Two columns table with pairs term and description</xs:documentation>
                                    </xs:annotation>
                                </xs:enumeration>
                                <xs:enumeration value="bullet">
                                    <xs:annotation>
                                        <xs:documentation>Bulleted list</xs:documentation>
                                    </xs:annotation>
                                </xs:enumeration>
                                <xs:enumeration value="number">
                                    <xs:annotation>
                                        <xs:documentation>Numbered list</xs:documentation>
                                    </xs:annotation>
                                </xs:enumeration>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="c" type="XMLDoc">
                <xs:annotation>
                    <xs:documentation>Short code</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="code" type="XMLDoc">
                <xs:annotation>
                    <xs:documentation>Longer code</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="example" type="XMLDoc">
                <xs:annotation>
                    <xs:documentation>Example</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="paramref">
                <xs:annotation>
                    <xs:documentation>Reference to parameter</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="XMLDoc">
                            <xs:attribute name="name">
                                <xs:annotation>
                                    <xs:documentation>Name of parameter</xs:documentation>
                                </xs:annotation>
                                <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                        <xs:pattern value="[\p{L}_]+|\[[\p{L}_]+\]"/>
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:attribute>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="reference">
        <xs:attribute name="cref" use="required">
            <xs:annotation>
                <xs:documentation>Referenced item</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="([\p{L}_]+|\[[\p{L}_]+\])(\.[\p{L}_]+)*"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="listItem">
        <xs:complexContent mixed="true">
            <xs:extension base="XMLDoc">
                <xs:sequence minOccurs="0" maxOccurs="1">
                    <xs:element name="term" type="XMLDoc" minOccurs="1" maxOccurs="1">
                        <xs:annotation>
                            <xs:documentation>Defines left table column (term being described in right one)</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="description" type="XMLDoc" minOccurs="1" maxOccurs="1">
                        <xs:annotation>
                            <xs:documentation>Defines right table column (definition)</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
</xs:schema>
