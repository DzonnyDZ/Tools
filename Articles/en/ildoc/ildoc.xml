<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="ildoc.xml.css" type="text/css"?>
<ildoc xmlns="http://dzonny.cz/xml/ildoc" id="ildoc" guid="25e7bd25-3621-4b5b-bc3e-5f9b6ba848d4">
    <header>CIL Quick referecne</header>
    <introduction>
        This guide describes various low-level parts of .NET framework.
        Big attension is given to Common Inermediate Language syntax, metadata and instruction-set.
    </introduction>
    <!--Formatting-->
    <formatting id="formatting" guid="0bf4d96b-2001-4d76-b7dc-511a1b3810e2">
        <header>Formatting and regular expressions</header>
        <introduction>This section describes formatting and regular expressions (syntax grammar) used in this CLI Quick reference guide.</introduction>
        <dl>
            <dt-code>Code</dt-code>
            <dd>Code is anything that originates from the CIL language including regular expressions (syntax definitions) and .NET type names.</dd>
            <dt-code-ref>Reference in code</dt-code-ref>
            <dd>
                This is used in regular expressions (syntax definitions) to mark element (terminal or non-terminal) being declared elsewhere.
                It is also used to mark variables explained immediatelly below.
            </dd>
            <dt>note reference</dt>
            <dd>
                Reference to note is never formated as code.
                This way it is possible to distinguish when asterisk (*) is part of regular expression and when it is reference to note.
                Compare <code>*</code> and *.
            </dd>
            <dt>Regular expressions</dt>
            <dd>
                Regular expressions for syntax definitions are losely based on .NET reguler expressions and grammar used for CLI grammas pecification.
                These expressions are not meant to be machine-readable, so some improvements towards human readability have been done possibly preventing those expressions from beingin machine-interpretable or unambignously defined.
            </dd>
            <dd>
                Any text which appears in regular expression is treated as string-literal (as-is) with exception of <code>*</code>, <code>+</code>, <code>?</code>, <code>(</code>, <code>)</code>, <code>[</code>, <code>]</code>, <code>\</code>, <code>|</code>.
                Dot (<code>.</code>) is treated as special character only when followed by <code>*</code>, <code>?</code>, <code>+</code> or <code>{</code> or inside <code>[]</code>.
                <code>{</code> and <code>}</code> are treated as special characters only if used as specified below.
                <code>,</code>, <code>-</code> and <code>^</code> are treated as special character only in contexts specified below.
                Whitespaces in expressions are ignored or not depending on context. Usually sequnce of whitespaces is treated as any number opf any whitespaces. Sometimes whitespaces can be used instead of braces - see below.
            </dd>
            <dl>
                <dt-code>*</dt-code>
                <dd>Any number of occurences</dd>
                <dd><code>a*</code> matches <code>''</code>, <code>'a'</code>, <code>'aa'</code>, <code>'aaa'</code> etc.</dd>
                <dt-code>+</dt-code>
                <dd>Any number of occurences other than no occurence.</dd>
                <dd><code>a+</code> matches <code>'a'</code>, <code>'aa'</code>, <code>'aaa'</code> etc.</dd>
                <dt-code>?</dt-code>
                <dd>Zero or one occurence</dd>
                <dd><code>a?</code> matches <code>''</code> and <code>'a'</code></dd>
                <dt-code>{<ref>n</ref>}</dt-code>
                <dd>Exactly <code-ref>n</code-ref> occurences</dd>
                <dd><code>a{3}</code> matches <code>'aaa'</code></dd>
                <dt-code>{<ref>m</ref>,<ref>n</ref>}</dt-code>
                <dd>Mininally <code-ref>m</code-ref>, maximally <code-ref>n</code-ref> occurences</dd>
                <dd><code>a{1,3}</code> matches <code>'a'</code>, <code>'aa'</code> and <code>'aaa'</code></dd>
                <dt-code>{}</dt-code>
                <dd>Matches block of CIL code enclosed in <code>{}</code>. Allowd code in block is specified in this guide.</dd>
                <dt-code>{|}</dt-code>
                <dd>Flag-or. One or more elements of set can be used any any order without repetitions.</dd>
                <dd><code>{a|b|c}</code> matches <code>''</code>, <code>'a'</code>, <code>'b'</code>, <code>'c'</code>, <code>'ab'</code>, <code>'ba'</code>, <code>'ac'</code>, <code>'ca'</code>, <code>'bc'</code>, <code>'cb'</code>, <code>'abc'</code>, <code>'acb'</code>, <code>'bac'</code>, <code>'cab'</code>, <code>'cba'</code>.</dd>
                <dt-code>()</dt-code>
                <dd>Classical braces</dd>
                <dd><code>(ab)+</code> matches <code>'ab'</code>, <code>'abab'</code> etc.</dd>
                <dt-code>[]</dt-code>
                <dd>More meanings:</dd>
                <dl>
                    <dt>Group specifier</dt>
                    <dd>Trated this way only when cointains not-escaped <code>-</code> and does not contain not-escaped <code>|</code>.</dd>
                    <dd>Inside group specifier only <code>-</code>, <code>]</code>, <code>|</code> and <code>^</code> are treated as special characters.</dd>
                    <dd><code>[A-Zů]</code> matches <code>'A'</code>, <code>'B'</code>, <code>'C'</code>, ..., <code>'Z'</code> and <code>'ů'</code>.</dd>
                    <dd><code>[A-Z]+</code> matches <code>'A'</code>, <code>'B'</code>, <code>'AB'</code>, <code>'GAG'</code>, <code>'HUIGG'</code>.</dd>
                    <dt>Inverted group specifier</dt>
                    <dd>
                        In case <code>[</code> is immediatelly followed by <code>^</code>.
                        Does not have to contain not-escaped <code>-</code> and can contain not-escaped <code>|</code>.
                        Only <code>-</code>, <code>]</code> and <code>^</code> are treated as special-characters inside inverted group specifier.
                    </dd>
                    <dd><code>[^c-ek]</code> does <b>not</b> match <code>'c'</code>, <code>'d'</code>, <code>'e'</code>, <code>'k'</code>.</dd>
                    <dt>Normal braces (just like <code>()</code>)</dt>
                    <dd>In case it does not contain not-escaped <code>-</code>, does not begin with <code>^</code> and is followed by one of quantifiers <code>*</code>, <code>+</code>, <code>?</code>, <code>{}</code>.</dd>
                    <dd><code>[a]*</code> matches <code>''</code>, <code>'a'</code>, <code>'aa'</code> etc.</dd>
                    <dt>Or</dt>
                    <dd>In case it does not start with <code>^</code> and contains non-escaped <code>|</code>.</dd>
                    <dd>
                        Note that usage of <code>|</code> inside <code>[]</code> slightly differs from its usage outside it or inside <code>()</code>.
                        In <code>[]</code> it behaves like if it has whitespace on both sides even if it does not have them.
                    </dd>
                    <dd>
                        <code>[aaa|bbb]</code> has same meaning as <code>(aaa | bbb)</code> what has same meaning as <code>((aaa)|(bbb))</code> and it has same meaning as <code>[aaa | bbb]</code>.
                        It matches <code>'aaa'</code> or <code>'bbb'</code>.
                    </dd>
                    <dt>Zero or one occurence quantifier</dt>
                    <dd>In all other cases</dd>
                    <dd><code>[ab]</code> matches <code>''</code> or <code>'ab'</code>.</dd>
                </dl>
                <dt-code>\</dt-code>
                <dd>Escape character</dd>
                <dd><code>\*</code> matches <code>'*'</code>, <code>\\</code> matches <code>\</code>, <code>\a</code> matches <code>a</code></dd>
                <dt-code>.</dt-code>
                <dd>Universal character - matches any single character, but onyl when followed by one of quantifiers <code>*</code>, <code>?</code>, <code>+</code> or <code>{}</code>.</dd>
                <dd><code>.?</code> matches <code>''</code>, <code>'.'</code>, <code>'a'</code>, <code>'Ω'</code> etc.</dd>
                <dt-code>|</dt-code>
                <dd>Or - matches contruct on left side or construct on right side.</dd>
                <dd>When specified withoud whitespaces minimal contruct on side without whitespace is taken (typically one letter).</dd>
                <dd>
                    When specified with whitespace maximal construct on site eith whitespace is take.
                    Maximal construct lookup is broken only by reaching scope boundary from inside at same level where <code>|</code> was used.
                    Scope boundaries are introduced by whole expression itself, <code>()</code>, <code>[]</code> and <code>{|}</code> but <code>{|}</code> is irrelevant because <code>|</code> inside <code>{}</code> has slightly different meaning.
                </dd>
                <dd>Note that inside <code>[]</code> <code>|</code> has different behavior (regarding whitespaces around it) then when not in <code>[]</code> - inside <code>[]</code> it always behaves like having whitespace on each side.</dd>
                <dd><code>bye|hi</code> matches <code>'byei'</code> or <code>'byhi'</code>.</dd>
                <dd><code>bye | hi</code> matches <code>'bye'</code> or <code>'hi'</code>.</dd>
            </dl>
            <dt>Color coding</dt>
            <dl>
                <dt><ms-specific>Microsft-specific</ms-specific></dt>
                <dd><ms-specific>
                    Documents functionality or feature that's not part of standard, but is specific to Microsft implementation of .NET Framework.
                    This may be either that Microsft extends CLI with custom fetures, Microsoft clarifies some behavior of .NET Framework or Microsft violates their own standard.
                </ms-specific></dd>
                <dt><undocumented>Undocumented</undocumented></dt>
                <dd><undocumented>
                    Documents undocumented functionality.
                    Such block only simply mentions that there is some undocumented possibility of ilasm or .NET framework or explains the functionality based on explanation found in various sources such as blogs and discussions.
                    This undocumented functionality is usually specific to Microsft implementation of .NET Framework and ilasm.
                </undocumented></dd>
                <dt><new>New</new></dt>
                <dd><new>
                    Documents new functionality of .NET Framework 4.0 (Microsft-specific) which is not yet part of the standard but will be considered for next version.
                </new></dd>
            </dl>
        </dl>
    </formatting>
    <!--Terms-->
    <section id="terms" guid="769c30f5-a581-4199-b99a-4cb64860af64">
        <header>Terms</header>
        <introduction>This section describes common terms and abbreviations used in connection with .NET Framework.</introduction>
        <dl>
            <dt r="I.5">CIL</dt>
            <dt>Common Intermediate Language</dt>
            <dd>The instruction set understood by the VES.</dd>
            <dt r="I.5">CLI</dt>
            <dt>Common Language Infrastructure</dt>
            <dd>A specification for the format of executable code and runtime environment that can execute the code.</dd>
            <dt r="I.5">CLS</dt>
            <dt>Common Language Specification</dt>
            <dt>An agreement between language designers and framework (class library) designers. It specifies subset of the CTS and set of usage conventions.</dt>
            <dt r="I.5">CTS</dt>
            <dt>Common Type Systme</dt>
            <dd>
                A unified type system that is shared by compilers, tools, and the CLI itself. It
                is the model that defines the rules the CLI follows when declaring, using, and managing types. The CTS
                establishes a framework that enables cross-language integration, type safety, and high performance code
                execution.
            </dd>
            <dt r="I.5">VES</dt>
            <dt>Virtual Execution System</dt>
            <dd>
                This system implements and enforces the CTS model. The VES is
                responsible for loading and running programs written for the CLI. It provides the services needed to execute
                managed code and data using the metadata to connect separately generated modules together at runtime. The
                VES is also known as the Execution Engine.
            </dd>
        </dl>
    </section>
    <!--General syntax-->
    <section id="general-syntax" guid="630e459c-215c-4ee8-9015-f1ca5356751b">
        <header>General syntactical constructs</header>
        <introduction>This section describes syntactical elements used in CIL code.</introduction>
        <dl>
            <dt-ref id="Int32" r="II.5.2">Int32</dt-ref>
            <dt-ref id="Int64" r="II.5.2">Int64</dt-ref>
            <dd><code>([+|-][0-9]+)|(0x[0-9A-Fa-f]+)</code></dd>
            <dd>Inegral number in decimal or hexadecimal format. CIL recognizes only 32-bit and 64-bit integral literals. In case 8-bit or 16-bit literal is required, appropriate high part of 32-bit literal is used.</dd>
            <dt-ref id="RealNumber" r="II.5.2">RealNumber</dt-ref>
            <dd><code>[+|-]([0-9]+\.[0-9]+)|([0-9]+(E|e)[0-9]+)|([0-9]+\.[0-9]+(E|e)[+|-]][0-9]+)</code></dd>
            <dd>Real number literal differes from integer literal by having decimal point and/or exponent.</dd>
            <dt-ref id="Float32">Float32</dt-ref>
            <dt-ref id="Float64">Float64</dt-ref>
            <dd><code><ref ref="RealNumber">RealNumber</ref> | float32 \(<ref ref="Int32">Int32</ref>\) | \(<ref ref="Bytes">Bytes</ref>\)</code></dd>
            <dd><code><ref ref="RealNumber">RealNumber</ref> | float64 \(<ref ref="Int32">Int64</ref>\) | \(<ref ref="Bytes">Bytes</ref>\)</code></dd>
            <dd>
                Additionally real number can by entered by static cast from integral number or by byte representation.
                Byte representation is useful for values NaN, +∞ and -∞ when ilasm implementation does not support entering <code>NaN</code>, <code>Inf</code> and <code>-Inf</code> directly.
            </dd>
            <break/>
            <dt-ref id="QSTRING" r="II.5.2">QSTRING</dt-ref>
            <dd><code>"([^"] | \\")*"</code></dd>
            <dd>String value in double quotes (<code>"</code>). Exact behavior of excape character <code>\</code> is implementation-dependent. Used for string literals.</dd>
            <dt-ref id="SQSTRING" r="II.5.2">SQSTRING</dt-ref>
            <dd><code>'([^'] | \\')*'</code></dd>
            <dd>String value in single quotes (<code>'</code>). Exact behavior of escape character <code>\</code> is implementation dependent. Used for indentifiers containign special characters.</dd>
            <dt-ref id="ID" r="II.5.2">ID</dt-ref>
            <dd><code>[A-Za-z_$@`?][A-Za-z_$@`?0-9]*</code></dd>
            <dd>Identifier without special characters. <code>_</code>, <code>$</code>, <code>@</code>, <code>`</code> and <code>@</code> are not considered special characters.</dd>
            <dt-ref id="Id" r="II.5.3">Id</dt-ref>
            <dd><code><ref ref="ID">ID</ref> | <ref ref="SQSTRING">SQSTRING</ref></code></dd>
            <dd>Identifier can be either <ref ref="ID">ID</ref> or <ref ref="SQSTRING">SQSTRING</ref>.</dd>
            <dt-ref id="DottedName" r="II.5.3">DottedName</dt-ref>
            <dd><code><ref ref="Id">Id</ref>[.<ref ref="Id">Id</ref>]*</code></dd>
            <dd>Syntactical shortcut allowing to use names containing dots (<code>.</code>) without single quotes (<code>'</code>).</dd>
            <break/>
            <dt-ref id="HexByte" r="II.5.2">HexByte</dt-ref>
            <dd><code>[0-9A-Fa-f]{2}</code></dd>
            <dd>One byte represented by hexadecimal number (without leading hexa-specifier)</dd>
            <dt-ref id="Bytes" r="II.5.5">Bytes</dt-ref>
            <dd><code><ref ref="HexByte">HexByte</ref> [<ref ref="HexByte">HexByte</ref>]*</code></dd>
            <dd>Byte array is list of hexadecimally writtent bytes seperated by spaces.</dd>
            <break/>
            <dt r="II.10.1.7"><ref ref="GenPar">GenPar</ref></dt>
            <dd><code>{+|-|class|valuetype|.ctor} [\(<ref ref="Type">Type</ref> [, <ref ref="Type">Type</ref>]*\)] <ref ref="Id">Id</ref></code></dd>
            <dd>Generic parameter specification</dd>
            <dt r="II.7.1"><ref ref="TypeSpec">TypeSpec</ref></dt>
            <dd><code>\[[.module] <ref ref="DottedName">DottedName</ref>\] | <ref ref="TypeReference">TypeReference</ref> | <ref ref="Type">Type</ref></code></dd>
            <dd>Simplified reference to type. E.g. allows use <code>System.GC</code> instead of <code>.class System.GC</code></dd>
            <dt r="II.7.3"><ref ref="TypeReference">TypeReference</ref></dt>
            <dd><code>(\[.module <ref ref="DottedName">DottedName</ref>\] | \[<ref ref="DottedName">DottedName</ref>\]) <ref ref="DottedName">DottedName</ref> [/ <ref ref="DottedName">DottedName</ref>]*</code></dd>
            <dd>Reference to user-defined type</dd>
            <dt r="II.7.1"><ref ref="Type">Type</ref></dt>
            <dd>
                <code>
                    !<ref ref="Int32">Int32</ref> | !!<ref ref="Int32">Int32</ref> | bool | char |
                    class <ref ref="TypeReference">TypeReference</ref> |
                    floa32 | float64 | int8 | int16 | int32 | int64 |
                    method <ref ref="CallConv">CallConv</ref> <ref ref="Type">Type</ref> \* \([<ref ref="Param">Param</ref> [, <ref ref="Param">Param</ref>]*]\) |
                    native int | native unsigned int | object | string | <ref ref="Type">Type</ref>&amp; | <ref ref="Type">Type</ref>\* |
                    <ref ref="Type">Type</ref>&lt;<ref ref="Type">Type</ref> [, <ref ref="Type">Type</ref>]* [,]*> |
                    <ref ref="Type">Type</ref> \[[(... | <ref ref="Int32">Int32</ref> | <ref ref="Int32">Int32</ref> ... | <ref ref="Int32">Int32</ref> ... <ref ref="Int32">Int32</ref>) [, (... | <ref ref="Int32">Int32</ref> | <ref ref="Int32">Int32</ref> ... | <ref ref="Int32">Int32</ref> ... <ref ref="Int32">Int32</ref>)]*]\] |
                    <ref ref="Type">Type</ref> modopt \(<ref ref="TypeReference">TypeReference</ref>\) | <ref ref="Type">Type</ref> modreq \(<ref ref="TypeReference">TypeReference</ref>\) |
                    <ref ref="Type">Type</ref> pinned | typedref | valuetype <ref ref="TypeReference">TypeReference</ref> |
                    unsigned int8 | unsigned int16 | unsigned int32 | unsigned int64 | void
                </code>
            </dd>
            <dd>Complex type reference</dd>
            <dt r="II.7.4"><ref ref="NativeType">NativeType</ref></dt>
            <dd>
                <code>
                    \[\] | bool | float32 | float64 | [unsigned] int | [unsigned] int8 | [unsigned] int16 | [unsigned] int32 | [unsigned] int64 | lpstr | lpwstr | method |
                    <ref ref="NativeType">NativeType</ref> \[\] | <ref ref="NativeType">NativeType</ref>\[<ref ref="Int32">Int32</ref>\] | 
                    <ref ref="NativeType">NativeType</ref> \[\+ <ref ref="Int32">Int32</ref>\] | <ref ref="NativeType">NativeType</ref> \[<ref ref="Int32">Int32</ref> \+ <ref ref="Int32">Int32</ref>\] |
                    <ms-specific>
                        (as any | byvalstr | custom \(<ref ref="QSTRING">QSTRING</ref>,<ref ref="QSTRING">QSTRING</ref>\) | fixed array [<ref ref="Int32">Int32</ref>] | fixed sysstring [<ref ref="Int32">Int32</ref>] | lpstruct | lpstr | struct)                            
                    </ms-specific>
                </code>
            </dd>
            <break/>
            <dt r="II.15.3"><ref ref="CallConv">CallConv</ref></dt>
            <dd><code>[instance [explicit]] (default | unmanaged cdecl | unmanaged fastcall | unmanaged stdcall | unmanaged thiscall | vararg)</code></dd>
            <dd>Manner of method calling</dd>
            <dt r="II.15.4"><ref ref="Param">Param</ref></dt>
            <dd><code>{\[int\] | \[opt\] | \[out\]} <ref ref="Type">Type</ref> [marshal \([<ref ref="NativeType">NativeType</ref>]\)] [<ref ref="Id">Id</ref>]</code></dd>
            <dd>Method parameter definition</dd>
        </dl>
    </section>
    <!--General semantics-->
    <section id="general-semantic" guid="d603f693-9349-49ae-a10e-fb0b4aa5e200">
        <header>Semantics of general constructs</header>
        <introduction>
            This section describes semantics of some elements introduced in <ref ref="general-syntax">General syntactical constructs</ref>.
            Selected non-trivial elements are described in-dept and single parts of those elements are discussed.
        </introduction>
        <section id="Type" guid="cc8ddf5a-246d-45e7-a842-3b1a2a0c315b" r="II.7.1">
            <header><ref>Type</ref></header>
            <introduction>Complex reference to type.</introduction>
            <p>Can be one of following values:</p>
            <dl>
                <dt-code>!<ref ref="Int32">Int32</ref></dt-code>
                <dd>Reffres generic parameter from type declaration accessible by 0-based index.</dd>
                <dt-code>!!<ref ref="Int32">Int32</ref></dt-code>
                <dd>Refferes generic parameter from method declaration accessible by 0-based index.</dd>
                <break/>
                <dt-code>bool</dt-code>
                <dt-code>char</dt-code>
                <dt-code>float32</dt-code>
                <dt-code>float64</dt-code>
                <dt-code>int8</dt-code>
                <dt-code>int16</dt-code>
                <dt-code>int32</dt-code>
                <dt-code>int64</dt-code>
                <dt-code>object</dt-code>
                <dt-code>string</dt-code>
                <dt-code>unsigned int8</dt-code>
                <dt-code>unsigned int16</dt-code>
                <dt-code>unsigned int32</dt-code>
                <dt-code>unsigned int64</dt-code>
                <dt-code>native int</dt-code>
                <dt-code>native unsigned int</dt-code>
                <dd>Built-in types</dd>
                <break/>
                <dt-code>class <ref ref="TypeReference">TypeReference</ref></dt-code>
                <dd>Reference to user*defined type. See <ref ref="TypeReference">TypeReference</ref>.</dd>
                <break/>
                <dt-code>method <ref ref="CallConv">CallConv</ref> <ref ref="Type">Type</ref> \* \([<ref ref="Param">Param</ref> [, <ref ref="Param">Param</ref>]*]\)</dt-code>
                <dd>Method pointer. See <ref ref="CallConv">CallConv</ref>.</dd>
                <break/>
                <dt-code><ref ref="Type">Type</ref>&amp;</dt-code>
                <dd>Managed pointer to given type. Type cannot be managed pointer or <code>typedref</code>. Managed pointer is reported to garbage collector.</dd>
                <dt-code><ref ref="Type">Type</ref>*</dt-code>
                <dd>Unmanaged pointer to given type. Unmanaged pointer is not reported to garbage collector and behaves like unsigned integral number.</dd>
                <break/>
                <dt-code><ref ref="Type">Type</ref>&lt;<ref ref="Type">Type</ref> [, <ref ref="Type">Type</ref>]* [,]*></dt-code>
                <dd>
                    Generic type instance.
                    Generic parameter cannot be: Managed pointer (<code>ByRef</code>); type field of which points to CIL evaluation stack (like <see cref="T:System.RuntimeArgumentHandle"/>); <code>void</code>.
                    Partial instantiation is not allowed.
                </dd>
                <dt-code><ref ref="Type">Type</ref> \[[(... | <ref ref="Int32">Int32</ref> | <ref ref="Int32">Int32</ref> ... | <ref ref="Int32">Int32</ref> ... <ref ref="Int32">Int32</ref>) [, (... | <ref ref="Int32">Int32</ref> | <ref ref="Int32">Int32</ref> ... | <ref ref="Int32">Int32</ref> ... <ref ref="Int32">Int32</ref>)]*]\]</dt-code>
                <dd>Array. Several array declarations are possible.</dd>
                <dl>
                    <dt-code><ref ref="Type">type</ref> \[\]</dt-code>
                    <dd>
                        So-called vactor - one dimensional 0-based array
                        Vectors have special support in CIL - structrions <code-ref ref="newarr">newarr</code-ref>, <code-ref ref="ldelem">ldelem</code-ref>, <code-ref ref="stelem">stelem</code-ref> or <code-ref ref="stelema">stelema</code-ref>.
                        Vectors are subclasses of the <see cref="T:System.Array"/> class.
                    </dd>
                    <break/>
                    <dt-code><ref ref="Type">type</ref> \[<ref>Bound</ref> [, <ref>Bound</ref>]*\]</dt-code>
                    <dd>Array are defined by number of its dimensions. Each dimension is defined by boundaries <code-ref>Bound</code-ref> - it can be:</dd>
                    <dl>
                        <dt-code>...</dt-code>
                        <dd>Lower bound and upper bound undefined.</dd>
                        <dt-code><ref ref="Int32">Int32</ref></dt-code>
                        <dd>Lower bound 0 and uppper bound given number.</dd>
                        <dt-code><ref ref="Int32">Int32</ref> ...</dt-code>
                        <dd>Only lowe bound specified</dd>
                       <dt-code><ref ref="Int32">Int32</ref> ... <ref ref="Int32">Int32</ref></dt-code>
                        <dd>Both bounds specified</dd>
                    </dl>
                    <dd>Those arrays are supported by VES as subclasses of the <see cref="T:System.Array"/> class.</dd>
                    <dd>It as possible to created arrays of arrays, too.</dd>
                </dl>
                <break/>
                <dt-code><ref ref="Type">Type</ref> modopt \(<ref ref="TypeReference">TypeReference</ref>\)</dt-code>
                <dd>User modifier (optional modifier) which is not required to be understood by caller.</dd>
                <dt-code><ref ref="Type">Type</ref> modreq \(<ref ref="TypeReference">TypeReference</ref>\)</dt-code>
                <dd>User modifier (required modifier) which is required to be understood by caller.</dd>
                <dd rel="summary">
                    Modifiers are something like user-attributes, but are part of signature.
                    Each modifier associates reference to type with signature item.
                    CLI treats required and optional modifiers same way.
                    Two signatures that differ only by user modifiers are considered to be different.
                    User modifiers has no meaning for VES.
                    The fact that modifier is required or optional is meaningful to tools other than CLI (like alalyzers or compilers), which decides wheather modifier has any semantics they have to understand to.
                </dd>
                <break/>
                <dt-code><ref ref="Type">Type</ref> pinned</dt-code>
                <dd>Can be used only with local variables of methods.</dd>
                <dd>In case method in which variable of pinned type is declared is being executed, VES cannot move the object which variable is reference to.</dd>
                <dd>In case unmanaged pointers to managed objects are used, such object should be declared as pinned.</dd>
                <break/>
                <dt-code>typedref</dt-code>
                <dd>
                    Reference to type (i.e. <see cref="T:System.TypedReference"/>) created by <code-ref ref="mkrefany">mkrefany</code-ref>.
                    Used by instructions <code-ref ref="refanytype">refanytype</code-ref> and <code-ref ref="refanyval">refanyval</code-ref>.
                </dd>
                <break/>
                <dt-code>valuetype <ref ref="TypeReference">TypeReference</ref></dt-code>
                <dd>User-defined value-type (structure) - not boxed.</dd>
                <break/>
                <dt-code>void</dt-code>
                <dd>No type. Allowed only as return type of method or as part of definition opf unmanaged pointer <code>void*</code>.</dd>
            </dl>
        </section>
        <section id="TypeReference" guid="babaf4d8-f217-4265-a3ca-e64f2c1a5e77" r="II.7.3">
            <header><ref>TypeReference</ref></header>
            <introduction>Reference to user-defined type.</introduction>
            <syntax>[<ref>ResolutionScope</ref>] <ref ref="DottedName">DottedName</ref> [/ <ref ref="DottedName">DottedName</ref>]*</syntax>
            <dl>
                <dt><code-ref>ResolutionScope</code-ref> (<ref>ResolutionScope</ref>)</dt>
                <dd>If absent this reference is reference to same module of same assembly.</dd>
                <dl>
                    <dt-code>\[.module <ref>FileName</ref>\]</dt-code>
                    <dd>Reference to another module of same assembly.</dd>
                    <dl>
                        <dt><code-ref>FileName</code-ref> (<ref ref="DottedName">DottedName</ref>)</dt>
                        <dd>Name of file containing the module. It must be module of same assembly.</dd>
                    </dl>
                    <dt-code>\[AssemblyRefName\]</dt-code>
                    <dd>Reference to another assembly</dd>
                    <dl>
                        <dt><code-ref>AssemblyName</code-ref> (<ref ref="DottedName">DottedName</ref>)</dt>
                        <dd>Name of referenced assembly defined using <code><internal-link ref="_assembly_externB">.assembly extern {}</internal-link></code>.</dd>
                    </dl>
                </dl>
                <dt-code><ref ref="DottedName">DottedName</ref> / <ref ref="DottedName">DottedName</ref></dt-code>
                <dd>Type name. Slash is used to delimit name of containing type and nested type.</dd>
            </dl>
        </section>
        <section id="TypeSpec" guid="f86debe4-aec0-4361-9ac9-c21a93ff4e8c" r="II.7.1">
            <header><ref>TypeSpec</ref></header>
            <introduction>Simplified type reference</introduction>
            <p>
                <ref ref="TypeSpec">TypeSpec</ref> allows to use <ref ref="Type">Type</ref>, <ref ref="TypeReference">TypeReference</ref> and syntactical shortcut <code>\[[.module] <ref ref="DottedName">DottedName</ref>\]</code> in same place.
                So, it is possible e.g. instead of <code>class System.GC</code> use only <code>System.GC</code>.
            </p>
        </section>
        <section id="GenPar" guid="35f0f3eb-c612-4400-ba82-83532012bb0d" r="II.10.1.7">
            <header><ref>GenPar</ref></header>
            <introduction>Specifies a generic parameter.</introduction>
            <syntax>{[\+|-] | (class | valuetype) | .ctor} [\([<ref ref="Type">Type</ref> [, <ref ref="Type">Type</ref>]*\)] <ref ref="Id">Id</ref></syntax>
            <dl>
                <dt-code>+</dt-code>
                <dd>Covariant generic parameter</dd>
                <dd>
                    Covariance means that when we have type <code>IA&lt;+T></code>, value of type <code>IA`&lt;A></code> can be assigned to target of type <code>IA`&lt;B></code> as long as it is possible to assgn value of type <code>A</code> to target of type <code>B</code>.
                    For example following pseudo-code would be OK:			
                </dd>
                <example><code-ml><![CDATA[interface IA<+T>;
IA`1<System.String> var1;
IA`1<System.Object> var2;
var1 := var2;]]></code-ml></example>
                <dd>Covariant generic parameters can be used as method return types and can be used for creating covariant method return types.</dd>
                <example><code-ml><![CDATA[interface IEnumerator<+T> { T Current {get;} bool MoveNext(); }
interface IEnumerable<+T> { IEnumerator<T> GetEnumerator(); }]]></code-ml></example>
                <dt-code>-</dt-code>
                <dd>Contravariant generic parameter</dd>
                <dd>
                    Contravariance if compagnon to covariance. Having type <code>IB&lt;-T></code> we can do assignment <code>IB`1&lt;B> := IB`1&lt;A></code> as long as assignment <code>A := B</code> is possible.
                </dd>
                <example><code-ml><![CDATA[Interface IB<-T>;
IB`1<System.String> var1;
IB`1<System.Object> var2;
var2 := var1;]]></code-ml></example>
                <dd>Contravarian generic parameters can be used as method parameters types and can be used for constructing contravariant interfaces.</dd>
                <example><code-ml><![CDATA[interface IComparer<-T> { bool Compare(T x, T y); }
interface IKeyComparer<-T> : IComparer<T> { bool Compare(T x, T y); int GetHashCode(T obj); }]]></code-ml></example>
                <dd>Contravariant generic parameter can be used only in place of <i>producer</i>, <i>reader</i> or <i>getter</i>.</dd>
                <dd rel="summary"><b>Summary:</b></dd>
                <dd rel="summary">B → A ⇒ I&lt;+B> → I&lt;+A></dd>
                <dd rel="summary">B → A ⇒ I&lt;-A> → I&lt;-B></dd>
                <dd rel="summary">
                    <code>+</code> and <code>-</code> cannot be used simultaneously. In case none of them is used generic parameter is called non-variant.
                    There are no restrictions for using non-variant generic parameters.
                </dd>
                <dd rel="summary">Covariance and contravariance can be used only with delegates and interfaces.</dd>
                <break/>
                <dt-code>class</dt-code>
                <dd>Generic parameter must be of type class (reference) not structure (value).</dd>
                <dt-code>valuetype</dt-code>
                <dd>Generic parameter must be of value type (structure, not class - reference type), but cannot be <see cref="T:System.Nullable`1">System.Nullable&lt;T></see>.</dd>
                <dd rel="summary">Restrictions <code>class</code> and <code>valuetype</code> shall not be combined.</dd>
                <dt-code>.ctor</dt-code>
                <dd>Type parameter must be non-abstract class (reference type) with public constructor without parameters (default constructor) or it must be structure (value type).</dd>
                <dd rel="summary">Each of attributes <code>+</code>, <code>-</code>, <code>class</code>, <code>valuetype</code> and <code>.ctor</code> can be used maximally once.</dd>
                <break/>
                <dt><code-ref ref="Type">Type</code-ref> (<ref ref="Type">Type</ref>)</dt>
                <dd>Specifies restriction types for generic parameter. Type passed to generic parameter have to implement or inherit all listed types (so it makes sence to list maximally one class and several interfaces - no structures or delegates). Type passed to generic parameter might also be constraint type itself.</dd>
                <break/>
                <dt><code-ref ref="Id">Id</code-ref> (<ref ref="Id">Id</ref>)</dt>
                <dd>Name of generic parameter.</dd>
            </dl>
        </section>
        <section id="CallConv" guid="a190d1ff-f658-4705-91f4-cc0f171bd1f3" r="II.15.3">
            <header><ref>CallConv</ref></header>
            <introduction>Defines which way the method is called.</introduction>
            <syntax>[instance [explicit]] [default | unmanaged cdecl | unmanaged fastcalll | unmanaged stdcall | unmanaged thiscall | vararg]</syntax>
            <dl>
                <dt-code>instance</dt-code>
                <dd>This call is call of instance method (other possibility is static method). Pointer to current instance (so-called this-pointer) is passed to method.</dd>
                <dt-code>explicit</dt-code>
                <dd>
                    This class of instance method uses explicitly passed this-pointer.
                    Normally this-pointer is not part of argument list of method call, because it can be obtained from context.
                    In case of explicit call first item of parameter list is this pointer.
                </dd>
                <break />
                <dt-code>default</dt-code>
                <dd>Default way of calling managed methods. It shall be used always for managed method, unless <code>vararg</code> is required.</dd>
                <dt-code>unmanaged cdecl</dt-code>
                <dd>Call used by standard C language.</dd>
                <dt-code>unmanaged stdcall</dt-code>
                <dd>Call used by standard C++ language.</dd>
                <dt-code>unmanaged fastcall</dt-code>
                <dd>Special optimized way of calling used by C++.</dd>
                <dt-code>unmanaged thiscall</dt-code>
                <dd>C++ call with this-pointer.</dd>
                <break/>
                <dt-code>vararg</dt-code>
                <dd>Method accepts more arguments</dd>
            </dl>
            <p>
                Theoretically 16 different calling conventions can be encoded. 2 of them are used for managed calling kinds, 4 are resrved with defined meaning across platforms (as specified above).
                4 more are reserved for existing calling conventions which are not maximally portable, 4 are reserved for future use by the standard and 2 are available for non-standard or experimental use.
            </p>
        </section>
        <section id="Param" guid="13a2e9a8-1758-41bc-8635-ff7e8d70cf9f" r="II.15.4">
            <header><ref>Param</ref></header>
            <introduction>Represents parameter of method.</introduction>
            <syntax>[\[in\] | \[opt\] | \[out\]]* <ref ref="Type">Type</ref> [marshall \([<ref ref="NativeType">NativeType</ref>]\)] [<ref ref="Id">Id</ref>]</syntax>
            <dl>
                <dt><code-ref ref="Id">Id</code-ref> (<ref ref="Id">Id</ref>)</dt>
                <dd>Optinal name of the parameter. Parameters can be referenced by their names or 0-based indexes. To binary code the reference is lways translated using the index.</dd>
                <break/>
                <dt-code>in</dt-code>
                <dd>Marks parameter as input</dd>
                <dt-code>out</dt-code>
                <dd>Marks parameter as output</dd>
                <dd rel="summary">
                    <code>in</code> and <code>out</code> can be used only for pointer types (both - managed and unmanaged).
                    If neither of them is specified, <code>in</code> is assumed.
                    CLI does not verify if parameters are used in declared direction only.
                </dd>
                <dt-code>opt</dt-code>
                <dd>Marks parameter as optional (from end-user point-of-view). Default value is stored using the <code-ref ref="_param">.param</code-ref> directive.</dd>
                <dd rel="summary">Parameters <code>in</code>, <code>out</code> and <code>opt</code> are not part of method signature.</dd>
                <dd rel="summary"><ms-specific>
                    In addition to <code>[in]</code>, <code>[opt]</code>, and <code>[out]</code> implementation allows 4th option - <ref ref="Int32">Int32</ref> -
                    16-bit set of flags with unspecified meaning.
                </ms-specific></dd>
                <break/>
                <dt><code-ref ref="Type">Type</code-ref> (<ref ref="Type">Type</ref>)</dt>
                <dd>Type of the parameter</dd>
                <dt><code-ref ref="NativeType">NativeType</code-ref> (<ref ref="NativeType">NativeType</ref>)</dt>
                <dd>Type used when passing the parameter to unmanaged code.</dd>
            </dl>
        </section>
        <section id="NativeType" guid="c837a3fa-39dd-4327-8ad0-791e4d706053" r="II.7.4">
            <header><ref>NativeType</ref></header>
            <introduction>Describes platform-native types of platform .NET runs on.</introduction>
            <syntax>
                \[\] | bool | float32 | float64 | [unsigned] int | [unsigned] int8 | [unsigned] int16 | [unsigned] int32 | [unsigned] int64 | lpstr | lpwstr | method | 
                <ref ref="NativeType">NativeType</ref>\[\] | <ref ref="NativeType">NativeType</ref>\[<ref ref="Int32">Int32</ref>\] |
                <ref ref="NativeType">NativeType</ref>\[+<ref ref="Int32">Int32</ref>\] | <ref ref="NativeType">NativeType</ref>\[+<ref ref="Int32">Int32</ref>\+<ref ref="Int32">Int32</ref>\]
                <ms-specific>| ( as any | byvalstr | custom \(<ref ref="QSTRING">QSTRING</ref>,<ref ref="QSTRING">QSTRING</ref>\) | fixed array [<ref ref="Int32">Int32</ref>] | fixed sysstring [<ref ref="Int32">Int32</ref>] | lpstruct | lpstr | struct )</ms-specific>
            </syntax>
            <p>Those are native types of platforms where .NET framework runs. In description below, in braces, value from the <see cref="T:System.Runtime.InteropServices.UnmanagedType"/> enumeration.</p>
            <dl>
                <dt><code>\[\]</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.LPArray">LPArray</see></code>)</dt>
                <dd>Native array. Type and size are determined in runtime.</dd>
                <dt><code>bool</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.Bool">Bool</see></code>)</dt>
                <dd>Boolean - 4B integer, where 0 means <code>false</code> and anything else <code>true</code>.</dd>
                <dt><code>float32</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.R4">R4</see></code>)</dt>
                <dd>4-byte floating point number</dd>
                <dt><code>float64</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.R8">R8</see></code>)</dt>
                <dd>8-byte floating point number</dd>
                <dt><code>[unsigned] int</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.SysInt">SysInt</see></code> or <code><see cref="F:System.Runtime.InteropServices.UnmanagedType.SysUInt">SysUInt</see></code>)</dt>
                <dd>(Un)signed iteger as big as native pointer of current platform.</dd>
                <dt><code>[unsigned] int[8|16|32|64]</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.I1">I1</see></code>, <code><see cref="F:System.Runtime.InteropServices.UnmanagedType.U1">U1</see></code>, <code><see cref="F:System.Runtime.InteropServices.UnmanagedType.I2">I2</see></code>, <code><see cref="F:System.Runtime.InteropServices.UnmanagedType.U2">U2</see></code>, <code><see cref="F:System.Runtime.InteropServices.UnmanagedType.I4">I4</see></code>, <code><see cref="F:System.Runtime.InteropServices.UnmanagedType.U4">U4</see></code>, <code><see cref="F:System.Runtime.InteropServices.UnmanagedType.I8">I8</see></code>, <code><see cref="F:System.Runtime.InteropServices.UnmanagedType.U8">U8</see></code>)</dt>
                <dd>(Un) signed integer of given size.</dd>
                <dt><code>lpstr</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.LPStr">LPStr</see></code>)</dt>
                <dd>Pointer to nullchar-terminated string of ANSI characters. Codepage is implementation-dependent.</dd>
                <dt><code>lpwstr</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.LPWstr">LPWStr</see></code>)</dt>
                <dd>Pointer to nullchar-terminated string of Unicode characters. Encoding is implementation-dependent.</dd>
                <dt><code>method</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.FunctionPtr">FunctionPtr</see></code>)</dt>
                <dd>Pointer to function</dd>
                <dt><code><ref ref="NativeType">NativeType</ref>\[\]</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.LPArray">LPArray</see></code>)</dt>
                <dd>Array of native type, size is determined in runtime.</dd>
                <dt><code><ref ref="NativeType">NativeType</ref>\[<ref ref="Int32">Int32</ref>\]</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.LPArray">LPArray</see></code>)</dt>
                <dd>Array of native type with specified lenght</dd>
                <dt><code><ref ref="NativeType">NativeType</ref>\[+<ref ref="Int32">Int32</ref>\]</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.LPArray">LPArray</see></code>)</dt>
                <dd>Array of native type with item lenght specified in runtime. <ref ref="Int32">Int32</ref> specifies 0-based index of parameter of current method, which in runtime contains size of array element in bytes. This can be applied only onto methods (not noto fields).</dd>
                <dd><ms-specific>In case the method has <code>PreserveSig</code> bit set to 1, parameter index is 1-based.</ms-specific></dd>
                <dt><code><ref ref="NativeType">NativeType</ref>\[<ref ref="Int32">Int32</ref>\+<ref ref="Int32">Int32</ref>\]</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.LPArray">LPArray</see></code>)</dt>
                <dd>
                    Array of native type with item lenght specified in runtime.
                    1st <ref ref="Int32">Int32</ref> specifies number of array elements,
                    2nd <ref ref="Int32">Int32</ref> specifies 0-based index of parameter of current method, which in runtime contains size of array element in bytes.
                    This can be applied only onto methods (not noto fields).</dd>
                <dd><ms-specific>In case the method has <code>PreserveSig</code> bit set to 1, parameter index is 1-based.</ms-specific></dd>
                <dt><ms-specific><code>as any</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.AsAny">AsAny</see></code>)</ms-specific></dt>
                <dd><ms-specific>Type of the object is determined at runtime</ms-specific></dd>
                <dt><ms-specific><code>byvalstr</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.VBByRefStr">VBByRefStr</see></code>)</ms-specific></dt>
                <dd><ms-specific>String stored in fixed-size buffer</ms-specific></dd>
                <dt><ms-specific><code>custom \(<ref ref="QSTRING">QSTRING</ref>,<ref ref="QSTRING">QSTRING</ref>\)</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler">CustomMarshaler</see></code>)</ms-specific></dt>
                <dd><ms-specific>
                    Custom marshaling.
                    1st <ref ref="QSTRING">QSTRING</ref> is name of class of marshaller (uses the same convention as <see cref="N:System.Reflection.Emit">Reflection.Emit</see> to determine assembly and/or module).
                    2nd <ref ref="QSTRING">QSTRING</ref> is string passed to the marshaler in runtime to identify way of marshaling.
                </ms-specific></dd>
                <dt><ms-specific><code>fixed array [<ref ref="Int32">Int32</ref></code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.ByValArray">ByValArray</see></code>)</ms-specific></dt>
                <dd><ms-specific>Array of given fixed size</ms-specific></dd>
                <dt><ms-specific><code>fixed systring [<ref ref="Int32">Int32</ref>]</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.ByValTStr">ByValTStr</see></code>)</ms-specific></dt>
                <dd><ms-specific>System-specific fixed-size string. Can be used only onto fields. Encoding is determined by special attribute.</ms-specific></dd>
                <dt><ms-specific><code>lpstruct</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.LPStruct">LPStruct</see></code>)</ms-specific></dt>
                <dd><ms-specific>Pointer to C-style structure. Used to marshal managed formatted types.</ms-specific></dd>
                <dt><ms-specific><code>lpstr</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.LPTStr">LPTStr</see></code>)</ms-specific></dt>
                <dd><ms-specific>Pointer to nullchar-terminated platform-specific. (ANSI or Unicode) characters. Codepage is platform-dependent.</ms-specific></dd>
                <dt><ms-specific><code>struct</code> (<code><see cref="F:System.Runtime.InteropServices.UnmanagedType.Struct">Struct</see></code>)</ms-specific></dt>
                <dd><ms-specific>C-style strucrure. Used for marshaling managed formatted types.</ms-specific></dd>
            </dl>
        </section>
    </section>
    <!--Directive cross-reference-->
    <section id="directive-cross-reference" guid="1fef50af-cd6e-49f6-9bd3-50922ea39231">
        <header>Directive cross-reference</header>
        <introduction>Shows all the CIL metadata directives and way they relate one to each other.</introduction>
        <table>
            <header>
                <c>Directive</c><c>Parents</c><c>Content</c>
            </header>
            <row>
                <c><code><internal-link ref="_addon">.addon</internal-link></code></c>
                <c><code><internal-link ref="_eventB">.event {}</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_assemblyB">.assembly {}</internal-link></code></c>
                <c>File</c>
                <c>
                    <code><internal-link ref="_custom">.custom</internal-link></code>,
                    <code><internal-link ref="_hash_alghoritm">.hash alghoritm</internal-link></code>,
                    <code><internal-link ref="_culture">.culture</internal-link></code>,
                    <code><internal-link ref="_publickey">.publickey</internal-link></code>,
                    <code><internal-link ref="_ver">.ver</internal-link></code>,
                    <code><internal-link ref="_permissionset">.permissionset</internal-link></code>,
                    <ms-specific><code><internal-link ref="_locale">.locale</internal-link></code></ms-specific>
                </c>
            </row>
            <row>
                <c><code><internal-link ref="_assembly_externB">.assembly extern {}</internal-link></code></c>
                <c>File</c>
                <c>
                    <code><internal-link ref="_hash">.hash</internal-link></code>,
                    <code><internal-link ref="_custom">.custom</internal-link></code>,
                    <code><internal-link ref="_culture">.culture</internal-link></code>,
                    <code><internal-link ref="_publickeytoken">.publickeytoken</internal-link></code>,
                    <code><internal-link ref="_publickey">.publickey</internal-link></code>,
                    <code><internal-link ref="_ver">.ver</internal-link></code>
                </c>
            </row>
            <row>
                <c><code><internal-link ref="_assembly_extern">.assembly extern</internal-link></code></c>
                <c>
                    <code><internal-link ref="_mresourceB">.mresource {}</internal-link></code>,
                    <new><code><internal-link ref="_class_extern_forwarderB">.class extern forwarder {}</internal-link></code></new>
                </c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="catch">catch</internal-link></code></c>
                <c><code><internal-link ref="_try">.try</internal-link></code></c>
                <c><code><internal-link ref="handler">handler</internal-link></code>, <code><internal-link ref="B">{}</internal-link></code></c>
            </row>
            <row>
                <c><code><internal-link ref="_classB">.class {}</internal-link></code></c>
                <c>File, <code><internal-link ref="_classB">.class {}</internal-link></code></c>
                <c>
                    <code><internal-link ref="_classB">.class {}</internal-link></code>,
                    <code><internal-link ref="_custom">.custom</internal-link></code>,
                    <code><internal-link ref="_data">.data</internal-link></code>,
                    <code><internal-link ref="_eventB">.event {}</internal-link></code>,
                    <code><internal-link ref="_field">.field</internal-link></code>,
                    <code><internal-link ref="_methodB">.method {}</internal-link></code>,
                    <code><internal-link ref="_override">.override</internal-link></code>,
                    <code><internal-link ref="_pack">.pack</internal-link></code>,
                    <code><internal-link ref="_param">.param</internal-link></code>,
                    <code><internal-link ref="_param_type">.param type</internal-link></code>,
                    <code><internal-link ref="_propertyB">.property {}</internal-link></code>,
                    <code><internal-link ref="_size">.size</internal-link></code>,
                    <code><internal-link ref="_line">.line</internal-link></code>,
                    <code><internal-link ref="_permissionset">.permissionset</internal-link></code>,
                    <code><internal-link ref="_permission">.permission</internal-link></code>
                </c>
            </row>
            <row>
                <c><code><internal-link ref="_class_extern">.class extern</internal-link></code></c>
                <c><code><internal-link ref="_class_externB">.class extern {}</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_class_externB">.class extern {}</internal-link></code></c>
                <c>File</c>
                <c>
                    <code><internal-link ref="_file">.file</internal-link></code>,
                    <code><internal-link ref="_class_extern">.class extern</internal-link></code>,
                    <code><internal-link ref="_custom">.custom</internal-link></code>
                </c>
            </row>
            <row special="new">
                <c><code><internal-link ref="_class_extern_forwarderB">.class extern forwarder {}</internal-link></code></c>
                <c>File</c>
                <c><code><internal-link ref="_assembly_extern">.assembly extern</internal-link></code></c>
            </row>
            <row>
                <c><code><internal-link ref="_corflags">.corflags</internal-link></code></c>
                <c>File</c>
            </row>
            <row>
                <c><code><internal-link ref="_culture">.culture</internal-link></code></c>
                <c>
                    <code><internal-link ref="_assemblyB">.assembly {}</internal-link></code>,
                    <code><internal-link ref="_assembly_externB">.assembly extern {}</internal-link></code>
                </c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_custom">.custom</internal-link></code></c>
                <c>
                    File,
                    <code><internal-link ref="_assemblyB">.assembly {}</internal-link></code>,
                    <code><internal-link ref="_mresourceB">.mresource {}</internal-link></code>,
                    <code><internal-link ref="_assembly_externB">.assembly extern {}</internal-link></code>,
                    <code><internal-link ref="_classB">.class {}</internal-link></code>,
                    <code><internal-link ref="_methodB">.method {}</internal-link></code>,
                    <code><internal-link ref="B">{}</internal-link></code>,
                    <code><internal-link ref="_propertyB">.property {}</internal-link></code>,
                    <code><internal-link ref="_eventB">.event {}</internal-link></code>
                </c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_data">.data</internal-link></code>, <code><internal-link ref="_dataB">.data {}</internal-link></code></c>
                <c>
                    File,
                    <code><internal-link ref="_classB">.class {}</internal-link></code>,
                    <code><internal-link ref="_methodB">.method {}</internal-link></code>,
                    <code><internal-link ref="B">{}</internal-link></code>
                </c>
                <c>Data</c>
            </row>
            <row>
                <c><code><internal-link ref="_emitbyte">.emitbyte</internal-link></code></c>
                <c><code><internal-link ref="_methodB">.method {}</internal-link></code>, <code><internal-link ref="B">{}</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_entrypoint">.entrypoint</internal-link></code></c>
                <c><code><internal-link ref="_methodB">.method {}</internal-link></code>, <code><internal-link ref="B">{}</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_eventB">.event {}</internal-link></code></c>
                <c><code><internal-link ref="_classB">.class {}</internal-link></code></c>
                <c>
                    <code><internal-link ref="_addon">.addon</internal-link></code>,
                    <code><internal-link ref="_custom">.custom</internal-link></code>,
                    <code><internal-link ref="_fire">.fire</internal-link></code>,
                    <code><internal-link ref="_other">.other</internal-link></code>,
                    <code><internal-link ref="_removeon">.removeon</internal-link></code>,
                    <code><internal-link ref="_line">.line</internal-link></code>
                </c>
            </row>
            <row special="undocumented">
                <c><code><internal-link ref="_export">.export</internal-link></code></c>
                <c><code><internal-link ref="_methodB">.method {}</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="fault">fault</internal-link></code></c>
                <c><code><internal-link ref="_try">.try</internal-link></code></c>
                <c>
                    <code><internal-link ref="handler">handler</internal-link></code>,
                    <code><internal-link ref="B">{}</internal-link></code>
                </c>
            </row>
            <row>
                <c><code><internal-link ref="_field">.field</internal-link></code></c>
                <c>File, <code><internal-link ref="_classB">.class {}</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_file">.file</internal-link></code></c>
                <c>
                    File,
                    <code><internal-link ref="_mresourceB">.mresource {}</internal-link></code>,
                    <code><internal-link ref="_class_externB">.class extern {}</internal-link></code>
                </c>
                <c/>
            </row>
            <row special="ms-specific">
                <c><code><internal-link ref="_file_alignment">.file alignment</internal-link></code></c>
                <c>File</c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="filter">filter</internal-link></code></c>
                <c><code><internal-link ref="_try">.try</internal-link></code></c>
                <c>
                    <code><internal-link ref="handler">handler</internal-link></code>,
                    <code><internal-link ref="B">{}</internal-link></code>
                </c>
            </row>
            <row>
                <c><code><internal-link ref="finally">finally</internal-link></code></c>
                <c><code><internal-link ref="_try">.try</internal-link></code></c>
                <c>
                    <code><internal-link ref="handler">handler</internal-link></code>,
                    <code><internal-link ref="B">{}</internal-link></code>
                </c>
            </row>
            <row>
                <c><code><internal-link ref="_fire">.fire</internal-link></code></c>
                <c><code><internal-link ref="_eventB">.event {}</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_get">.get</internal-link></code></c>
                <c><code><internal-link ref="_propertyB">.property {}</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="handler">handler</internal-link></code></c>
                <c>
                    <code><internal-link ref="catch">catch</internal-link></code>,
                    <code><internal-link ref="fault">fault</internal-link></code>,
                    <code><internal-link ref="filter">filter</internal-link></code>,
                    <code><internal-link ref="finally">finally</internal-link></code>
                </c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_hash">.hash</internal-link></code></c>
                <c><code><internal-link ref="_assembly_externB">.assembly extern {}</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_hash_alghoritm">.hash alghoritm</internal-link></code></c>
                <c><code><internal-link ref="_assemblyB">.assembly {}</internal-link></code></c>
                <c/>
            </row>
            <row special="ms-specific">
                <c><code><internal-link ref="_imagebase">.imagebase</internal-link></code></c>
                <c>File</c>
                <c/>
            </row>
            <row special="ms-specific">
                <c><code><internal-link ref="_language">.language</internal-link></code></c>
                <c>File</c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_line">.line</internal-link></code> (<code><internal-link ref="_line">#line</internal-link></code>)</c>
                <c>
                    File,
                    <code><internal-link ref="_classB">.class {}</internal-link></code>,
                    <code><internal-link ref="_methodB">.method {}</internal-link></code>,
                    <code><internal-link ref="B">{}</internal-link></code>,
                    <code><internal-link ref="_propertyB">.property {}</internal-link></code>,
                    <code><internal-link ref="_eventB">.event {}</internal-link></code>
                </c>
                <c/>
            </row>
            <row special="ms-specific">
                <c><code><internal-link ref="_locale">.locale</internal-link></code></c>
                <c><code><internal-link ref="_assemblyB">.assembly {}</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_locals">.locals</internal-link></code></c>
                <c><code><internal-link ref="_methodB">.method {}</internal-link></code>, <code><internal-link ref="B">{}</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_maxstack">.mackstack</internal-link></code></c>
                <c><code><internal-link ref="_methodB">.method {}</internal-link></code>, <code><internal-link ref="B">{}</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_methodB">.method {}</internal-link></code></c>
                <c>File, <code><internal-link ref="_classB">.class {}</internal-link></code></c>
                <c>
                    <code><internal-link ref="_custom">.custom</internal-link></code>,
                    <code><internal-link ref="_data">.data</internal-link></code>,
                    <code><internal-link ref="_emitbyte">.emitbyte</internal-link></code>,
                    <code><internal-link ref="_entrypoint">.entrypoint</internal-link></code>,
                    <code><internal-link ref="_locals">.locals</internal-link></code>,
                    <code><internal-link ref="_maxstack">.maxstack</internal-link></code>,
                    <code><internal-link ref="_override">.override</internal-link></code>,
                    <code><internal-link ref="_override_method">.override method</internal-link></code>,
                    <code><internal-link ref="_param">.param</internal-link></code>,
                    <code><internal-link ref="_param_type">.param type</internal-link></code>,
                    <code><internal-link ref="_line">.line</internal-link></code>,
                    <internal-link ref="instructions">instruction</internal-link>,
                    <internal-link ref="Label">label</internal-link>,
                    <code><internal-link ref="_permission">.permission</internal-link></code>,
                    <code><internal-link ref="_permissionset">.permissionset</internal-link></code>,
                    <code><internal-link ref="B">{}</internal-link></code>,
                    <code><internal-link ref="_try">.try</internal-link></code>,
                    <undocumented><code><internal-link ref="_export">.export</internal-link></code></undocumented>,
                    <undocumented><code><internal-link ref="_vtentry">.vtentry</internal-link></code></undocumented>
                </c>
            </row>
            <row>
                <c><code><internal-link ref="_module">.module</internal-link></code></c>
                <c>File</c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_module_extern">.module extern</internal-link></code></c>
                <c>File</c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_mresourceB">.mresource {}</internal-link></code></c>
                <c>File</c>
                <c>
                    <code><internal-link ref="_assembly_extern">.assembly extern</internal-link></code>,
                    <code><internal-link ref="_custom">.custom</internal-link></code>,
                    <code><internal-link ref="_file">.file</internal-link></code>
                </c>
            </row>
            <row special="ms-specific">
                <c><code><internal-link ref="_namespace">.namespace</internal-link></code></c>
                <c>File</c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_other">.other</internal-link></code></c>
                <c>
                    <code><internal-link ref="_propertyB">.property</internal-link></code>,
                    <code><internal-link ref="_eventB">.event</internal-link></code>
                </c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_override">.override</internal-link></code></c>
                <c>
                    <code><internal-link ref="_classB">.class {}</internal-link></code>,
                    <code><internal-link ref="_methodB">.method {}</internal-link></code>,
                    <code><internal-link ref="B">{}</internal-link></code>
                </c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_override_method">.override method</internal-link></code></c>
                <c>
                    <code><internal-link ref="_classB">.class {}</internal-link></code>,
                    <code><internal-link ref="_methodB">.method {}</internal-link></code>,
                    <code><internal-link ref="B">{}</internal-link></code>
                </c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_pack">.pack</internal-link></code></c>
                <c>
                    <code><internal-link ref="_classB">.class {}</internal-link></code>,
                </c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_param">.param</internal-link></code></c>
                <c>
                    <code><internal-link ref="_methodB">.method {}</internal-link></code>,
                    <code><internal-link ref="B">{}</internal-link></code>
                </c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_param_type">.param type</internal-link></code></c>
                <c>
                    <code><internal-link ref="_classB">.class {}</internal-link></code>,
                    <code><internal-link ref="_methodB">.method {}</internal-link></code>,
                    <code><internal-link ref="B">{}</internal-link></code>
                </c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_permission">.permission</internal-link></code></c>
                <c>
                    File,
                    <code><internal-link ref="_assemblyB">.assembly {}</internal-link></code>,
                    <code><internal-link ref="_classB">.class {}</internal-link></code>,
                    <code><internal-link ref="_methodB">.method {}</internal-link></code>,					
                    <code><internal-link ref="B">{}</internal-link></code>
                </c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_permissionset">.permissionset</internal-link></code></c>
                <c>
                    File,
                    <code><internal-link ref="_assemblyB">.assembly {}</internal-link></code>,
                    <code><internal-link ref="_classB">.class {}</internal-link></code>,
                    <code><internal-link ref="_methodB">.method {}</internal-link></code>,					
                    <code><internal-link ref="B">{}</internal-link></code>
                </c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_propertyB">.property {}</internal-link></code></c>
                <c><code><internal-link ref="_classB">.class {}</internal-link></code></c>
                <c>
                    <code><internal-link ref="_custom">.custom</internal-link></code>,
                    <code><internal-link ref="_get">.get</internal-link></code>,
                    <code><internal-link ref="_other">.other</internal-link></code>,
                    <code><internal-link ref="_set">.set</internal-link></code>,
                    <code><internal-link ref="_line">.line</internal-link></code>
                </c>
            </row>
            <row>
                <c><code><internal-link ref="_publickey">.publickey</internal-link></code></c>
                <c>
                    <code><internal-link ref="_assemblyB">.assembly {}</internal-link></code>,
                    <code><internal-link ref="_assembly_externB">.assembly extern {}</internal-link></code>
                </c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_publickeytoken">.publickeytoken</internal-link></code></c>
                <c><code><internal-link ref="_assembly_externB">.assembly extern {}</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_removeon">.removeon</internal-link></code></c>
                <c><code><internal-link ref="_eventB">.event {}</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_set">.set</internal-link></code></c>
                <c><code><internal-link ref="_propertyB">.property {}</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_size">.size</internal-link></code></c>
                <c><code><internal-link ref="_classB">.class {}</internal-link></code></c>
                <c/>
            </row>
            <row special="undocumented">
                <c><code><internal-link ref="_stackreserve">.stackreserve</internal-link></code></c>
                <c>File</c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_subsystem">.subsystem</internal-link></code></c>
                <c>File</c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_try">.try</internal-link></code></c>
                <c><code><internal-link ref="_methodB">.method {}</internal-link></code>, <code><internal-link ref="B">{}</internal-link></code></c>
                <c>
                    <code><internal-link ref="B">{}</internal-link></code>,
                    <code><internal-link ref="fault">fault</internal-link></code>,
                    <code><internal-link ref="filter">filter</internal-link></code>,
                    <code><internal-link ref="finally">finally</internal-link></code>,
                    <code><internal-link ref="catch">catch</internal-link></code>
                </c>
            </row>
            <row>
                <c><code><internal-link ref="_ver">.ver</internal-link></code></c>
                <c>
                    <code><internal-link ref="_assemblyB">.assembly {}</internal-link></code>,
                    <code><internal-link ref="_assembly_externB">.assembly extern {}</internal-link></code>
                </c>
                <c/>
            </row>
            <row special="undocumented">
                <c><code><internal-link ref="_vtentry">.vtentry</internal-link></code></c>
                <c><code><internal-link ref="_methodB">.method {}</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="_vtfixup">.vtfixup</internal-link></code></c>
                <c>File</c>
                <c/>
            </row>
            <row>
                <c><code><internal-link ref="B">{}</internal-link></code></c>
                <c>
                    <code><internal-link ref="_methodB">.method {}</internal-link></code>,
                    <code><internal-link ref="B">{}</internal-link></code>,
                    <code><internal-link ref="_try">.try</internal-link></code>,
                    <code><internal-link ref="catch">catch</internal-link></code>,
                    <code><internal-link ref="fault">fault</internal-link></code>,
                    <code><internal-link ref="finally">finally</internal-link></code>,
                    <code><internal-link ref="filter">filter</internal-link></code>
                </c>
                <c>
                    <code><internal-link ref="_custom">.custom</internal-link></code>,
                    <code><internal-link ref="_data">.data</internal-link></code>,
                    <code><internal-link ref="_emitbyte">.emitbyte</internal-link></code>,
                    <code><internal-link ref="_entrypoint">.entrypoint</internal-link></code>,
                    <code><internal-link ref="_locals">.locals</internal-link></code>,
                    <code><internal-link ref="_maxstack">.maxstack</internal-link></code>,
                    <code><internal-link ref="_override">.override</internal-link></code>,
                    <code><internal-link ref="_override_method">.override method</internal-link></code>,
                    <code><internal-link ref="_param">.param</internal-link></code>,
                    <code><internal-link ref="_param_type">.param type</internal-link></code>,
                    <code><internal-link ref="_line">.line</internal-link></code>,
                    <internal-link ref="instructions">instruction</internal-link>,
                    <internal-link ref="Label">label</internal-link>,
                    <code><internal-link ref="_permission">.permission</internal-link></code>,
                    <code><internal-link ref="_permissionset">.permissionset</internal-link></code>,
                    <code><internal-link ref="B">{}</internal-link></code>,
                    <code><internal-link ref="_try">.try</internal-link></code>
                </c>
            </row>
            <row>
                <c>Data</c>
                <c><code><internal-link ref="_data">data</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c><internal-link ref="instructions">instruction</internal-link></c>
                <c><code><internal-link ref="_methodB">.method {}</internal-link></code>, <code><internal-link ref="B">{}</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c><internal-link ref="Label">label</internal-link></c>
                <c><code><internal-link ref="_methodB">.method {}</internal-link></code>, <code><internal-link ref="B">{}</internal-link></code></c>
                <c/>
            </row>
            <row>
                <c>File</c>
                <c/>
                <c>
                    <code><internal-link ref="_assemblyB">.assembly {}</internal-link></code>,
                    <code><internal-link ref="_assembly_externB">.assembly extern {}</internal-link></code>,
                    <code><internal-link ref="_classB">.class {}</internal-link></code>,
                    <code><internal-link ref="_class_externB">.class extern {}</internal-link></code>,
                    <code><internal-link ref="_corflags">.corflags</internal-link></code>,
                    <code><internal-link ref="_custom">.custom</internal-link></code>,
                    <code><internal-link ref="_data">.data</internal-link></code>,
                    <code><internal-link ref="_field">.field</internal-link></code>,
                    <code><internal-link ref="_file">.file</internal-link></code>,
                    <ms-specific><code><internal-link ref="_file_alignment">.file alignment</internal-link></code></ms-specific>,
                    <ms-specific><code><internal-link ref="_imagebase">.imagebase</internal-link></code></ms-specific>,
                    <ms-specific><code><internal-link ref="_language">.language</internal-link></code></ms-specific>,
                    <code><internal-link ref="_line">.line</internal-link></code>,
                    <code><internal-link ref="_methodB">.method {}</internal-link></code>,
                    <code><internal-link ref="_module">.module</internal-link></code>,
                    <code><internal-link ref="_module_extern">.module extern</internal-link></code>,
                    <code><internal-link ref="_mresourceB">.mresource {}</internal-link></code>,
                    <ms-specific><code><internal-link ref="_namespace">.namespace</internal-link></code></ms-specific>,
                    <code><internal-link ref="_permission">.permission</internal-link></code>,
                    <code><internal-link ref="_permissionset">.permissionset</internal-link></code>,
                    <code><internal-link ref="_subsystem">.subsystem</internal-link></code>,
                    <undocumented><code><internal-link ref="_stackreserve">.stackreserve</internal-link></code></undocumented>,
                    <code><internal-link ref="_vtfixup">.vtfixup</internal-link></code>,
                </c>
            </row>
        </table>
    </section>
    <!--Block directives-->
    <section id="block-directives" guid="c2f081a5-9394-45d8-ae4a-6ec1a79df574">
        <header>Block directives</header>
        <introduction>Describes directives which can contain another directives or code.</introduction>

        <section id="_assemblyB" guid="38191f92-bcd0-4baa-bb26-bc2920835cee" r="II.6.2">
            <header><code>.assembly {}</code></header>
            <introduction>Defines an assembly.</introduction>
            <syntax>.assembly <ref>Name</ref> {}</syntax>
            <syntax-dl>
                <dt>
                    <code-ref>Name</code-ref> (<ref ref="DottedName">DottedName</ref>)
                </dt>
                <dd>The name of the assembly</dd>
            </syntax-dl>
            <parents>
                <li>File</li>
            </parents>
            <children>
                <internal-link ref="_custom">.custom</internal-link>
                <internal-link ref="_hash_alghoritm">.hash alghoritm</internal-link>
                <internal-link ref="_culture">.culture</internal-link>
                <internal-link ref="_publickey">.publickey</internal-link>
                <internal-link ref="_ver">.ver</internal-link>
                <internal-link ref="_permission">.permission</internal-link>
                <internal-link ref="_permissionset">.permissionset</internal-link>
                <li><ms-specific><internal-link ref="_locale">.locale</internal-link></ms-specific></li>
            </children>
            <p><ms-specific>
                ilasm nepodporuje <code><internal-link ref="_culture">.culture</internal-link></code>,
                použijte <ms-specific><code><internal-link ref="_locale">.locale</internal-link></code></ms-specific>.
            </ms-specific></p>
            <p>
                An assembly is specified as module that contains a manifest metadata. Manifest information is composed from
                <code><internal-link ref="_assemblyB">.assembly {}</internal-link></code>,
                <code><internal-link ref="_assembly_externB">.assembly extern {}</internal-link></code>,
                <code><internal-link ref="_corflags">.corflags</internal-link></code>,
                <code><internal-link ref="_file">.file</internal-link></code>,
                <code><internal-link ref="_hash">.hash</internal-link></code>,
                <code><internal-link ref="_entrypoint">.entrypoint</internal-link></code>,
                <code><internal-link ref="_mresourceB">.mresource</internal-link></code> and
                <code><internal-link ref="_subsystem">.subsystem</internal-link></code>.
                The <code><internal-link ref="_assemblyB">.assembly {}</internal-link></code> directive declares the manifest and
                specifies the assembly the current module belongs to. Module shall contain maximally one
                <code><internal-link ref="_assemblyB">.assembly {}</internal-link></code> directive.
            </p>
            <p>Since some platforms treat names in a case-insensitive manner, two assemblies that have names that differ only in case should not be declared.</p>
            <seealso>
                <internal-link ref="_assembly_externB">.asssembly extern {}</internal-link>
                <internal-link ref="_assembly_extern">.asssembly extern</internal-link>
                <internal-link ref="_module">.module</internal-link>
            </seealso>
        </section>
        
        <section id="_assembly_externB" guid="67776952-b6dc-4c87-86a0-214e4dfcc6c9" r="II.6.3">
            <header><code>.assembly extern {}</code></header>
            <introduction>Defines a reference to another assembly.</introduction>
            <syntax>.assembly extern <ref>Name</ref> [as <ref>Alias</ref>] {}</syntax>
            <syntax-dl>
                <dt><code-ref>Name</code-ref> (<ref ref="DottedName">DottedName</ref>)</dt>
                <dd>
                    A name of a referenced assembly. It must equal to the name of referenced assembly as specified in that assembly using the
                    <code><internal-link ref="_assemblyB">.assembly {}</internal-link></code> directive.
                </dd>
                <dt><code-ref>Alias</code-ref> (<ref ref="DottedName">DottedName</ref>)</dt>
                <dd>
                    A name of a referenced assembly uased when referenced from current assembly.
                    This allows to reference more assemblies with same name but different version or culture.
                </dd>
            </syntax-dl>
            <parents><li>File</li></parents>
            <children>
                <internal-link ref="_hash">.hash</internal-link>
                <internal-link ref="_custom">.custom</internal-link>
                <internal-link ref="_culture">.culture</internal-link>
                <internal-link ref="_publickeytoken">.publickeytoken</internal-link>
                <internal-link ref="_publickey">.publickey</internal-link>
                <internal-link ref="_ver">.ver</internal-link>
            </children>
            <p>Assembly names (for this purpose) are case-seinsitive even under OS with case-insensitive file system.</p>
            <p><ms-specific>ilasm does not require <code>.assembly extern mscorlib</code>. It inserts in automatically.</ms-specific></p>
        </section>
     
        <section id="_classB" guid="72c29029-fd4b-4a0f-8e48-8512bf174aa1">
            <header><code>.class {}</code></header>
            <introduction>Defines a class (or a structure or a delegate or an interface)</introduction>
            <syntax>.class <ref>Attrs</ref> <ref>Name</ref> [&lt;<ref>GenericSpec</ref>&gt;] [extends <ref>ExtendedType</ref>  [implements <ref>ImplementedTypes</ref>]] {}</syntax>
            <syntax-dl>
                <dt><code-ref>Attrs</code-ref> (whitespace-separetd list of <ref>ClassAttr</ref>s)</dt>
                <dd>Class attributes sepeared with whitespaces. From syntactical point-of-view it's possible to use same attribute more than once.</dd>
                <dl>
                    <dt-code id="_classB-abstract">abstract</dt-code>
                    <dd>
                        Abstract (VB: <code>MustInherit</code>) class.
                        It's impossible to create instance of abstract class.
                        In case the class contains an abstract method it must be declared abstract.
                    </dd>
                    <dt-code id="_classB-sealed">sealed</dt-code>
                    <dd>The class that canno be derived (VB: <code>NotInheritable</code>).</dd>
                    <dd>The class that is <code>abstract</code> and <code>sealed</code> at same time should contain only static members (like standard modules in VB).</dd>
                    <break/>
                    <dt-code id="_classB-ansi">ansi</dt-code>
                    <dd>Use ANSI encoding for passing strings between managed and unmanaged code.</dd>
                    <dt-code id="_classB-autochar">autochar</dt-code>
                    <dd>Automatically select encoding (according to platform) to be used when passing strings between managed and unmanaged code.</dd>
                    <dt-code id="_classB-unicode">unicode</dt-code>
                    <dd>Use Unicode encoding when passing strings between managed and unmanaged code.</dd>
                    <dd rel="summary">
                        <code>ansi</code>, <code>autochar</code> and <code>unicode</code> define string marshaling from/to unmanaged code.
                        Cannot be combined. Default value is <code>ansi</code>.
                    </dd>
                    <break/>
                    <dt-code id="_classB-auto">auto</dt-code>
                    <dd>Let CLI to align instance fields in memory as it wishes.</dd>
                    <dt-code id="_classB-explicit">explicit</dt-code>
                    <dd>CLI will align instance fields in memory as stated for individual fields. Not allowed for generic types.</dd>
                    <dt-code id="_classB-sequential">sequential</dt-code>
                    <dd>CLI will align instance fields sequentially as they appear in metadata table.</dd>
                    <dd rel ="summary">
                        <code>auto</code>, <code>explicit</code> and <code>sequential</code> define alignment of instance fields of the class in memory.
                        Cannot be combined. Default value is <code>auto</code>.
                    </dd>
                    <break/>
                    <dt-code id="_classB-interface">interface</dt-code>
                    <dd>Defines that the class is an <internal-link ref="Interface">interface</internal-link>.</dd>
                    <break/>
                    <dt-code id="_classB-nested_assembly">nested assembly</dt-code>
                    <dd>Nested type acessible only from the assembly it's defined in (VB: <code>Friend</code>).</dd>
                    <dt-code id="_classB-nested_famandassem">nested famandassem</dt-code>
                    <dd>
                        Nested type acessible only from the assembly it's defined in and within that assembly only from types derived from containing typ.
                        This is AND-combination of <code>nested assembly</code> and <code>nested familly</code>.
                        (VB: not available).
                    </dd>
                    <dt-code id="_classB-nested_family">nested family</dt-code>
                    <dd>Netsed type accessible only from types derived from containing type (VB: <code>Protected</code>).</dd>
                    <dt-code id="_classB-nested_famorassem">nested famorassem</dt-code>
                    <dd>
                        Nested type accessible from assembly where it is defined or from types derived from containing type.
                        This is OR-combination of <code>nested assembly</code> and <code>nested family</code> (VB: <code>Protected Friend</code>).
                    </dd>
                    <dt-code id="_classB-nested_private">nested private</dt-code>
                    <dd>Nested type accessible only from containing type (VB: <code>Private</code>)</dd>
                    <dt-code id="_classB-nested_public">nested public</dt-code>
                    <dd>Nested type accessible everywhere where containing type is accessible (VB: <code>Public</code>)</dd>
                    <dt  id="_classB-private">private</dt>
                    <dd>Non-nested type accessible only from assembly it's defined in (VB: <code>Friend</code>)</dd>
                    <dt-code  id="_classB-public">public</dt-code>
                    <dd>Non-nested type visible from anywhere.</dd>
                    <dd rel="summary">
                        <code>nested</code> ..., <code>private</code> and <code>public</code> defines class visibility (accessibility).
                        Only one of them can be used.
                        In case of classes defined inside classes one of <code>nested</code> ... modifiers must be used.
                        In case of classes defined at assembly level (top-level) <code>private</code> or <code>public</code> must be used.
                        Default visibility for top-level classes is <code>public</code>.
                        Default visibility for nested classes is <code>nested private</code>.
                    </dd>
                    <break/>
                    <dt-code id="_classB-beforefieldinit">beforefieldinit</dt-code>
                    <dd>Instructs CLI to initialize static fields of type before first call to any static method of that type.</dd>
                    <dt-code id="_classB-rtspecialname">rtspecialname</dt-code>
                    <dd>
                        Indicates that type name has special meaning for CLI. Currently there are no special names of types defined.
                        In case <code>rtspecialname</code> is used <code>specialname</code> must be used as well.
                    </dd>
                    <dd>reserved for future use.</dd>
                    <dt-code id="_classB-serializable">serializable</dt-code>
                    <dd>Reserved for future use. It'll mean that fields are serialised to data stream. Serialization support will provided by CLI implementation.</dd>
                    <dd><ms-specific>Supported.</ms-specific></dd>
                    <dt-code id="_classB-specialname">specialname</dt-code>
                    <dd>Indicates that type name has special meaning for tools other than CLI.</dd>
                    <dt-code  id="_classB-import"><ms-specific>import</ms-specific></dt-code>
                    <dd><ms-specific>The type is imported from COM library</ms-specific></dd>
                </dl>
                <dt><code-ref>Name</code-ref> (<ref ref="Id">Id</ref>)</dt>
                <dd>The name of the class</dd>
                <dt><code-ref>GenericSpecs</code-ref> (comma-seperated list of <ref ref="GenPar">GenPar</ref>s)</dt>
                <dd>Specifies generic parameters</dd>
                <dt><code-ref>ExtendedType</code-ref> (<ref ref="TypeSpec">TypeSpec</ref>)</dt>
                <dd>The type this the class derives from. When ommited <see cref="T:System.Object"/> is assumed.</dd>
                <dt><code-ref>ImplementedTypes</code-ref> (comma-seperated list of <ref ref="TypeSpec">TypeSpec</ref>s).</dt>
                <dd>Comma-separeted list ot types (interfaces) this class implements</dd>
            </syntax-dl>
            <parents>
                <li>File</li>
                <internal-link ref="_classB">.class {}</internal-link>
            </parents>
            <children>
                <internal-link ref="_classB">.class {}</internal-link>
                <internal-link ref="_custom">.custom</internal-link>
                <internal-link ref="_data">.data</internal-link>
                <internal-link ref="_eventB">.event {}</internal-link>
                <internal-link ref="_field">.field</internal-link>
                <internal-link ref="_methodB">.method {}</internal-link>
                <internal-link ref="_override">.override</internal-link>
                <internal-link ref="_pack">.pack</internal-link>
                <internal-link ref="_param_type">.param type</internal-link>
                <internal-link ref="_propertyB">.property {}</internal-link>
                <internal-link ref="_size">.size</internal-link>
                <internal-link ref="_line">.line</internal-link>
                <internal-link ref="_permissionset">.permissionset</internal-link>
                <internal-link ref="_permission">.permission</internal-link>
            </children>
            <seealso>
                <internal-link ref="_class_externB">.class extern {}</internal-link>
            </seealso>
            <section guid="8ae835a1-4caa-420e-a8c9-6cd4b7bc65e4" id="Types-of-types" r="II.11">
                <header>Types of types</header>
                <introduction>
                    New types are defined by defining custom classes.
                    New types can be also defined as generic instances, arrays, vectors or pointers.
                    This sub-chapter describes types declared using the <internal-link ref="_classB">.class {}</internal-link> directive.
                </introduction>
                <dl>
                    <dt id="Reference-types"><b>Reference types</b></dt>
                    <dd>
                        Reference types are basic kind of types in CLI.
                        Each reference type derives from <see cref="T:System.Object"/> or from class derived from <see cref="T:System.Object"/> (with exception of special-purpose classes - see below).
                        No additional restrictions applies for reference types.
                    </dd>
                    <dd>Reference types are passed by reference when passed to methods, returned from methods or assigned to fields.</dd>
                    <dt id="Interfaces" r="II.12"><b>Interfaces</b></dt>
                    <dd>
                        Interface is special abstract type defined by the <internal-link ref="_classB-interface"><code>interface</code></internal-link> attribute.
                        An interface can be implemebted by either reference or value type.
                        To implement an interface a class must implement all abstract methods of the interface or derive from a class which implements them.
                        An exception is an abstract class which don't need to implement (all) those abstract methods, because instance of an abstract class cannot be created.
                        Interface methods not implemented by an abstract class must be implemented in a non-abstract class derived from such abstract class.
                    </dd>
                    <dd>
                        An interface can contain any static members (fields, methods etc.).
                        All instance methods of interfaces must be virtual and abstract. Interfaces cannot have instance fields.
                    </dd>
                    <dd>
                        It's not enough for an interface to be implemented by a type to implement all interface methods.
                        It must be explicitly stated for the type that it implements the interface (the <code>implements</code> clause of the <internal-link ref="_classB">.class {}</internal-link> directive.
                        In case a class implements an interface which requires implementation of another interface it's enough for class to specify implementation of of the more-specific of both interfaces (the derived one).
                    </dd>
                    <dd>
                        Interface can specify that it requires implementation of other interface(s) - derives from it/them.
                        (Technically it's not that an interface derives other interface(s) - it implements them.)
                    </dd>
                    <dd>For a method to implement a method of an interface following options are available:</dd>
                    <dl>
                        <dt>By signature</dt>
                        <dd>Class method has same name and signature as interface method.</dd>
                        <dt>By inheritance</dt>
                        <dd>Existing implementation of an interface is derived from base class.</dd>
                        <dt>Explict implementation</dt>
                        <dd>Uisng <code>MethodImpl</code> - the <internal-link ref="_override">.override</internal-link> directive.</dd>
                    </dl>
                    <dd>
                        The documentation does not deal with interface-level properties and events.
                        From practical usage we can deduce that same rules as for method applies.
                        Also note that properties and events are in fact only groups of related methods.
                    </dd>
                    <dt id="Value-types" r="II.13"><b>Value types</b></dt>
                    <dd>
                        Value types are not passed as reference but as contents of memory (they are copied when passed!).
                        Value types should be used for storing small amount of data.
                        Higher languages represents them as structures (while reference types are represented as classes).
                        Relation between value and reference type in CLI is similat to relation between structure and pointer to structure in C++.
                        Typical value types are complex number, date etc. 
                    </dd>
                    <dd>
                        Each value type can be easily transformed to corresponding reference type by a process called boxing.
                        Such boxed value type can be converted back to value type by a process of unboxing.
                    </dd>
                    <dd>Each value type must be <code-ref ref="_classB-sealed">sealed</code-ref> (it cannot be derived from) and it's base class must be either <see cref="T:System.ValueType"/> or <see cref="T:System.Enum"/>.</dd>
                    <dd>A value type can implement interfaces(s), but such implementation can be utilized only in boxed form.</dd>
                    <dd>
                        Value of non-boxed value type cannot be <code>null</code> and cannot be compared to <code>null</code>.
                        Value types are not treated as instances of other types, so the <internal-link ref="isints">isints</internal-link> instruction cannot be used with them (it can be used with boxed value type).
                    </dd>
                    <dd>
                        Item layout of value types can be controlled in the same way as in reference types.
                        It's usefull when comunicationg with native code.
                    </dd>
                    <dd>Value type can contain neither field of type of itself nor field of type of value type which contains field of that type (value type cannot directly or indirectly contain field of type itself - it would lead to allocation of infinite memory).</dd>
                    <dd>
                        Instance methods of value types obtains managed pointer to current instance to the <code>this</code> variable (while in reference types the <code>this</code> variable contains directly tha value of the refernce type - so a reference).
                    </dd>
                    <dt r="II.14.3"><b>Enumerations (enums)</b></dt>
                    <dd>
                        Enumerations are used to define set of symbols of the same value type.
                        CLI does not guarantee that value of variable of enum type is one of enum items.
                    </dd>
                    <dd>A type can be an enumeration only when it derives form <see cref="T:System.Enum"/>.</dd>
                    <dd>
                        Only fields are allowed as members of enumerations. An enumeration cannot implement any interface and must have <code>auto</code> layout.
                        An enumeration must have exactly one instance member field whose type determines enumeration sub-type.
                        By convention the field is named <code>value__</code> and marked <code>rtspecialname</code>.
                        The other member fields must be static literals not initialized using the <internal-link ref="initobj">initobj</internal-link> instruction.
                        Type of these variables is the enumeration itself and their values are stored in metadata using <ref>FieldInit</ref>
                        (see <code><internal-link ref="_field">.field</internal-link></code>).
                    </dd>
                    <dd>There is a direct conversion in both directions between enumerated type and its subtype.</dd>
                    <dt r="II.14.6"><b>Delegates</b></dt>
                    <dd>A delegate is managed equivalent of method pointer (CLI supports method pointers as well).</dd>
                    <dd>
                        A delegate is a <code>sealed</code> reference type, which directly or indirectly derives from <see cref="T:System.Delegate"/>
                        <ms-specific>(delegates derive from <see cref="T:System.MulticastDelegate"/>)</ms-specific>
                    </dd>
                    <dd>
                        Delegate can contain only first two or all four of methods below.
                        These methods are <code>runtime</code> and <code>managed</code> and don't have body specified - it's provided automatically by VES.
                        Other method which can be called on delegate types are inherited from base class.
                    </dd>
                    <dl>
                        <dt-code>.ctor</dt-code>
                        <dd>
                            Delegate instance constructor. It has exactly two parameters - <code><see cref="T:System.Object"/></code> and <code><see cref="T:System.IntPtr"/></code>.
                            The first one represents instance of class declaring the method delegate points to (pass null for static methods) and the other is pointer to that method.
                        </dd>
                        <dt-code>Invoke</dt-code>
                        <dd>A virtual method used to invoke method represented by this delegate. The signature of this method is same as signature of the delegate points to.</dd>
                        <dt-code>BeginInvoke</dt-code>
                        <dd>Optional. Compulsory when <code>EndInvoke</code> is present.</dd>
                        <dd>
                            A virtual method used to call the delegate asynchronously. It has signature similar to <code>Invoke</code>.
                            It's return type is <see cref="T:System.IAsyncResult"/>.
                            It has all the parameters <code>Invoke</code> has plus two more of types <see cref="T:System.AsyncCallback"/> and <see cref="T:System.Object"/>.
                        </dd>
                        <dt-code>EndInvopke</dt-code>
                        <dd>Optional. Compulsory when <code>BeginInvoke</code> is present.</dd>
                        <dd>
                            A virtual method with the same return type as <code>Invoke</code>.
                            It contains those of parameters of <code>Invoke</code> method which are of type managed pointer (in same order)
                            and after them last parameter of type <see cref="T:System.IAsyncResult"/>.
                        </dd>
                    </dl>
                    <dd>Unless stated otherwise, a standard delegates provide all four methods.</dd>
                    <dd><ms-specific>
                        Delegates can contain additional methods, in case programmer provides their implementation (i.e. methods are not <code>runtime</code>).
                        In such case the assembly is not portable.
                    </ms-specific></dd>
                </dl>
            </section>
        </section>
        <section id="_class_externB" guid="64f89792-5f6e-4725-a562-a2470e5c30a8" r="II.6.7">
            <header><code>.class extern {}</code></header>
            <introduction>
                Used in manifest module (note: there can be only one manifest module in each assembly).
                This directive defines a type exported (visible from) outside the assembly which is actually defined in different module of the assembly.
                Types defined in same module as assembly manifest are not required to be exported this way.
            </introduction>
            <syntax>.class extern (public | nested public) <ref>Name</ref> {}</syntax>
            <syntax-dl>
                <dt><code-ref>Name</code-ref> (<ref ref="DottedName">DottedName</ref>)</dt>
                <dd>The name of the class</dd>
                <dt-code>public | nested public</dt-code>
                <dd>Visibility attribute of the export. It must be same as visibility of type being exported.</dd>
            </syntax-dl>
            <parents><li>File</li></parents>
            <children>
                <internal-link ref="_file">.file</internal-link>
                <internal-link ref="_class_extern">.class extern</internal-link>
                <internal-link ref="_custom">.custom</internal-link>
            </children>
            <seealso>
                <internal-link ref="_assembly_extern">.assembly extern</internal-link>
                <internal-link ref="_assembly_externB">.assembly extern {}</internal-link>
                <internal-link ref="_classB">.class {}</internal-link>
                <internal-link ref="_class_extern">.class extern</internal-link>
                <internal-link ref="_module_extern">.module extern</internal-link>
            </seealso>
        </section>
        <section id="_class_extern_forwarderB" guid="bbd06bf5-809c-448b-ba57-bd06266a1a98" special="new">
            <header><code>.class extern forwarder {}</code></header>
            <introduction>A type forwarder indicates that type originally defined in current assembly is now located in a different assembly.</introduction>
            <syntax>.class extern forwarder <ref>Name</ref></syntax>
            <syntax-dl>
                <dt><code-ref>Name</code-ref> (<ref ref="DottedName">DottedName</ref>)</dt>
                <dd>Name of class originally defined in this assembly being forwarded to different assembly.</dd>
            </syntax-dl>
            <parents><li>File</li></parents>
            <children><internal-link ref="_assembly_extern">.assembly extern</internal-link></children>
            <p>
                VES shall resolve all references to that type to current assembly to type in assembly the type is forwarded to.
                Type forwarders allows assemblies copiled against original assembly to work correctly without recompilation when type is moved from original assembly to another assembly.
            </p>
            <seealso><internal-link ref="_class_externB">.class extern {}</internal-link></seealso>
        </section>
        <section id="_dataB" guid="f32ac5f8-850c-4bd5-83fb-36d525cfd335" r="II.16.3.1">
            <header><code>.data {}</code></header>
            <introduction>Represents data inserted to PE file.</introduction>
            <p>See <internal-link ref="_data"><code>.data</code></internal-link>.</p>
            <seealso>
                <internal-link ref="_data">.data</internal-link>
            </seealso>
        </section>
        <section id="_eventB" guid="f2f4cd46-66fe-451e-877e-83acd0739280" r="II.18">
            <header><code>.event {}</code></header>
            <introduction>Defines an event.</introduction>
            <syntax>.event [specialname] [rtspecialname] [<ref>Type</ref>] <ref>Name</ref> {}</syntax>
            <syntax-dl>
                <dt-code>specialname</dt-code>
                <dd>When specified means that name of the event has special meaning to tools other than CLI.</dd>
                <dt-code>rtspecialname</dt-code>
                <dd>When specified means that name of the event has special meaning to CLI.</dd>
                <dd>There are currently no names with special meaning to CLI defined.</dd>
                <dt><code-ref>Type</code-ref> (<ref ref="TypeSpec">TypeSpec</ref>)</dt>
                <dd>If present identifies the delegate type whose signature is same as signature of method for firing the event (fire).</dd>
                <dt><code-ref>Name</code-ref> (<ref ref="Id">Id</ref>)</dt>
                <dd>The name of the event.</dd>
            </syntax-dl>
            <parents>
                <internal-link ref="_classB">.class {}</internal-link>
            </parents>
            <children>
                <internal-link ref="_addon">.addon</internal-link>
                <internal-link ref="_custom">.custom</internal-link>
                <internal-link ref="_fire">.fire</internal-link>
                <internal-link ref="_line">.line</internal-link>
                <internal-link ref="_other">.other</internal-link>
                <internal-link ref="_removeon">.removeon</internal-link>
            </children>
            <seealso>
                <internal-link ref="_methodB">.method {}</internal-link>
                <internal-link ref="_propertyB">.property {}</internal-link>
            </seealso>
        </section>
        <section id="_methodB" guid="98c22e4f-42be-47be-8c90-90dab6ade593" r="II.15.4">
            <header><code>.method {}</code></header>
            <introduction>Defines a method (function, procedure, constructor, accessor, operator, etc.)</introduction>
            <syntax>
                .method <ref>MethAttr*</ref> [<ref>CallingConvention</ref>] <ms-specific>[\[in\] | \[opt\] | \[out\]]*</ms-specific> <ref>ReturnType</ref> [marshall \([<ref>ReturnMarshalling</ref>]\)] <ref>Name</ref> [&lt;<ref>GenPar</ref> [, <ref>GenPar</ref>]*>] \([<ref>Parameter</ref> [, <ref>Parameter</ref>]*]\) <ref>ImplAttr</ref>* {}
            </syntax>
            <syntax-dl>
                <dt r="II.15.4.2"><code-ref>MethAttr</code-ref> (<ref>MethAttr</ref>)</dt>
                <dd>Attributes of the method. Following values are possible:</dd>
                <dl>
                    <dt-code>abstract</dt-code>
                    <dd>
                        An abstract method. An abstract method must be <code>virtual</code> as well.
                        An abstract method does not contain implementation - it's provided by derived type.
                        Only abstract types can contain abstract methods. (VB: <code>MustOverride</code>)
                    </dd>
                    <dt-code id="_methodB-newslot">newslot</dt-code>
                    <dd>
                        The method gets a new slot in virtual methods table. It gets it always, even where there is method with same name and signature in a base class.
                        In case this attribute is not specified a method gets a new slot in virtual methods table only in case there's not method with same name and signature in a base class.
                        (VB: <code>Shadows</code>, not specified - <code>Overrides</code>; C#: <code>new</code>)
                    </dd>
                    <dd>Can be only used with <code>virtual</code> methods.</dd>
                    <break/>
                    <dt-code>final</dt-code>
                    <dd>Indicates that virtual method cannot be overriden in derived class (VB: <code>NotOverridable</code>). Final method must be virtual.</dd>
                    <dt-code>hidebysig</dt-code>
                    <dd>
                        The method hides method with same name and signature from base class.
                        In case this attribute is ommited current method hides all methods of base class(es) with same name not comparing signature.
                        VES does not control or verify this. This is feature for tools (i.e. compilers).
                    </dd>
                    <dd>
                        VB: In case this attribute is ommited and the method is virtual it's marked as <code>Shadows</code> in Visual Basic,
                        but <code>Shadows</code> in Visual Basic hides also members of different type than method (fields, events, types, etc.).
                    </dd>
                    <dd>See also <code><internal-link ref="_methodB-newslot">newslot</internal-link></code>.</dd>
                    <dt-code>static</dt-code>
                    <dd>A method is static (not instance) (VB: <code>Shared</code>)</dd>
                    <dt-code>virtual</dt-code>
                    <dd>A method is virtual (can be overriden in derived class) (VB: <code>Overridable</code>)</dd>
                    <dt-code>strict</dt-code>
                    <dd>Check method accessibility when overriding it. Must be virtual. Means that virtual method can only be overriden when it's accessible.</dd>
                    <dd rel="summary">
                        <code>final</code>, <code>hidebysig</code>, <code>static</code>, <code>virtual</code> and <code>strict</code> are calle Method contract attributes.
                        These attributes can be combined with exceptions that mathod cannot be <code>static</code> and <code>virtual</code> at the same time,
                        and only <code>virtual</code> methods can be <code>final</code> or <code>strict</code>, and <code>abstract</code> methods cannot be <code>final</code>.
                    </dd>
                    <break/>
                    <dt-code>assembly</dt-code>
                    <dd>The method is accessible only from assembly it's defined in (not widening accessibility of declaring type). (VB: <code>Friend</code>, C#: <code>internal</code>)</dd>
                    <dt-code>famandassem</dt-code>
                    <dd>Comines accessibilities <code>family</code> and <code>assembly</code> using AND operator. (VB/C#: No equivalent)</dd>
                    <dt-code>family</dt-code>
                    <dd>The method is accessible from type it's defined in and from types derived from it. (VB: <code>Protected</code>, C#: <code>protected</code>)</dd>
                    <dt-code>famorassem</dt-code>
                    <dd>Combines accessibilities <code>family</code> and <code>assembly</code> uisng OR operator. (VB: <code>Protected Friend</code>, C#: <code>protected internal</code>)</dd>
                    <dt-code>private</dt-code>
                    <dd>The method is accessible only from type it's defined in (VB: <code>Private</code>)</dd>
                    <dt-code>public</dt-code>
                    <dd>The method is accessible from everywhere where declaring type is accessible (VB: <code>Public</code>)</dd>
                    <dt-code>compilercontrolled</dt-code>
                    <dd>
                        Method accessiblity is verified by a compiler. <ms-specific>Not supported by ilasm.
                        Use <code><internal-link ref="_methodB-privatescope">privatescope</internal-link></code> instead.</ms-specific></dd>
                    <dd rel="summary">Only one of accessibility parameters can be specified</dd>
                    <break/>
                    <dt-code>pinvokeimpl \(<ref ref="QSTRING">QSTRING1</ref> [as <ref ref="QSTRING">QSTRING2</ref>] <ref>PinvAttr</ref>*\)</dt-code>
                    <dd>
                        The method is actually implemented by native code of current platform.
                        The method shall have attributes <code>native</code> and <code>unmabaged</code> and shall be static and defined in global scope (i.e. outside any type).
                        The method also shall have no body specified.
                    </dd>
                    <dl>
                        <dt><code-ref>QSTRING1</code-ref> (<ref ref="QSTRING">QSTRING</ref>)</dt>
                        <dd>
                            First <ref ref="QSTRING">QSTRING</ref> is platform-specific description indicating where the implementation of the method is located.
                            For example on Windows this is the name of the DLL containing method implementation.
                        </dd>
                        <dt><code-ref>QSTRING2</code-ref> (<ref ref="QSTRING">QSTRING</ref>)</dt>
                        <dd>
                            Optionsl. Second <ref ref="QSTRING">QSTRING</ref> is the name of the method as it exists on that platform.
                            Note: Platform ca use name-mangling rules to make the method to appear differently to managed code from it's name in original language.
                            Typical for native code generated by C++ compiler.
                        </dd>
                        <dt-code-ref r="II.15.5.2">PinvAttr</dt-code-ref>
                        <dd>P/Invoke parameters. These parameters are platform-specific and their meanings are only suggestions.</dd>
                        <dl>
                            <dt-code>ansi</dt-code>
                            <dd>ANSI character set - typical for C/C++ string</dd>
                            <dt-code>autochar</dt-code>
                            <dd>Character set id determined automatically - there representation which is natural to the platform is used (e.g. ANSI on Windows 95 and Unicode on Windows 7).</dd>
                            <dt-code>unicode</dt-code>
                            <dd>Unicode character set - platform-specific representation of Unicode.</dd>
                            <dd rel="summary">
                                Character set attributes <code>ansi</code>, <code>autochar</code>, <code>unicode</code> are mutually exlusive.
                                These attributes govern how strings are marshaled to and from unmanaged code.
                            </dd>
                            <break/>
                            <dt-code>cdecl</dt-code>
                            <dd>Standard C-style call</dd>
                            <dt-code>fastcall</dt-code>
                            <dd>C-style fastcall</dd>
                            <dt-code>stdcall</dt-code>
                            <dd>Standard C++-style call</dd>
                            <dt-code>thiscall</dt-code>
                            <dd>The method accepts an implicit this-pointer.</dd>
                            <dt-code>platformapi</dt-code>
                            <dd>Use call convention appropriate for target platform.</dd>
                            <dd><ms-specific>Not recognized by ilasm, use <code>winapi</code> instead.</ms-specific></dd>
                            <dd><ms-specific>Indicates that name of cunction in the DLL should be precisely the same as specified - rather than attempting to add A (for ASCII) or W (for widechar) to find platform-specific variants based on marshalling type requested.</ms-specific></dd>
                            <dt-code><ms-specific>winapi</ms-specific></dt-code>
                            <dd rel="summary">Calling method attributes are mutually exclusive. They are platform-specific and define calling convention for native code.</dd>
                            <dd rel="summary"><ms-specific><new>
                                When none of <code>cdecl</code>, <code>fastcall</code>, <code>stdcall</code>, <code>thiscall</code> or <code>winapi</code> are specified calling convention defaults to <code>winapi</code>.
                            </new></ms-specific></dd>
                            <break/>
                            <dt-code><ms-specific>lasterr</ms-specific></dt-code>
                            <dd><ms-specific>Indicates that native method supports C-style last error querying.</ms-specific></dd>
                            <dt-code><ms-specific>nomangle</ms-specific></dt-code>
                            <dd><ms-specific>Use on Microsft platfrom instead on <code>platformapi</code> which is not recognized by ilasm.</ms-specific></dd>
                        </dl>
                    </dl>
                    <break/>
                    <dt-code r="II.15.4.2.6">rtspecialname</dt-code>
                    <dd>The name of the method has special meaning to CIL. Predefined special names are:</dd>
                    <dl>
                        <dt-code>.ctor</dt-code>
                        <dd>Class constructor</dd>
                        <dt-code>.cctor</dt-code>
                        <dd>Type initializer (static constructor)</dd>
                    </dl>
                    <dt-code r="II.15.4.2.6">specialname</dt-code>
                    <dd>Indicates that name of this method have special meaning to tools other than CIL.</dd>
                    <break/>
                    <dt-code><ms-specific>unmanagedexp</ms-specific></dt-code>
                    <dd><ms-specific>Indicates that the method is exported to unmanaged code using COM-interop.</ms-specific></dd>
                    <dt-code><ms-specific>reqsecobj</ms-specific></dt-code>
                    <dd><ms-specific>Indicates that method calls another method with security attributes.</ms-specific></dd>
                    <dt-code id="_methodB-privatescope"><ms-specific>privatescope</ms-specific></dt-code>
                    <dd><ms-specific>ilasm does not recognize <code>compilercontrolled</code>, use <code>privatescope</code> instead.</ms-specific></dd>
                </dl>
                <dd>
                    Some combinations of method attributes are invalid:
                    <code>static</code> combined with any of <code>final</code>, <code>newslot</code>, or <code>virtual</code>;
                    <code>abstract</code> combined with any of <code>final</code> or <code>pinvokeimpl</code>;
                    <code>compilercontrolled</code> combined with any of <code>final</code>, <code>rtspecialname</code>, <code>specialname</code>, or <code>virtual</code>.
                </dd>
                <dt><code-ref>CallingConvention</code-ref> (<ref ref="CallConv">CallConv</ref>)</dt>
                <dd>Determines method calling convention - how paremeters are passed and how this-pointer is passed (if applicable).</dd>
                <dt><code-ref>ReturnType</code-ref> (<ref ref="Type">Type</ref>)</dt>
                <dd>Return type of method. In case the method returns no value use <code>void</code>.</dd>
                <dt><code-ref>ReturnMarshalling</code-ref> (<ref ref="NativeType">NativeType</ref>)</dt>
                <dd>Defines how return value is passed from unmanaged code.</dd>
                <dt><code-ref>Name</code-ref> (<ref>MethodName</ref>)</dt>
                <dd>Name of the method. It can be 'normal' name or special name.</dd>
                <dd><code>.cctor | .ctor | <ref ref="DottedName">DottedName</ref></code></dd>
                <dl>
                    <dt-code>.cctor</dt-code>
                    <dd>The method is type initializer. <code>rtspecialname</code> attribute is required.</dd>
                    <dt-code>.ctor</dt-code>
                    <dd>The method is object constructor. <code>rtspecialname</code> attribute is required.</dd>
                    <dt><code-ref>DottedName</code-ref> (<ref ref="DottedName">DottedName</ref>)</dt>
                    <dd>Name of normal (not special) method.</dd>
                </dl>
                <dt><code-ref>GenPar</code-ref> (<ref ref="GenPar">GenPar</ref>)</dt>
                <dd>Specifies generic parameters of a method (in case the method is generic).</dd>
                <dt><code-ref>Parameter</code-ref> (<ref ref="Param">Param</ref>)</dt>
                <dd>Method parameters define method signature.</dd>
                <dt r="II.15.4.3"><code-ref>ImplAttr</code-ref> (<ref>ImplAttr</ref>)</dt>
                <dd>Method implementation attributes.</dd>
                <dl>
                    <dt-code>cil</dt-code>
                    <dd>The method contains 'normal' (managed) CIL code. In cate the method is not abstract method body must be specified.</dd>
                    <dt-code>native</dt-code>
                    <dd>
                        The method contains native code. Native methods don't have a body. They reffer to native method instead.
                        Body of native method is typically provided by P/Invoke.
                    </dd>
                    <dt-code>runtime</dt-code>
                    <dd>Method body is not specified - it's provided by runtime. This option is used primarily for delegates.</dd>
                    <dd rel="summary">Only one of <code>cil</code>, <code>native</code>, and <code>runtime</code> attributes can be specified.</dd>
                    <break/>
                    <dt-code>managed</dt-code>
                    <dd>The method is managed - the imlementation is in CIL.</dd>
                    <dt-code>unmanaged</dt-code>
                    <dd>The method is unmanaged - typically it's called via P/Invoke.</dd>
                    <dd rel="summary"><code>managed</code> and <code>unmanaged</code> cannot be combined.</dd>
                    <break/>
                    <dt-code>forwardref</dt-code>
                    <dd>
                        The declaration does not specify method body (i.e. method body is specified elsewhere).
                        This attribute cannot be present in assembly when it's loaded to VES.
                        The attribute is used by tools like linker when combining an assembly from more separately compiled modules to resulver forward references.
                    </dd>
                    <dt-code>internalcall</dt-code>
                    <dd>The body of the method is provided by CLI itself. The attribute shall not be used for methods intended to be used across implementations of CLI.</dd>
                    <dd>
                        This attribute is typically used by low-level methods in BCL.
                        <ms-specific>It allows the lowest-level parts of BCL to wrap unmanaged code into the CLI.</ms-specific>
                    </dd>
                    <dt-code>noinlining</dt-code>
                    <dd>
                        Prevents runtime from in-line expansion of the method (replacement of methad call instruction with method body).
                        That means that method body shall not become part of place the method is called from (when JIT converting CIL code to native code).
                        The method must be kept as separate rutine.
                        This allows for the method to be visible for debuggers and allows to change default heuristic of CIL-to-native compiler.
                    </dd>
                    <dt-code><new>nooptimization</new></dt-code>
                    <dd><new>The runtime (CIL-to-native compiler) shall not optimize the method when generating native code.</new></dd>
                    <dt-code>synchronized</dt-code>
                    <dd>
                        Specifies that whole body of the method must be single-threaded.
                        In case the method is instance or virtual method lock on this-object shall be obtained prior execution.
                        For static lock on declaring type (closed in case of generic type) shall be obtained.
                        If a lock cannot be obtained the requesting thread cannot proceed untill its granted the lock.
                        The lock is released when the method exists (through normal return or exception).
                    </dd>
                    <break/>
                    <dt-code><ms-specific>preservesig</ms-specific></dt-code>
                    <dd>
                        <ms-specific>Specifies that the method signature is mangled to return HRESULT, with the return value as parameter.</ms-specific>
                    </dd>
                </dl>
                <dt-code><ms-specific>\[in\] | \[opt\] | \[out\]</ms-specific></dt-code>
                <dd><ms-specific>
                    Documentation allows to use <code>[<ref>ParamAttr</ref>]*</code> between <code>[<ref>CallingConvention</ref>]</code> and <code-ref>ReturnType</code-ref>,
                    but it does not state what it is good for. (Probably for retuern value or with connection with <code>preservesig</code>.)
                    Meaning of modifiers when used for method parameter is described in <ref ref="Param">Param</ref> section.
                </ms-specific></dd>
            </syntax-dl>
            <parents>
                <li>File</li>
                <internal-link ref="_classB">.class {}</internal-link>
            </parents>
            <children>
                <internal-link ref="_custom">.custom</internal-link>
                <internal-link ref="_data">.data</internal-link>
                <internal-link ref="_emitbyte">.emitbyte</internal-link>
                <internal-link ref="_entrypoint">.entrypoint</internal-link>
                <internal-link ref="_locals">.locals</internal-link>
                <internal-link ref="_maxstack">.maxstack</internal-link>
                <internal-link ref="_override">.override</internal-link>
                <internal-link ref="_override_method">.override method</internal-link>
                <internal-link ref="_param">.param</internal-link>
                <internal-link ref="_param_type">.param type</internal-link>
                <internal-link ref="_line">.line</internal-link>
                <internal-link ref="instructions">Instruction</internal-link>
                <internal-link ref="Label">Label</internal-link>
                <internal-link ref="_permission">.permission</internal-link>
                <internal-link ref="_permissionset">_permissionset</internal-link>
                <internal-link ref="_try">.try</internal-link>
                <internal-link ref="B">{}</internal-link>
            </children>
            <seealso>
                <internal-link ref="_propertyB">.property {}</internal-link>
                <internal-link ref="_eventB">.event {}</internal-link>
                <internal-link ref="_field">.field</internal-link>
            </seealso>
        </section>
        <section id="_mresourceB" guid="9e4a0be1-b517-42c5-a5b3-915a427c1a30" r="II.6.2.2">
            <header><code>.mresource {}</code></header>
            <introduction>Manifest resource is named item of data associated with an assembly.</introduction>
            <syntax>.mresource [public | private] <ref>Name</ref> {}</syntax>
            <syntax-dl>
                <dt-code>private</dt-code>
                <dd>The resource is not exported, so it's accessible only within declarring assembly.</dd>
                <dt-code>public</dt-code>
                <dd>The resource is exported, so it's accessible from other assemblies.</dd>
                <dt><code-ref>Name</code-ref> (<ref ref="DottedName">DottedName</ref>)</dt>
                <dd>Name of the resource.</dd>
            </syntax-dl>
            <parents><li>File</li></parents>
            <children>
                <internal-link ref="_assembly_extern">.assembly extern</internal-link>
                <internal-link ref="_custom">.custom</internal-link>
                <internal-link ref="_file">.file</internal-link>
            </children>
            <seealso><internal-link ref="_data">.data</internal-link></seealso>
        </section>
        <section id="_propertyB" guid="1f1e1094-1887-4b78-ac30-748ee0970899" r="II.17">
            <header><code>.property {}</code></header>
            <introduction>Defines a property. Property is pair of methods for getting and setting it's value. One method is optional. Additional methods may be added to property.</introduction>
            <syntax>.property [specialname] [rtspecialname] <ref>CallingConvention</ref> <ref>Type</ref> <ref>Name</ref> \([<ref>Param</ref> [, <ref>Param</ref>]*]\)</syntax>
            <syntax-dl>
                <dt-code>specialname</dt-code>
                <dd>Indicates that name of the property has special meaning to tools other than CLI.</dd>
                <dt-code>rtspecialname</dt-code>
                <dd>Indicate sthat name of the property has special meaning to CLI. Currently there are not runtime special names of properties defined.</dd>
                <break/>
                <dt><code-ref>CallingConvention</code-ref> (<ref ref="CallConv">CallConv</ref>)</dt>
                <dd>Property calling convention</dd>
                <dt><code-ref>Type</code-ref> (<ref ref="Type">Type</ref>)</dt>
                <dd>The type of the property</dd>
                <dt><code-ref>Param</code-ref> (<ref ref="Param">Param</ref>)</dt>
                <dd>Property parameters - in case the property is so-called indexer.</dd>
                <dd rel="summary">Signature of the property (parameters and return type) must be same as signature of get method.</dd>
            </syntax-dl>
            <parents><internal-link ref="_classB">.class {}</internal-link></parents>
            <children>
                <internal-link ref="_custom">.custom</internal-link>
                <internal-link ref="_get">.get</internal-link>
                <internal-link ref="_other">.other</internal-link>
                <internal-link ref="_set">.set</internal-link>
                <internal-link ref="_line">.line</internal-link>
            </children>
            <seealso>
                <internal-link ref="_methodB">.method {}</internal-link>
                <internal-link ref="_eventB">.event {}</internal-link>
            </seealso>
        </section>
        <section id="B" guid="ca3fd78c-49e4-4128-accd-62e6000a5b02">
            <header><code>{}</code></header>
            <introduction>A code block is used to group method body elements together. It's also used as exception handler body.</introduction>
            <syntax>{}</syntax>
            <parents>
                <internal-link ref="_methodB">.method {}</internal-link>
                <internal-link ref="B">{}</internal-link>
            </parents>
            <children>
                <internal-link ref="_custom">.custom</internal-link>
                <internal-link ref="_data">.data</internal-link>
                <internal-link ref="_emitbyte">.emitbyte</internal-link>
                <internal-link ref="_entrypoint">.entrypoint</internal-link>
                <internal-link ref="instructions">Instruction</internal-link>
                <internal-link ref="Label">Label</internal-link>
                <internal-link ref="_line">.line</internal-link>
                <internal-link ref="_locals">.locals</internal-link>
                <internal-link ref="_maxstack">.maxstack</internal-link>
                <internal-link ref="_override">.override</internal-link>
                <internal-link ref="_override_method">.override method</internal-link>
                <internal-link ref="_param">.param</internal-link>
                <internal-link ref="_param_type">.param type</internal-link>
                <internal-link ref="_permission">.permission</internal-link>
                <internal-link ref="_permissionset">.permissionset</internal-link>
                <internal-link ref="_try">.try</internal-link>
                <internal-link ref="B">{}</internal-link>
            </children>
            <p><ms-specific>
                The code block (also called scope) defines a scope where local variables are accessible by their name.
                Because it's possible to nest blocks, variable reference will be determined from inner-most block (from reference point-of-view).
                The declaration in nested block hides declaration from parent block.
                In case of duplicate declarations (not recomended) there reference will resolve to tirst variable with given name.
                By-name visisbility scopes don't affect variable life-cycle - all local variables are created (and possibly initialized) when a method is entered and are kept alive until the method exits.
                Local variables can be accessed using 0-based indexes everywhere inside method body.
                Indexes are assigned to variables in order of their declarations (if the index is not explicitly set).
            </ms-specific></p>
            <seealso>
                <internal-link ref="_try">.try</internal-link>
                <internal-link ref="catch">catch</internal-link>
                <internal-link ref="fault">fault</internal-link>
                <internal-link ref="filter">filter</internal-link>
                <internal-link ref="finally">finally</internal-link>
            </seealso>
        </section>
    </section>
    <!--Line directives-->
    <section id="line-directives" guid="f10e0e48-2b07-4b5e-97f2-24a4087488db">
        <header>Line directives</header>
        <introduction>Describes single-line directives.</introduction>
        <section id="_addon" guid="99ea7f76-b428-49da-9349-5a48c06298ff" r="II.18">
            <header><code>.addon</code></header>
            <introduction>Defines add method for event. This method is used for adding handler to an event.</introduction>
            <syntax>.addon <ref>CallingConvention</ref> <ref>Type</ref> [<ref>TypeSpec</ref>::] <ref>MethodName</ref> \([<ref>Param</ref> [, <ref>Param</ref>]]\)</syntax>
            <syntax-dl>
                <dt><code-ref>CallingConvention</code-ref> (<ref ref="CallConv">CallConv</ref>)</dt>
                <dd>Method calling convention</dd>
                <dt><code-ref>Type</code-ref> (<ref ref="Type">Type</ref>)</dt>
                <dd>Method return type</dd>
                <dt><code-ref>TypeSpec</code-ref> (<ref ref="TypeSpec">TypeSpec</ref>)</dt>
                <dd>The type where the method is declared. Defaults to same type the event is declared in.</dd>
                <dt><code-ref>MethodName</code-ref> (<ref ref="MethodName">MethodName</ref>)</dt>
                <dd><code>.cctor | .ctor | <ref>DottedName</ref></code></dd>
                <dd>The name of referenced method. Theoretically <code>.cctor</code> and <code>.ctor</code> are possible, practically it cannot work.</dd>
                <dt><code-ref>Param</code-ref> (<ref ref="Param">Param</ref>)</dt>
                <dd>Parameters define signature of refereced method.</dd>
            </syntax-dl>
            <parents><internal-link ref="_eventB">.event {}</internal-link></parents>
            <p>CLS specifies naming conventions and consistency constraints for event methods and requires the add method to be marked with <code>specialname</code>.</p>
            <seealso>
                <internal-link ref="_fire">.fire</internal-link>
                <internal-link ref="_get">.get</internal-link>
                <internal-link ref="_other">.other</internal-link>
                <internal-link ref="_removeon">.removeon</internal-link>
                <internal-link ref="_set">.set</internal-link>
            </seealso>
        </section>
        <section id="_assembly_extern" guid="5a648710-1ab1-40cf-a057-c2b0217fb166">
            <header><code>.assembly extern</code></header>
            <introduction>
                Used in manifest resource to point to different assembly. That means that manifest resource is external assembly with given name.
                <new>Used in class extern forwarders to point to assembly tybe has been moved (forwarded) to.</new>
            </introduction>
            <syntax>.assembly extern <ref>Name</ref></syntax>
            <syntax-dl>
                <dt><code-ref>Name</code-ref> (<ref ref="DottedName">DottedName</ref>)</dt>
                <dd>Name of external assembly taht is source of manifest resource.</dd>
            </syntax-dl>
            <parents>
                <internal-link ref="_mresourceB">.mresource {}</internal-link>
                <li><new><internal-link ref="_class_extern_forwarderB">.class extern forwarder {}</internal-link></new></li>
            </parents>
            <p>See also <internal-link ref="_assembly_externB">.assembly extern {}</internal-link>.</p>
            <seealso>
                <internal-link ref="_assembly_externB">.assembly extern {}</internal-link>
                <internal-link ref="_class_externB">.class extern {}</internal-link>
                <internal-link ref="_class_extern">.class extern</internal-link>
                <internal-link ref="_module_extern">.module extern</internal-link>
            </seealso>
        </section>
         <section id="catch" guid="a149a1d6-8ac4-45c0-b729-4a8ef142f27d" r="II.19.3">
            <header><code>catch</code></header>
             <introduction>Catches an exception. The block defines type of exception to be caught and the code to be launched when it is caught.</introduction>
             <syntax>catch <ref>ExceptionType</ref> (handler <ref>Label</ref> to <ref>Label</ref> | {})</syntax>
             <syntax-dl>
                 <dt><code-ref>ExceptionType</code-ref> (<ref ref="TypeReference">TypeReference</ref>)</dt>
                 <dd>The type of exception to be caught.</dd>
                 <dt-code>handler <ref>Label</ref> to <ref>Label</ref></dt-code>
                 <dd>Defines range of labels the code to handle exception caught lies between.</dd>
                 <dd>See also <internal-link ref="handler">handler</internal-link></dd>
                 <dt><code>{}</code> (<ref ref="B">ScopeBlock</ref>)</dt>
                 <dd>Contains the code used to handle exception caught.</dd>
                 <dd>See also <internal-link ref="B">{}</internal-link></dd>
             </syntax-dl>
             <parents><internal-link ref="_try">.try</internal-link></parents>
             <children>
                 <internal-link ref="handler">handler</internal-link>
                 <internal-link ref="B">{}</internal-link>
             </children>
             <seealso>
                 <internal-link ref="fault">fault</internal-link>
                 <internal-link ref="filter">filter</internal-link>
                 <internal-link ref="finally">finally</internal-link>
                 <internal-link ref="Label">Label</internal-link>
             </seealso> 
        </section>
        <section id="_class_extern" guid="7eff8b3a-6950-495a-b1e1-883561e32883">
            <header><code>.class extern</code></header>
            <introduction>N/A</introduction>
            <syntax>.class extern <ref>Name</ref></syntax>
            <syntax-dl>
                <dt><code-ref>Name</code-ref> (<ref ref="DottedName">DottedName</ref>)</dt>
                <dd>Name of the class</dd>
            </syntax-dl>
            <parents><internal-link ref="_class_externB">.class extern {}</internal-link></parents>
            <p>The documentation does not describe this directive.</p>
            <seealso>
                <internal-link ref="_assembly_externB">.assembly extern {}</internal-link>
                <internal-link ref="_assembly_extern">.assembly extern</internal-link>
                <internal-link ref="_class_externB">.class extern {}</internal-link>
                <internal-link ref="_module_extern">.module extern {}</internal-link>
            </seealso>
        </section>
        <section id="_corflags" guid="bbd06bf5-809c-448b-ba57-bd06266a1a97" r="II.25.3.3.1">
            <header><code>.corflags</code></header>
            <introduction>
                Sets a field in CLI header of resulting PE file. CLI expects value 1 there. Because of backward compatibility 3 LSBs are reserved.
                Future versions may define meaning of values from 8 to 65535. Values higher than 65535 are intended for experimental and non-standard use.
            </introduction>
            <syntax>.corflags <ref>Value</ref></syntax>
            <syntax-dl>
                <dt><code-ref>Value</code-ref> (<ref ref="Int32">Int32</ref>)</dt>
                <dd>Value for runtime flags field. Each flag means mask in 32-bit number (not a value). Each flag can have value 0 or 1.</dd>
                <dd>Default value of entire field is 1.</dd>
                <dl>
                    <dt-code>COMIMAGE_FLAGS_ILONLY = 0x1</dt-code>
                    <dd>Always 1.</dd>
                    <dt-code>COMIMAGE_FLAGS_32BITREQUIRED = 0x2</dt-code>
                    <dd>Image can be loaded only to 32-bit process. CLI implementation with 64-bit native integer refuses to load such binary file.</dd>
                    <dd>Assembly may require this from various reasons - e.g. it contains 32-bit vtablefixups or casts from native integer to 32-bit integer.</dd>
                    <dt-code>COMIMAGE_FLAGS_STRONGNAMESIGNED = 0x8</dt-code>
                    <dd>Image has strong name signature.</dd>
                    <dt-code>COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x10000</dt-code>
                    <dd>Always 0.</dd>
                    <dt-code><new>COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 0x0000001</new></dt-code>
                    <dd><new>Always 0.</new></dd>
                    <dd><new><ms-specific>
                        The flag can be 1 in case RVA references the native function which is real entry point of assembly.
                        In such case <code>COMIMAGE_FLAGS_ILONLY</code> must be 0.
                    </ms-specific></new></dd>
                </dl>
                <dd><new>All unspecified bits should be zero.</new></dd>
            </syntax-dl>
            <parents><li>File</li></parents>
            <seealso><internal-link ref="_emitbyte">.emitbyte</internal-link></seealso>
        </section>
        <section id="_culture" guid="4eef6475-af48-4fc0-b4fd-4258567e872c" r="II.6.2.1.2">
            <header><code>.culture</code></header>
            <introduction>Indicates that the assembly has been customized for certain culture.</introduction>
            <syntax>.culture <ref>Culture</ref></syntax>
            <syntax-dl>
                <dt><code-ref>Culture</code-ref> (<ref ref="QSTRING">QSTRING</ref>)</dt>
                <dd>
                    A culture. Accepts same strings as <see cref="T:System.Globalization.CultureInfo"/>.
                    Culture names follow IETF RFC 1766 format <code><ref>language2</ref>-<ref>REGION2</ref></code>,
                    where <code-ref>language2</code-ref> is lowercase two-letter ISO 639-1 language code
                    and <code-ref>REGION2</code-ref> is uppercase two-letter ISO 3166 country code.
                </dd>
                <dd>When used for comrarison between assembly reference and assembly comparison shall be done in case-insensitive manner.</dd>
            </syntax-dl>
            <parents>
                <internal-link ref="_assemblyB">.assembly {}</internal-link>
                <internal-link ref="_assembly_externB">.assembly extern {}</internal-link>
            </parents>
            <p><ms-specific>ilasm does not support <code>.culture</code>, use <code><internal-link ref="_locale">.locale</internal-link></code> instead.</ms-specific></p>
            <seealso><li><ms-specific><internal-link ref="_locale">.locale</internal-link></ms-specific></li></seealso>
        </section>
        <section id="_custom" guid="42f510fb-4882-4df0-a585-9837067a66df" r="II.21">
            <header><code>.custom</code></header>
            <introduction>
                A custom attribute. A custom attribute can be attached to any metadata item with exception of <code>.custom</code>.
                Custom attributes are ususally assigned to <internal-link ref="_assemblyB">assemblies</internal-link>, <internal-link ref="_module">modules</internal-link>,
                <internal-link ref="_classB">classes</internal-link>, <internal-link ref="_classB">interfaces</internal-link>, <internal-link ref="_classB">structures</internal-link>, 
                <internal-link ref="_field">fields</internal-link>, <internal-link ref="_propertyB">properties</internal-link>, <internal-link ref="_eventB">events</internal-link>,
                <internal-link ref="_param">parameters</internal-link> and <internal-link ref="_param_type">generic parameters</internal-link>.
                A custom attribute is assigned to item immediatelly preceding it.
            </introduction>
            <syntax>.custom <ref>CallingConvention</ref> <ref>Type</ref> [<ref>TypeSpec</ref>::] <ref>MethodName</ref> \([<ref>Param</ref> [, <ref>Param</ref>]*]\) [= \(<ref>Data</ref>\)]</syntax>
            <syntax-dl>
                <dt><code-ref>CallingConvention</code-ref> (<ref ref="CallConv">CallConv</ref>)</dt>
                <dd>CTor calling convention</dd>
                <dt><code-ref>Type</code-ref> (<ref ref="Type">Type</ref>)</dt>
                <dd>CTor return type - <code>void</code></dd>
                <dt><code-ref>TypeSpec</code-ref> (<ref ref="TypeSpec">TypeSpec</ref>)</dt>
                <dd>Type of the custom attribute.</dd>
                <dd>
                    From syntactical point-of-view specification of custom attribute type is optional.
                    However it can be ommited only in case custom attribute is applied at type-level or lower.
                    Default value is type at which level the attribute is used.
                    So ommiting <code-ref>TypeSpec</code-ref> causes the attribute to be applied on itself or one of its members.
                </dd>
                <dt><code-ref>MethodName</code-ref> (<ref>MethodName</ref>)</dt>
                <dd>Always <code>.ctor</code> because it's necessary to call attribute CTor.</dd>
                <dd rel="summary">So, part of attribute application looks like <code>.custom instance void MyAttribute::.ctor</code>.</dd>
                <dt><code-ref>Param</code-ref> (<ref ref="Param">Param</ref>)</dt>
                <dd>Parameters determine CTor signature.</dd>
                <break/>
                <dt><code-ref>Data</code-ref> (<ref ref="Bytes">Bytes</ref>)</dt>
                <dd>
                    Blob of constructor data. Can be ommited when constructor has no parameters.
                    In case CTor has any parameters (or fields/properties are about to be initialized) values of them are specified in byte array.
                </dd>
            </syntax-dl>
            <parents>
                <li>File</li>
                <internal-link ref="_assemblyB">.assembly {}</internal-link>
                <internal-link ref="_assembly_externB">.assembly extern {}</internal-link>
                <internal-link ref="_classB">.class {}</internal-link>
                <internal-link ref="_eventB">.event {}</internal-link>
                <internal-link ref="_methodB">.method {}</internal-link>
                <internal-link ref="_mresourceB">.mresource {}</internal-link>
                <internal-link ref="_propertyB">.property {}</internal-link>
                <internal-link ref="B">{}</internal-link>
            </parents>
            <p>More on custom attributes in section <internal-link ref="custom-attributes">Custom attributes</internal-link>.</p>        
            <seealso>
                <internal-link ref="_param">.param</internal-link>
                <internal-link ref="_param_type">.param type</internal-link>
                <internal-link ref="custom-attributes">Custom attributes</internal-link>
            </seealso>
            <section id="_custom-binary" guid="55ff4585-a97a-4ed1-b06e-8e60c84d166b" r="II.23.3">
                <header>Custom attributes binary format</header>
                <introduction>Describes binary format of data passed to custom attributes.</introduction>
                <p>
                    Common yntax for custom attribute application looks like <code>.custom instance void <ref>MyAttribute</ref>::.ctor(<ref>params</ref>) = (<ref>data</ref>)</code>,
                    where <code-ref>data</code-ref> is binary byte array of type <ref ref="Bytes">Bytes</ref>.
                    This section describes internal structure of the binary blob.
                </p>
                <p>Higher level internal structure of the blob looks like</p>
                <p><code><ref>Prolog</ref> <ref>FixedArg</ref>* <ref>NumNamed</ref> <ref>NamedArg</ref>*</code></p>
                <p>
                    All binary values are stored as Little-Endians - with exception of items of type <ref>PackedLen</ref> which are used only to indicate number of bytes of following UTF-8 string.
                    In case there are no parameters, properties or fields to pass values to the blob is empty.
                </p>
                <dl>
                    <dt-code-ref>Prolog</dt-code-ref>
                    <dd>The prolog as always unsigned 16-bits integer with value 0x0001.</dd>
                    <dt-code-ref>FixedArg</dt-code-ref>
                    <dd>
                        So-called fixed arguments are arguments of the constructor.
                        Number of these arguments must match number of arguments of the CTor as specified in the signature.
                        It's not possible to use CTors with <code>vararg</code> calling convention.
                    </dd>
                    <dd>Each fixed argument has its internal structure:</dd>
                    <dd><code>(<ref>Elem</ref>) | (<ref>NumElem</ref> <ref>Elem</ref>+)</code></dd>
                    <dd>The firts syntax is used in case when an argument is not so-called <code>SZARRAY</code>, the other if it is.</dd>
                    <dl>
                        <dt-code-ref>Elem</dt-code-ref>
                        <dd>An element stores value of the item and has following structure.</dd>
                        <dd><code>(<ref>Val</ref>) | (<ref>SerString</ref>) | (<ref>FieldOrPropType</ref> <ref>Val</ref>)</code></dd>
                        <dl>
                            <dt-code-ref>Val</dt-code-ref>
                            <dd>
                                This form of element is used for values of simple and enumerated (enum) types.
                                Those are <code>bool</code>, <code>char</code>, <code>float32</code>, <code>float64</code>, <code>int8</code>, <code>int16</code>,
                                <code>int32</code>, <code>int64</code>, <code>unsigned int8</code>, <code>unsigned int16</code>, <code>unsigned int32</code>, <code>unsigned int64</code>.
                            </dd>
                            <dd>    
                                The blob contains binary value of given type. <code>bool</code> is saved as 1 byte with value of either 1 or 0,
                                <code>char</code> as 2 bytes with Unicode character. The other types has usualy binary serialization.
                                Enumerated type is stored as value of its underlying integral type.
                            </dd>
                            <dt-code-ref>SerString</dt-code-ref>
                            <dd>This form of element is used for values of type <code>string</code> and <see cref="T:System.Type"/>.</dd>
                            <dd>Internal structure of value of type <ref>SerString</ref> is:</dd>
                            <dd><code><ref>PackedLen</ref> <ref>Bytes</ref></code></dd>
                            <dl>
                                <dt-code-ref>PackedLen</dt-code-ref>
                                <dd>
                                    1-byte unsigned integer announcing number of bytes it's followed by.
                                    In case the <code>string</code> has value <code>null</code>, <code-ref>PackedLen</code-ref> has value 0xFF and is followed by no bytes.
                                    In case the <code>string</code> is an empty string <code-ref>PackedLen</code-ref> has value 0x00 and is followed by no bytes.
                                </dd>
                                <dt-code-ref>Bytes</dt-code-ref>
                                <dd>Contains UTF-8 characters the string is composed of.</dd>
                            </dl>
                            <dt-code><ref>FieldOrPropType</ref> <ref>Val</ref></dt-code>
                            <dd>Used for values of type <see cref="T:System.Object"/>. The value being stored represents stored boxed instance of some value type.</dd>
                            <dl>
                                <dt-code-ref>FieldOrPropType</dt-code-ref>
                                <dd>The type of field or property. See named arguments below.</dd>
                                <dt-code-ref>Val</dt-code-ref>
                                <dd>
                                    Non-boxed value of the argument. It cannot be <code>null</code>.
                                    For actual content see <ref>Val</ref> for simple and enumerated types above.
                                </dd>
                            </dl>
                        </dl>
                        <dt-code-ref>NumElem</dt-code-ref>
                        <dd>
                            Used only when the argument is of type <code>SZARRAY</code>. It's 32-bit unsigned integer announcing number of elements in the <code>SZARRAY</code>.
                            Value 0xFFFFFFFF means that value of the argument is <code>null</code>.
                        </dd>
                    </dl>
                    <dt-code-ref>NumNamed</dt-code-ref>
                    <dd>
                        Unsigned 16-bit integer announcing number of named properties and fields whose initialization follows.
                        <code-ref>NumNamed</code-ref> must be always specified, even if its value is 0.
                    </dd>
                    <dt-code-ref>NamedArg</dt-code-ref>
                    <dd>Initializes named "argument" - field or property of the attribute.</dd>
                    <dd>Internal structure of named argument is:</dd>
                    <dd><code>(FIELD | PROPERTY) <ref>FieldOrPropType</ref> <ref>FieldOrPropName</ref> <ref>FixedArg</ref></code></dd>
                    <dl>
                        <dt-code>FIELD</dt-code>
                        <dd>Indicates initialization of field. It's one byte with value of 0x53.</dd>
                        <dt-code>PROPERTY</dt-code>
                        <dd>Indicates initialization of property. It's one byte with value of 0x54.</dd>
                        <dt-code-ref>FieldOrPropType</dt-code-ref>
                        <dd>
                            Indicates type of field or property. It must be one of following 1-byte values:
                            <code>ELEMENT_TYPE_BOOLEAN = 0x2</code>,
                            <code>ELEMENT_TYPE_CHAR = 0x3</code>,
                            <code>ELEMENT_TYPE_I1 = 0x4</code>,
                            <code>ELEMENT_TYPE_U1 = 0x5</code>,
                            <code>ELEMENT_TYPE_I2 = 0x6</code>,
                            <code>ELEMENT_TYPE_U2 = 0x7</code>,
                            <code>ELEMENT_TYPE_I4 = 0x8</code>,
                            <code>ELEMENT_TYPE_U4 = 0x9</code>,
                            <code>ELEMENT_TYPE_I8 = 0xA</code>,
                            <code>ELEMENT_TYPE_U8 = 0xB</code>,
                            <code>ELEMENT_TYPE_R4 = 0xC</code>,
                            <code>ELEMENT_TYPE_R8 = 0xD</code>,
                            <code>ELEMENT_TYPE_STRING = 0xE</code>
                        </dd>
                        <dd>In case the type is 1-dimensional 0-based array, the value is preceeded with one byte with value 0x1D.</dd>
                        <dd>Enumeration is specified by byte with value 0x55 followed by value of type <ref>SerString</ref> (see above).</dd>
                        <dt-code-ref>FieldOrPropName</dt-code-ref>
                        <dd>Name of field or property stored as <ref>SerString</ref> (see above).</dd>
                        <dt-code-ref>FixedArg</dt-code-ref>
                        <dd>Value of the "argument" (field or property) itself. See values of fixed arguments above.</dd>
                    </dl>
                </dl>
                <p>
                    Whole structure of custom atribute data blob (<code-ref>data</code-ref>) can be shown as:
                </p>
                <svg>
                    <svg version="1.1" viewBox="0.0 -10.0 3187.0 818.0" fill="none" stroke="none" stroke-linecap="square" stroke-miterlimit="10" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                        <path d="M1088.0 399.42963L1120.0 399.42963" fill-rule="nonzero" stroke="#073763" stroke-width="3.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1184.0 399.42963L1200.0 399.42963" fill-rule="nonzero" stroke="#073763" stroke-width="3.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M336.0 423.42963L352.0 423.42963" fill-rule="nonzero" stroke="#073763" stroke-width="4.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M304.0 423.42963L288.0 423.42963" fill-rule="nonzero" stroke="#073763" stroke-width="4.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1448.0 39.42961L2968.0 39.42961L2968.0 775.4296L1448.0 775.4296Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2164.8594 66.02336L2164.8594 52.42961L2166.7031 52.42961L2173.8438 63.101486L2173.8438 52.42961L2175.5625 52.42961L2175.5625 66.02336L2173.7188 66.02336L2166.5781 55.33586L2166.5781 66.02336L2164.8594 66.02336ZM2184.5625 64.80461Q2183.625 65.60149 2182.7656 65.9218Q2181.9062 66.24211 2180.9219 66.24211Q2179.3125 66.24211 2178.4375 65.45305Q2177.5625 64.66399 2177.5625 63.42961Q2177.5625 62.695236 2177.8906 62.101486Q2178.2188 61.507736 2178.75 61.14836Q2179.2812 60.788986 2179.9531 60.601486Q2180.4531 60.46086 2181.4375 60.351486Q2183.4688 60.101486 2184.4219 59.77336Q2184.4219 59.42961 2184.4219 59.33586Q2184.4219 58.320236 2183.9531 57.89836Q2183.3125 57.33586 2182.0469 57.33586Q2180.875 57.33586 2180.3125 57.74211Q2179.75 58.14836 2179.4844 59.21086L2177.8438 58.976486Q2178.0781 57.92961 2178.586 57.288986Q2179.0938 56.64836 2180.0547 56.2968Q2181.0156 55.945236 2182.2969 55.945236Q2183.5625 55.945236 2184.3438 56.24211Q2185.125 56.538986 2185.5 56.99211Q2185.875 57.445236 2186.0156 58.132736Q2186.1094 58.55461 2186.1094 59.663986L2186.1094 61.89836Q2186.1094 64.22649 2186.211 64.84367Q2186.3125 65.46086 2186.6406 66.02336L2184.8906 66.02336Q2184.625 65.50774 2184.5625 64.80461ZM2184.4219 61.08586Q2183.5156 61.445236 2181.6875 61.71086Q2180.6562 61.851486 2180.2344 62.038986Q2179.8125 62.226486 2179.5781 62.58586Q2179.3438 62.945236 2179.3438 63.382736Q2179.3438 64.05461 2179.8516 64.49992Q2180.3594 64.94524 2181.3281 64.94524Q2182.2969 64.94524 2183.0469 64.51555Q2183.7969 64.08586 2184.1562 63.36711Q2184.4219 62.788986 2184.4219 61.695236L2184.4219 61.08586ZM2188.5 66.02336L2188.5 56.163986L2190.0 56.163986L2190.0 57.55461Q2190.4531 56.83586 2191.2266 56.39055Q2192.0 55.945236 2192.9844 55.945236Q2194.0781 55.945236 2194.7812 56.39836Q2195.4844 56.851486 2195.7656 57.67961Q2196.9375 55.945236 2198.8125 55.945236Q2200.2812 55.945236 2201.0703 56.757736Q2201.8594 57.570236 2201.8594 59.257736L2201.8594 66.02336L2200.1875 66.02336L2200.1875 59.820236Q2200.1875 58.820236 2200.0312 58.374924Q2199.875 57.92961 2199.4453 57.663986Q2199.0156 57.39836 2198.4375 57.39836Q2197.4062 57.39836 2196.7188 58.08586Q2196.0312 58.77336 2196.0312 60.30461L2196.0312 66.02336L2194.3594 66.02336L2194.3594 59.61711Q2194.3594 58.507736 2193.9531 57.95305Q2193.5469 57.39836 2192.6094 57.39836Q2191.9062 57.39836 2191.3047 57.76555Q2190.7031 58.132736 2190.4375 58.851486Q2190.1719 59.570236 2190.1719 60.913986L2190.1719 66.02336L2188.5 66.02336ZM2210.7969 62.851486L2212.5156 63.070236Q2212.1094 64.57024 2211.0078 65.40617Q2209.9062 66.24211 2208.1875 66.24211Q2206.0312 66.24211 2204.7656 64.91399Q2203.5 63.58586 2203.5 61.17961Q2203.5 58.695236 2204.7734 57.320236Q2206.0469 55.945236 2208.0938 55.945236Q2210.0781 55.945236 2211.3281 57.288986Q2212.5781 58.632736 2212.5781 61.08586Q2212.5781 61.226486 2212.5625 61.52336L2205.2188 61.52336Q2205.3125 63.14836 2206.1406 64.00774Q2206.9688 64.86711 2208.2031 64.86711Q2209.1094 64.86711 2209.7578 64.39055Q2210.4062 63.913986 2210.7969 62.851486ZM2205.3125 60.14836L2210.8125 60.14836Q2210.7031 58.913986 2210.1875 58.288986Q2209.3906 57.320236 2208.1094 57.320236Q2206.9688 57.320236 2206.1797 58.093674Q2205.3906 58.86711 2205.3125 60.14836ZM2220.8125 66.02336L2220.8125 64.77336Q2219.875 66.24211 2218.0625 66.24211Q2216.8906 66.24211 2215.8984 65.59367Q2214.9062 64.94524 2214.3672 63.781174Q2213.8281 62.61711 2213.8281 61.101486Q2213.8281 59.632736 2214.3203 58.42961Q2214.8125 57.226486 2215.789 56.58586Q2216.7656 55.945236 2217.9844 55.945236Q2218.875 55.945236 2219.5703 56.320236Q2220.2656 56.695236 2220.7031 57.30461L2220.7031 52.42961L2222.3594 52.42961L2222.3594 66.02336L2220.8125 66.02336ZM2215.5312 61.101486Q2215.5312 62.99211 2216.336 63.92961Q2217.1406 64.86711 2218.2188 64.86711Q2219.3125 64.86711 2220.0781 63.976486Q2220.8438 63.08586 2220.8438 61.24211Q2220.8438 59.226486 2220.0625 58.281174Q2219.2812 57.33586 2218.1406 57.33586Q2217.0312 57.33586 2216.2812 58.24211Q2215.5312 59.14836 2215.5312 61.101486ZM2223.5156 66.02336L2228.75 52.42961L2230.6875 52.42961L2236.25 66.02336L2234.2031 66.02336L2232.6094 61.89836L2226.9219 61.89836L2225.4375 66.02336L2223.5156 66.02336ZM2227.4375 60.445236L2232.0469 60.445236L2230.6406 56.663986Q2229.9844 54.96086 2229.6719 53.851486Q2229.4062 55.163986 2228.9375 56.445236L2227.4375 60.445236ZM2237.2188 66.02336L2237.2188 56.163986L2238.7188 56.163986L2238.7188 57.663986Q2239.2969 56.61711 2239.7812 56.281174Q2240.2656 55.945236 2240.8594 55.945236Q2241.7031 55.945236 2242.5781 56.49211L2242.0 58.038986Q2241.3906 57.67961 2240.7656 57.67961Q2240.2188 57.67961 2239.789 58.007736Q2239.3594 58.33586 2239.1719 58.913986Q2238.8906 59.80461 2238.8906 60.86711L2238.8906 66.02336L2237.2188 66.02336ZM2243.1562 66.83586L2244.7656 67.08586Q2244.875 67.83586 2245.3438 68.17961Q2245.9531 68.63274 2247.0312 68.63274Q2248.2031 68.63274 2248.8281 68.1718Q2249.4531 67.71086 2249.6875 66.88274Q2249.8125 66.36711 2249.7969 64.72649Q2248.7031 66.02336 2247.0781 66.02336Q2245.0469 66.02336 2243.9297 64.55461Q2242.8125 63.08586 2242.8125 61.038986Q2242.8125 59.632736 2243.3281 58.437424Q2243.8438 57.24211 2244.8125 56.593674Q2245.7812 55.945236 2247.0781 55.945236Q2248.8281 55.945236 2249.9531 57.351486L2249.9531 56.163986L2251.5 56.163986L2251.5 64.67961Q2251.5 66.99211 2251.0312 67.95305Q2250.5625 68.91399 2249.5469 69.46867Q2248.5312 70.02336 2247.0469 70.02336Q2245.2812 70.02336 2244.1953 69.22649Q2243.1094 68.42961 2243.1562 66.83586ZM2244.5312 60.913986Q2244.5312 62.86711 2245.3047 63.757736Q2246.0781 64.64836 2247.2344 64.64836Q2248.375 64.64836 2249.1562 63.757736Q2249.9375 62.86711 2249.9375 60.976486Q2249.9375 59.163986 2249.1328 58.249924Q2248.3281 57.33586 2247.2031 57.33586Q2246.0938 57.33586 2245.3125 58.2343Q2244.5312 59.132736 2244.5312 60.913986Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M0.14173229 423.42963L0.14173229 423.42963C0.14173229 412.64484 9.166544 403.90204 20.299213 403.90204L20.299213 403.90204C25.64531 403.90204 30.772442 405.9594 34.552704 409.62155C38.332966 413.28366 40.45669 418.25058 40.45669 423.42963L40.45669 423.42963C40.45669 434.2144 31.43188 442.95718 20.299213 442.95718L20.299213 442.95718C9.166544 442.95718 0.14173229 434.2144 0.14173229 423.42963Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M103.608925 383.68814L286.80054 383.68814L286.80054 459.18683L103.608925 459.18683Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M169.70267 427.92252L169.70267 414.32877L174.82767 414.32877Q176.18704 414.32877 176.90579 414.45377Q177.90579 414.62564 178.57767 415.0944Q179.24954 415.56314 179.6636 416.4069Q180.07767 417.25064 180.07767 418.25064Q180.07767 419.98502 178.9761 421.18814Q177.87454 422.39127 174.98392 422.39127L171.49954 422.39127L171.49954 427.92252L169.70267 427.92252ZM171.49954 420.7819L175.01517 420.7819Q176.76517 420.7819 177.49173 420.13345Q178.21829 419.48502 178.21829 418.31314Q178.21829 417.45377 177.7886 416.8444Q177.35892 416.23502 176.65579 416.04752Q176.20267 415.92252 174.98392 415.92252L171.49954 415.92252L171.49954 420.7819ZM181.90579 427.92252L181.90579 418.06314L183.40579 418.06314L183.40579 419.56314Q183.98392 418.51627 184.46829 418.18033Q184.95267 417.8444 185.54642 417.8444Q186.39017 417.8444 187.26517 418.39127L186.68704 419.93814Q186.07767 419.57877 185.45267 419.57877Q184.90579 419.57877 184.4761 419.9069Q184.04642 420.23502 183.85892 420.81314Q183.57767 421.70377 183.57767 422.76627L183.57767 427.92252L181.90579 427.92252ZM187.51517 423.00064Q187.51517 420.26627 189.04642 418.93814Q190.31204 417.8444 192.14017 417.8444Q194.17142 417.8444 195.46048 419.18033Q196.74954 420.51627 196.74954 422.86002Q196.74954 424.76627 196.17923 425.8522Q195.60892 426.93814 194.52298 427.5397Q193.43704 428.14127 192.14017 428.14127Q190.07767 428.14127 188.79642 426.81314Q187.51517 425.48502 187.51517 423.00064ZM189.23392 423.00064Q189.23392 424.89127 190.06204 425.82877Q190.89017 426.76627 192.14017 426.76627Q193.39017 426.76627 194.21048 425.82095Q195.03079 424.87564 195.03079 422.93814Q195.03079 421.11002 194.20267 420.17252Q193.37454 419.23502 192.14017 419.23502Q190.89017 419.23502 190.06204 420.17252Q189.23392 421.11002 189.23392 423.00064ZM198.48392 427.92252L198.48392 414.32877L200.15579 414.32877L200.15579 427.92252L198.48392 427.92252ZM202.03079 423.00064Q202.03079 420.26627 203.56204 418.93814Q204.82767 417.8444 206.65579 417.8444Q208.68704 417.8444 209.9761 419.18033Q211.26517 420.51627 211.26517 422.86002Q211.26517 424.76627 210.69485 425.8522Q210.12454 426.93814 209.0386 427.5397Q207.95267 428.14127 206.65579 428.14127Q204.59329 428.14127 203.31204 426.81314Q202.03079 425.48502 202.03079 423.00064ZM203.74954 423.00064Q203.74954 424.89127 204.57767 425.82877Q205.40579 426.76627 206.65579 426.76627Q207.90579 426.76627 208.7261 425.82095Q209.54642 424.87564 209.54642 422.93814Q209.54642 421.11002 208.71829 420.17252Q207.89017 419.23502 206.65579 419.23502Q205.40579 419.23502 204.57767 420.17252Q203.74954 421.11002 203.74954 423.00064ZM212.73392 428.73502L214.34329 428.98502Q214.45267 429.73502 214.92142 430.07877Q215.53079 430.5319 216.60892 430.5319Q217.78079 430.5319 218.40579 430.07095Q219.03079 429.61002 219.26517 428.7819Q219.39017 428.26627 219.37454 426.62564Q218.28079 427.92252 216.65579 427.92252Q214.62454 427.92252 213.50735 426.45377Q212.39017 424.98502 212.39017 422.93814Q212.39017 421.5319 212.90579 420.33658Q213.42142 419.14127 214.39017 418.49283Q215.35892 417.8444 216.65579 417.8444Q218.40579 417.8444 219.53079 419.25064L219.53079 418.06314L221.07767 418.06314L221.07767 426.57877Q221.07767 428.89127 220.60892 429.8522Q220.14017 430.81314 219.12454 431.36783Q218.10892 431.92252 216.62454 431.92252Q214.85892 431.92252 213.77298 431.12564Q212.68704 430.32877 212.73392 428.73502ZM214.10892 422.81314Q214.10892 424.76627 214.88235 425.6569Q215.65579 426.54752 216.81204 426.54752Q217.95267 426.54752 218.73392 425.6569Q219.51517 424.76627 219.51517 422.87564Q219.51517 421.06314 218.71048 420.14908Q217.90579 419.23502 216.78079 419.23502Q215.67142 419.23502 214.89017 420.13345Q214.10892 421.0319 214.10892 422.81314Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M288.0 423.42963L348.0 423.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M348.0 426.7331L357.0762 423.42963L348.0 420.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M40.0 423.42963L92.0 423.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M92.0 426.7331L101.076195 423.42963L92.0 420.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M360.0 95.42961L1088.0 95.42961L1088.0 751.4296L360.0 751.4296Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M688.2344 122.02336L688.2344 108.42961L697.40625 108.42961L697.40625 110.02336L690.03125 110.02336L690.03125 114.24211L696.40625 114.24211L696.40625 115.85149L690.03125 115.85149L690.03125 122.02336L688.2344 122.02336ZM699.3281 110.33586L699.3281 108.42961L701.0 108.42961L701.0 110.33586L699.3281 110.33586ZM699.3281 122.02336L699.3281 112.16399L701.0 112.16399L701.0 122.02336L699.3281 122.02336ZM702.34375 122.02336L705.9375 116.89836L702.6094 112.16399L704.7031 112.16399L706.21875 114.47649Q706.6406 115.13274 706.8906 115.58586Q707.3125 114.97649 707.65625 114.49211L709.3125 112.16399L711.2969 112.16399L707.90625 116.80461L711.5625 122.02336L709.5156 122.02336L707.4844 118.96086L706.9531 118.13274L704.3594 122.02336L702.34375 122.02336ZM719.53125 118.85149L721.25 119.07024Q720.84375 120.57024 719.7422 121.40617Q718.6406 122.24211 716.9219 122.24211Q714.7656 122.24211 713.5 120.91399Q712.2344 119.58586 712.2344 117.17961Q712.2344 114.69524 713.5078 113.32024Q714.78125 111.94524 716.8281 111.94524Q718.8125 111.94524 720.0625 113.28899Q721.3125 114.63274 721.3125 117.08586Q721.3125 117.22649 721.2969 117.52336L713.9531 117.52336Q714.0469 119.14836 714.875 120.00774Q715.7031 120.86711 716.9375 120.86711Q717.84375 120.86711 718.4922 120.39055Q719.1406 119.91399 719.53125 118.85149ZM714.0469 116.14836L719.5469 116.14836Q719.4375 114.91399 718.9219 114.28899Q718.125 113.32024 716.84375 113.32024Q715.7031 113.32024 714.91406 114.09367Q714.125 114.86711 714.0469 116.14836ZM729.5469 122.02336L729.5469 120.77336Q728.6094 122.24211 726.7969 122.24211Q725.625 122.24211 724.6328 121.59367Q723.6406 120.94524 723.10156 119.78117Q722.5625 118.61711 722.5625 117.10149Q722.5625 115.63274 723.0547 114.42961Q723.5469 113.22649 724.52344 112.58586Q725.5 111.94524 726.71875 111.94524Q727.6094 111.94524 728.3047 112.32024Q729.0 112.69524 729.4375 113.30461L729.4375 108.42961L731.09375 108.42961L731.09375 122.02336L729.5469 122.02336ZM724.2656 117.10149Q724.2656 118.99211 725.0703 119.92961Q725.875 120.86711 726.9531 120.86711Q728.0469 120.86711 728.8125 119.97649Q729.5781 119.08586 729.5781 117.24211Q729.5781 115.22649 728.7969 114.28117Q728.0156 113.33586 726.875 113.33586Q725.7656 113.33586 725.0156 114.24211Q724.2656 115.14836 724.2656 117.10149ZM732.25 122.02336L737.4844 108.42961L739.4219 108.42961L744.9844 122.02336L742.9375 122.02336L741.34375 117.89836L735.65625 117.89836L734.1719 122.02336L732.25 122.02336ZM736.1719 116.44524L740.78125 116.44524L739.375 112.66399Q738.71875 110.96086 738.40625 109.85149Q738.1406 111.16399 737.6719 112.44524L736.1719 116.44524ZM745.96875 122.02336L745.96875 112.16399L747.46875 112.16399L747.46875 113.66399Q748.0469 112.61711 748.53125 112.28117Q749.0156 111.94524 749.6094 111.94524Q750.4531 111.94524 751.3281 112.49211L750.75 114.03899Q750.1406 113.67961 749.5156 113.67961Q748.96875 113.67961 748.53906 114.00774Q748.1094 114.33586 747.9219 114.91399Q747.6406 115.80461 747.6406 116.86711L747.6406 122.02336L745.96875 122.02336ZM751.8906 122.83586L753.5 123.08586Q753.6094 123.83586 754.0781 124.17961Q754.6875 124.63274 755.7656 124.63274Q756.9375 124.63274 757.5625 124.1718Q758.1875 123.71086 758.4219 122.88274Q758.5469 122.36711 758.53125 120.72649Q757.4375 122.02336 755.8125 122.02336Q753.78125 122.02336 752.66406 120.55461Q751.5469 119.08586 751.5469 117.03899Q751.5469 115.63274 752.0625 114.43742Q752.5781 113.24211 753.5469 112.59367Q754.5156 111.94524 755.8125 111.94524Q757.5625 111.94524 758.6875 113.35149L758.6875 112.16399L760.2344 112.16399L760.2344 120.67961Q760.2344 122.99211 759.7656 123.95305Q759.2969 124.91399 758.28125 125.46867Q757.2656 126.02336 755.78125 126.02336Q754.0156 126.02336 752.9297 125.22649Q751.84375 124.42961 751.8906 122.83586ZM753.2656 116.91399Q753.2656 118.86711 754.03906 119.75774Q754.8125 120.64836 755.96875 120.64836Q757.1094 120.64836 757.8906 119.75774Q758.6719 118.86711 758.6719 116.97649Q758.6719 115.16399 757.8672 114.24992Q757.0625 113.33586 755.9375 113.33586Q754.8281 113.33586 754.0469 114.2343Q753.2656 115.13274 753.2656 116.91399Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M447.6063 527.8994L559.63196 527.8994L559.63196 582.30365L447.6063 582.30365Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M464.12192 561.5869L464.12192 547.99316L465.96567 547.99316L473.1063 558.66504L473.1063 547.99316L474.82504 547.99316L474.82504 561.5869L472.9813 561.5869L465.84067 550.8994L465.84067 561.5869L464.12192 561.5869ZM483.84067 561.5869L483.84067 560.1338Q482.70004 561.80566 480.71567 561.80566Q479.8563 561.80566 479.09848 561.4697Q478.34067 561.1338 477.97348 560.6338Q477.6063 560.1338 477.45004 559.3994Q477.3563 558.8994 477.3563 557.8369L477.3563 551.72754L479.02817 551.72754L479.02817 557.1963Q479.02817 558.5088 479.12192 558.9619Q479.27817 559.61816 479.7938 559.99316Q480.30942 560.36816 481.05942 560.36816Q481.80942 560.36816 482.46567 559.98535Q483.12192 559.60254 483.39536 558.9385Q483.6688 558.2744 483.6688 557.0088L483.6688 551.72754L485.34067 551.72754L485.34067 561.5869L483.84067 561.5869ZM487.76254 561.5869L487.76254 551.72754L489.26254 551.72754L489.26254 553.11816Q489.71567 552.3994 490.4891 551.9541Q491.26254 551.5088 492.24692 551.5088Q493.34067 551.5088 494.0438 551.9619Q494.74692 552.41504 495.02817 553.24316Q496.20004 551.5088 498.07504 551.5088Q499.5438 551.5088 500.33286 552.3213Q501.12192 553.1338 501.12192 554.8213L501.12192 561.5869L499.45004 561.5869L499.45004 555.3838Q499.45004 554.3838 499.2938 553.9385Q499.13754 553.49316 498.70786 553.22754Q498.27817 552.9619 497.70004 552.9619Q496.6688 552.9619 495.9813 553.6494Q495.2938 554.3369 495.2938 555.86816L495.2938 561.5869L493.62192 561.5869L493.62192 555.18066Q493.62192 554.0713 493.21567 553.5166Q492.80942 552.9619 491.87192 552.9619Q491.1688 552.9619 490.56723 553.3291Q489.96567 553.6963 489.70004 554.41504Q489.43442 555.1338 489.43442 556.47754L489.43442 561.5869L487.76254 561.5869ZM503.55942 561.5869L503.55942 547.99316L513.4032 547.99316L513.4032 549.5869L505.3563 549.5869L505.3563 553.7588L512.8876 553.7588L512.8876 555.35254L505.3563 555.35254L505.3563 559.97754L513.7157 559.97754L513.7157 561.5869L503.55942 561.5869ZM515.7157 561.5869L515.7157 547.99316L517.3876 547.99316L517.3876 561.5869L515.7157 561.5869ZM526.6376 558.41504L528.3563 558.6338Q527.9501 560.1338 526.8485 560.9697Q525.74695 561.80566 524.0282 561.80566Q521.87195 561.80566 520.6063 560.47754Q519.3407 559.1494 519.3407 556.74316Q519.3407 554.2588 520.61414 552.8838Q521.8876 551.5088 523.93445 551.5088Q525.9188 551.5088 527.1688 552.85254Q528.4188 554.1963 528.4188 556.6494Q528.4188 556.79004 528.4032 557.0869L521.05945 557.0869Q521.1532 558.7119 521.9813 559.5713Q522.80945 560.43066 524.0438 560.43066Q524.9501 560.43066 525.5985 559.9541Q526.24695 559.47754 526.6376 558.41504ZM521.1532 555.7119L526.6532 555.7119Q526.5438 554.47754 526.0282 553.85254Q525.2313 552.8838 523.9501 552.8838Q522.80945 552.8838 522.0204 553.6572Q521.2313 554.43066 521.1532 555.7119ZM530.2626 561.5869L530.2626 551.72754L531.7626 551.72754L531.7626 553.11816Q532.2157 552.3994 532.98914 551.9541Q533.7626 551.5088 534.74695 551.5088Q535.8407 551.5088 536.5438 551.9619Q537.24695 552.41504 537.5282 553.24316Q538.7001 551.5088 540.5751 551.5088Q542.0438 551.5088 542.8329 552.3213Q543.62195 553.1338 543.62195 554.8213L543.62195 561.5869L541.9501 561.5869L541.9501 555.3838Q541.9501 554.3838 541.7938 553.9385Q541.6376 553.49316 541.2079 553.22754Q540.7782 552.9619 540.2001 552.9619Q539.1688 552.9619 538.4813 553.6494Q537.7938 554.3369 537.7938 555.86816L537.7938 561.5869L536.12195 561.5869L536.12195 555.18066Q536.12195 554.0713 535.7157 553.5166Q535.30945 552.9619 534.37195 552.9619Q533.6688 552.9619 533.06726 553.3291Q532.4657 553.6963 532.2001 554.41504Q531.93445 555.1338 531.93445 556.47754L531.93445 561.5869L530.2626 561.5869Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M440.0 135.42961L848.0 135.42961L848.0 391.42963L440.0 391.42963Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M624.2344 162.02336L624.2344 148.42961L634.0781 148.42961L634.0781 150.02336L626.03125 150.02336L626.03125 154.19524L633.5625 154.19524L633.5625 155.78899L626.03125 155.78899L626.03125 160.41399L634.3906 160.41399L634.3906 162.02336L624.2344 162.02336ZM636.40625 162.02336L636.40625 148.42961L638.0781 148.42961L638.0781 162.02336L636.40625 162.02336ZM647.3281 158.85149L649.0469 159.07024Q648.6406 160.57024 647.53906 161.40617Q646.4375 162.24211 644.71875 162.24211Q642.5625 162.24211 641.2969 160.91399Q640.03125 159.58586 640.03125 157.17961Q640.03125 154.69524 641.3047 153.32024Q642.5781 151.94524 644.625 151.94524Q646.6094 151.94524 647.8594 153.28899Q649.1094 154.63274 649.1094 157.08586Q649.1094 157.22649 649.09375 157.52336L641.75 157.52336Q641.84375 159.14836 642.6719 160.00774Q643.5 160.86711 644.7344 160.86711Q645.6406 160.86711 646.28906 160.39055Q646.9375 159.91399 647.3281 158.85149ZM641.84375 156.14836L647.34375 156.14836Q647.2344 154.91399 646.71875 154.28899Q645.9219 153.32024 644.6406 153.32024Q643.5 153.32024 642.71094 154.09367Q641.9219 154.86711 641.84375 156.14836ZM650.9531 162.02336L650.9531 152.16399L652.4531 152.16399L652.4531 153.55461Q652.90625 152.83586 653.6797 152.39055Q654.4531 151.94524 655.4375 151.94524Q656.53125 151.94524 657.2344 152.39836Q657.9375 152.85149 658.21875 153.67961Q659.3906 151.94524 661.2656 151.94524Q662.7344 151.94524 663.52344 152.75774Q664.3125 153.57024 664.3125 155.25774L664.3125 162.02336L662.6406 162.02336L662.6406 155.82024Q662.6406 154.82024 662.4844 154.37492Q662.3281 153.92961 661.89844 153.66399Q661.46875 153.39836 660.8906 153.39836Q659.8594 153.39836 659.1719 154.08586Q658.4844 154.77336 658.4844 156.30461L658.4844 162.02336L656.8125 162.02336L656.8125 155.61711Q656.8125 154.50774 656.40625 153.95305Q656.0 153.39836 655.0625 153.39836Q654.3594 153.39836 653.7578 153.76555Q653.15625 154.13274 652.8906 154.85149Q652.625 155.57024 652.625 156.91399L652.625 162.02336L650.9531 162.02336Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M487.6063 173.89943L655.63196 173.89943L655.63196 228.30363L487.6063 228.30363Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M563.4813 207.58693L558.2001 193.99318L560.1532 193.99318L563.68445 203.86818Q564.12195 205.05568 564.4032 206.08693Q564.7157 204.97755 565.1376 203.86818L568.80945 193.99318L570.6532 193.99318L565.3251 207.58693L563.4813 207.58693ZM578.2626 206.36818Q577.3251 207.16505 576.4657 207.48537Q575.6063 207.80568 574.62195 207.80568Q573.0126 207.80568 572.1376 207.01662Q571.2626 206.22755 571.2626 204.99318Q571.2626 204.2588 571.5907 203.66505Q571.9188 203.0713 572.4501 202.71193Q572.9813 202.35255 573.6532 202.16505Q574.1532 202.02443 575.1376 201.91505Q577.1688 201.66505 578.12195 201.33693Q578.12195 200.99318 578.12195 200.89943Q578.12195 199.8838 577.6532 199.46193Q577.0126 198.89943 575.74695 198.89943Q574.5751 198.89943 574.0126 199.30568Q573.4501 199.71193 573.18445 200.77443L571.5438 200.54005Q571.7782 199.49318 572.286 198.85255Q572.7938 198.21193 573.75476 197.86037Q574.7157 197.5088 575.99695 197.5088Q577.2626 197.5088 578.0438 197.80568Q578.8251 198.10255 579.2001 198.55568Q579.5751 199.0088 579.7157 199.6963Q579.80945 200.11818 579.80945 201.22755L579.80945 203.46193Q579.80945 205.79005 579.911 206.40724Q580.0126 207.02443 580.3407 207.58693L578.5907 207.58693Q578.3251 207.0713 578.2626 206.36818ZM578.12195 202.64943Q577.2157 203.0088 575.3876 203.27443Q574.3563 203.41505 573.93445 203.60255Q573.5126 203.79005 573.2782 204.14943Q573.0438 204.5088 573.0438 204.9463Q573.0438 205.61818 573.55164 206.06349Q574.05945 206.5088 575.0282 206.5088Q575.99695 206.5088 576.74695 206.07912Q577.49695 205.64943 577.8563 204.93068Q578.12195 204.35255 578.12195 203.2588L578.12195 202.64943ZM582.1688 207.58693L582.1688 193.99318L583.8407 193.99318L583.8407 207.58693L582.1688 207.58693Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M488.2756 243.28394L656.4054 243.28394L656.4054 297.68814L488.2756 297.68814Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M534.3068 272.59644L535.9943 272.4558Q536.1193 273.47144 536.5568 274.1277Q536.9943 274.78394 537.924 275.1902Q538.8537 275.59644 540.00995 275.59644Q541.0412 275.59644 541.83026 275.28394Q542.6193 274.97144 543.00995 274.4402Q543.4006 273.90894 543.4006 273.28394Q543.4006 272.6433 543.0256 272.16675Q542.6506 271.6902 541.7912 271.36206Q541.2443 271.1433 539.3693 270.698Q537.4943 270.2527 536.7443 269.84644Q535.7756 269.3308 535.299 268.5808Q534.82245 267.8308 534.82245 266.8933Q534.82245 265.86206 535.4084 264.96362Q535.9943 264.0652 537.1115 263.60425Q538.2287 263.1433 539.6037 263.1433Q541.1193 263.1433 542.2756 263.6277Q543.4318 264.11206 544.049 265.05737Q544.6662 266.0027 544.7131 267.2058L542.9943 267.3308Q542.8537 266.04956 542.049 265.3855Q541.2443 264.72144 539.6818 264.72144Q538.0568 264.72144 537.3068 265.323Q536.5568 265.92456 536.5568 266.7683Q536.5568 267.5027 537.0881 267.97144Q537.6037 268.4402 539.799 268.9402Q541.9943 269.4402 542.8068 269.8152Q543.9943 270.36206 544.56464 271.198Q545.13495 272.03394 545.13495 273.1277Q545.13495 274.22144 544.50995 275.18237Q543.88495 276.1433 542.7209 276.67456Q541.5568 277.2058 540.1037 277.2058Q538.25995 277.2058 537.00995 276.66675Q535.75995 276.1277 535.049 275.04956Q534.3381 273.97144 534.3068 272.59644ZM553.88495 273.79956L555.6037 274.0183Q555.19745 275.5183 554.0959 276.35425Q552.9943 277.1902 551.2756 277.1902Q549.1193 277.1902 547.8537 275.86206Q546.5881 274.53394 546.5881 272.1277Q546.5881 269.6433 547.8615 268.2683Q549.13495 266.8933 551.1818 266.8933Q553.1662 266.8933 554.4162 268.23706Q555.6662 269.5808 555.6662 272.03394Q555.6662 272.17456 555.6506 272.47144L548.3068 272.47144Q548.4006 274.09644 549.2287 274.9558Q550.0568 275.8152 551.2912 275.8152Q552.19745 275.8152 552.8459 275.33862Q553.4943 274.86206 553.88495 273.79956ZM548.4006 271.09644L553.9006 271.09644Q553.7912 269.86206 553.2756 269.23706Q552.4787 268.2683 551.19745 268.2683Q550.0568 268.2683 549.26776 269.04175Q548.4787 269.8152 548.4006 271.09644ZM557.50995 276.97144L557.50995 267.11206L559.00995 267.11206L559.00995 268.61206Q559.5881 267.5652 560.07245 267.22925Q560.5568 266.8933 561.1506 266.8933Q561.9943 266.8933 562.8693 267.4402L562.2912 268.98706Q561.6818 268.6277 561.0568 268.6277Q560.50995 268.6277 560.08026 268.9558Q559.6506 269.28394 559.4631 269.86206Q559.1818 270.7527 559.1818 271.8152L559.1818 276.97144L557.50995 276.97144ZM563.3381 272.59644L565.0256 272.4558Q565.1506 273.47144 565.5881 274.1277Q566.0256 274.78394 566.95526 275.1902Q567.88495 275.59644 569.0412 275.59644Q570.07245 275.59644 570.8615 275.28394Q571.6506 274.97144 572.0412 274.4402Q572.4318 273.90894 572.4318 273.28394Q572.4318 272.6433 572.0568 272.16675Q571.6818 271.6902 570.82245 271.36206Q570.2756 271.1433 568.4006 270.698Q566.5256 270.2527 565.7756 269.84644Q564.8068 269.3308 564.33026 268.5808Q563.8537 267.8308 563.8537 266.8933Q563.8537 265.86206 564.43964 264.96362Q565.0256 264.0652 566.14276 263.60425Q567.25995 263.1433 568.63495 263.1433Q570.1506 263.1433 571.3068 263.6277Q572.4631 264.11206 573.08026 265.05737Q573.69745 266.0027 573.7443 267.2058L572.0256 267.3308Q571.88495 266.04956 571.08026 265.3855Q570.2756 264.72144 568.7131 264.72144Q567.0881 264.72144 566.3381 265.323Q565.5881 265.92456 565.5881 266.7683Q565.5881 267.5027 566.1193 267.97144Q566.63495 268.4402 568.83026 268.9402Q571.0256 269.4402 571.8381 269.8152Q573.0256 270.36206 573.5959 271.198Q574.1662 272.03394 574.1662 273.1277Q574.1662 274.22144 573.5412 275.18237Q572.9162 276.1433 571.75214 276.67456Q570.5881 277.2058 569.13495 277.2058Q567.2912 277.2058 566.0412 276.66675Q564.7912 276.1277 564.08026 275.04956Q563.3693 273.97144 563.3381 272.59644ZM579.8381 275.47144L580.07245 276.9558Q579.3693 277.09644 578.8068 277.09644Q577.9006 277.09644 577.4006 276.80737Q576.9006 276.5183 576.69745 276.05737Q576.4943 275.59644 576.4943 274.0808L576.4943 268.42456L575.25995 268.42456L575.25995 267.11206L576.4943 267.11206L576.4943 264.67456L578.1506 263.67456L578.1506 267.11206L579.8381 267.11206L579.8381 268.42456L578.1506 268.42456L578.1506 274.17456Q578.1506 274.8933 578.2365 275.09644Q578.32245 275.29956 578.5256 275.42456Q578.7287 275.54956 579.1037 275.54956Q579.3693 275.54956 579.8381 275.47144ZM581.3381 276.97144L581.3381 267.11206L582.8381 267.11206L582.8381 268.61206Q583.4162 267.5652 583.9006 267.22925Q584.38495 266.8933 584.9787 266.8933Q585.82245 266.8933 586.69745 267.4402L586.1193 268.98706Q585.50995 268.6277 584.88495 268.6277Q584.3381 268.6277 583.9084 268.9558Q583.4787 269.28394 583.2912 269.86206Q583.00995 270.7527 583.00995 271.8152L583.00995 276.97144L581.3381 276.97144ZM587.5881 265.28394L587.5881 263.3777L589.25995 263.3777L589.25995 265.28394L587.5881 265.28394ZM587.5881 276.97144L587.5881 267.11206L589.25995 267.11206L589.25995 276.97144L587.5881 276.97144ZM591.7131 276.97144L591.7131 267.11206L593.2131 267.11206L593.2131 268.5183Q594.3068 266.8933 596.3537 266.8933Q597.2443 266.8933 597.9943 267.21362Q598.7443 267.53394 599.1115 268.05737Q599.4787 268.5808 599.63495 269.28394Q599.7287 269.7527 599.7287 270.90894L599.7287 276.97144L598.0568 276.97144L598.0568 270.97144Q598.0568 269.9558 597.8615 269.448Q597.6662 268.9402 597.1662 268.6433Q596.6662 268.34644 595.9943 268.34644Q594.9318 268.34644 594.1584 269.0183Q593.38495 269.6902 593.38495 271.59644L593.38495 276.97144L591.7131 276.97144ZM601.7912 277.78394L603.4006 278.03394Q603.50995 278.78394 603.9787 279.1277Q604.5881 279.5808 605.6662 279.5808Q606.8381 279.5808 607.4631 279.11987Q608.0881 278.65894 608.32245 277.8308Q608.44745 277.3152 608.4318 275.67456Q607.3381 276.97144 605.7131 276.97144Q603.6818 276.97144 602.56464 275.5027Q601.44745 274.03394 601.44745 271.98706Q601.44745 270.5808 601.9631 269.3855Q602.4787 268.1902 603.44745 267.54175Q604.4162 266.8933 605.7131 266.8933Q607.4631 266.8933 608.5881 268.29956L608.5881 267.11206L610.13495 267.11206L610.13495 275.6277Q610.13495 277.9402 609.6662 278.90112Q609.19745 279.86206 608.1818 280.41675Q607.1662 280.97144 605.6818 280.97144Q603.9162 280.97144 602.83026 280.17456Q601.7443 279.3777 601.7912 277.78394ZM603.1662 271.86206Q603.1662 273.8152 603.93964 274.7058Q604.7131 275.59644 605.8693 275.59644Q607.00995 275.59644 607.7912 274.7058Q608.57245 273.8152 608.57245 271.92456Q608.57245 270.11206 607.76776 269.198Q606.9631 268.28394 605.8381 268.28394Q604.7287 268.28394 603.94745 269.18237Q603.1662 270.0808 603.1662 271.86206Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M488.0551 314.90204L656.0747 314.90204L656.0747 369.30624L488.0551 369.30624Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M502.602 348.58954L502.602 334.9958L511.77386 334.9958L511.77386 336.58954L504.39886 336.58954L504.39886 340.8083L510.77386 340.8083L510.77386 342.41766L504.39886 342.41766L504.39886 348.58954L502.602 348.58954ZM513.69574 336.90204L513.69574 334.9958L515.3676 334.9958L515.3676 336.90204L513.69574 336.90204ZM513.69574 348.58954L513.69574 338.73016L515.3676 338.73016L515.3676 348.58954L513.69574 348.58954ZM524.57074 345.41766L526.2895 345.6364Q525.88324 347.1364 524.7817 347.97235Q523.6801 348.8083 521.96136 348.8083Q519.8051 348.8083 518.5395 347.48016Q517.27386 346.15204 517.27386 343.7458Q517.27386 341.2614 518.5473 339.8864Q519.82074 338.5114 521.8676 338.5114Q523.852 338.5114 525.102 339.85516Q526.352 341.1989 526.352 343.65204Q526.352 343.79266 526.33636 344.08954L518.9926 344.08954Q519.08636 345.71454 519.9145 346.5739Q520.7426 347.4333 521.977 347.4333Q522.88324 347.4333 523.5317 346.95673Q524.1801 346.48016 524.57074 345.41766ZM519.08636 342.71454L524.58636 342.71454Q524.477 341.48016 523.96136 340.85516Q523.1645 339.8864 521.88324 339.8864Q520.7426 339.8864 519.95355 340.65985Q519.1645 341.4333 519.08636 342.71454ZM528.1645 348.58954L528.1645 334.9958L529.83636 334.9958L529.83636 348.58954L528.1645 348.58954ZM538.7426 348.58954L538.7426 347.33954Q537.8051 348.8083 535.9926 348.8083Q534.82074 348.8083 533.82855 348.15985Q532.83636 347.5114 532.2973 346.34735Q531.75824 345.1833 531.75824 343.66766Q531.75824 342.1989 532.2504 340.9958Q532.7426 339.79266 533.7192 339.15204Q534.69574 338.5114 535.9145 338.5114Q536.8051 338.5114 537.5004 338.8864Q538.19574 339.2614 538.63324 339.8708L538.63324 334.9958L540.2895 334.9958L540.2895 348.58954L538.7426 348.58954ZM533.46136 343.66766Q533.46136 345.5583 534.26605 346.4958Q535.07074 347.4333 536.14886 347.4333Q537.2426 347.4333 538.00824 346.54266Q538.77386 345.65204 538.77386 343.8083Q538.77386 341.79266 537.9926 340.84735Q537.21136 339.90204 536.07074 339.90204Q534.96136 339.90204 534.21136 340.8083Q533.46136 341.71454 533.46136 343.66766ZM542.39886 341.96454Q542.39886 338.5739 544.2192 336.65985Q546.0395 334.7458 548.9145 334.7458Q550.7895 334.7458 552.3051 335.64423Q553.82074 336.54266 554.6098 338.15204Q555.39886 339.7614 555.39886 341.8083Q555.39886 343.8708 554.5629 345.5036Q553.727 347.1364 552.19574 347.98016Q550.6645 348.8239 548.89886 348.8239Q546.977 348.8239 545.4692 347.89423Q543.96136 346.96454 543.1801 345.36298Q542.39886 343.7614 542.39886 341.96454ZM544.25824 341.9958Q544.25824 344.4489 545.57855 345.86298Q546.89886 347.27704 548.88324 347.27704Q550.9145 347.27704 552.227 345.84735Q553.5395 344.41766 553.5395 341.79266Q553.5395 340.1364 552.9848 338.90204Q552.4301 337.66766 551.3442 336.98016Q550.25824 336.29266 548.9145 336.29266Q547.00824 336.29266 545.63324 337.60516Q544.25824 338.91766 544.25824 341.9958ZM557.21136 348.58954L557.21136 338.73016L558.71136 338.73016L558.71136 340.23016Q559.2895 339.1833 559.77386 338.84735Q560.25824 338.5114 560.852 338.5114Q561.69574 338.5114 562.57074 339.0583L561.9926 340.60516Q561.38324 340.2458 560.75824 340.2458Q560.21136 340.2458 559.7817 340.5739Q559.352 340.90204 559.1645 341.48016Q558.88324 342.3708 558.88324 343.4333L558.88324 348.58954L557.21136 348.58954ZM563.6645 348.58954L563.6645 334.9958L568.7895 334.9958Q570.14886 334.9958 570.8676 335.1208Q571.8676 335.29266 572.5395 335.7614Q573.21136 336.23016 573.6254 337.0739Q574.0395 337.91766 574.0395 338.91766Q574.0395 340.65204 572.9379 341.85516Q571.83636 343.0583 568.94574 343.0583L565.46136 343.0583L565.46136 348.58954L563.6645 348.58954ZM565.46136 341.4489L568.977 341.4489Q570.727 341.4489 571.45355 340.80048Q572.1801 340.15204 572.1801 338.98016Q572.1801 338.1208 571.7504 337.5114Q571.32074 336.90204 570.6176 336.71454Q570.1645 336.58954 568.94574 336.58954L565.46136 336.58954L565.46136 341.4489ZM575.8676 348.58954L575.8676 338.73016L577.3676 338.73016L577.3676 340.23016Q577.94574 339.1833 578.4301 338.84735Q578.9145 338.5114 579.50824 338.5114Q580.352 338.5114 581.227 339.0583L580.64886 340.60516Q580.0395 340.2458 579.4145 340.2458Q578.8676 340.2458 578.4379 340.5739Q578.00824 340.90204 577.82074 341.48016Q577.5395 342.3708 577.5395 343.4333L577.5395 348.58954L575.8676 348.58954ZM581.477 343.66766Q581.477 340.9333 583.00824 339.60516Q584.27386 338.5114 586.102 338.5114Q588.13324 338.5114 589.4223 339.84735Q590.71136 341.1833 590.71136 343.52704Q590.71136 345.4333 590.14105 346.51923Q589.57074 347.60516 588.4848 348.20673Q587.39886 348.8083 586.102 348.8083Q584.0395 348.8083 582.75824 347.48016Q581.477 346.15204 581.477 343.66766ZM583.19574 343.66766Q583.19574 345.5583 584.02386 346.4958Q584.852 347.4333 586.102 347.4333Q587.352 347.4333 588.1723 346.48798Q588.9926 345.54266 588.9926 343.60516Q588.9926 341.77704 588.1645 340.83954Q587.33636 339.90204 586.102 339.90204Q584.852 339.90204 584.02386 340.83954Q583.19574 341.77704 583.19574 343.66766ZM592.477 352.3708L592.477 338.73016L594.00824 338.73016L594.00824 340.0114Q594.5395 339.2614 595.2192 338.8864Q595.89886 338.5114 596.852 338.5114Q598.1176 338.5114 599.08636 339.15985Q600.0551 339.8083 600.5473 340.9958Q601.0395 342.1833 601.0395 343.58954Q601.0395 345.10516 600.4926 346.3161Q599.94574 347.52704 598.9145 348.16766Q597.88324 348.8083 596.7426 348.8083Q595.89886 348.8083 595.2348 348.45673Q594.57074 348.10516 594.14886 347.5739L594.14886 352.3708L592.477 352.3708ZM593.9926 343.71454Q593.9926 345.6208 594.76605 346.52704Q595.5395 347.4333 596.63324 347.4333Q597.7426 347.4333 598.5317 346.4958Q599.32074 345.5583 599.32074 343.5739Q599.32074 341.6989 598.5473 340.7614Q597.77386 339.8239 596.69574 339.8239Q595.63324 339.8239 594.8129 340.8239Q593.9926 341.8239 593.9926 343.71454ZM606.52386 348.58954L606.52386 336.58954L602.0551 336.58954L602.0551 334.9958L612.82074 334.9958L612.82074 336.58954L608.32074 336.58954L608.32074 348.58954L606.52386 348.58954ZM614.1645 352.3864L613.9926 350.8239Q614.5395 350.96454 614.94574 350.96454Q615.4926 350.96454 615.82855 350.77704Q616.1645 350.58954 616.38324 350.2614Q616.5395 350.0114 616.88324 349.0114Q616.9301 348.8708 617.0395 348.60516L613.3051 338.73016L615.102 338.73016L617.14886 344.4489Q617.5551 345.52704 617.8676 346.73016Q618.14886 345.5739 618.5551 344.48016L620.64886 338.73016L622.32074 338.73016L618.57074 348.7614Q617.977 350.3864 617.63324 350.9958Q617.19574 351.8239 616.6176 352.20673Q616.0395 352.58954 615.2426 352.58954Q614.75824 352.58954 614.1645 352.3864ZM623.57074 352.3708L623.57074 338.73016L625.102 338.73016L625.102 340.0114Q625.63324 339.2614 626.3129 338.8864Q626.9926 338.5114 627.94574 338.5114Q629.21136 338.5114 630.1801 339.15985Q631.14886 339.8083 631.64105 340.9958Q632.13324 342.1833 632.13324 343.58954Q632.13324 345.10516 631.58636 346.3161Q631.0395 347.52704 630.00824 348.16766Q628.977 348.8083 627.83636 348.8083Q626.9926 348.8083 626.32855 348.45673Q625.6645 348.10516 625.2426 347.5739L625.2426 352.3708L623.57074 352.3708ZM625.08636 343.71454Q625.08636 345.6208 625.8598 346.52704Q626.63324 347.4333 627.727 347.4333Q628.83636 347.4333 629.6254 346.4958Q630.4145 345.5583 630.4145 343.5739Q630.4145 341.6989 629.64105 340.7614Q628.8676 339.8239 627.7895 339.8239Q626.727 339.8239 625.9067 340.8239Q625.08636 341.8239 625.08636 343.71454ZM640.71136 345.41766L642.4301 345.6364Q642.02386 347.1364 640.9223 347.97235Q639.82074 348.8083 638.102 348.8083Q635.94574 348.8083 634.6801 347.48016Q633.4145 346.15204 633.4145 343.7458Q633.4145 341.2614 634.6879 339.8864Q635.96136 338.5114 638.00824 338.5114Q639.9926 338.5114 641.2426 339.85516Q642.4926 341.1989 642.4926 343.65204Q642.4926 343.79266 642.477 344.08954L635.13324 344.08954Q635.227 345.71454 636.0551 346.5739Q636.88324 347.4333 638.1176 347.4333Q639.02386 347.4333 639.6723 346.95673Q640.32074 346.48016 640.71136 345.41766ZM635.227 342.71454L640.727 342.71454Q640.6176 341.48016 640.102 340.85516Q639.3051 339.8864 638.02386 339.8864Q636.88324 339.8864 636.0942 340.65985Q635.3051 341.4333 635.227 342.71454Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M711.6063 319.8994L823.63196 319.8994L823.63196 367.30362L711.6063 367.30362Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M759.4813 350.0869L754.2001 336.49316L756.1532 336.49316L759.68445 346.36816Q760.12195 347.55566 760.4032 348.5869Q760.7157 347.47754 761.1376 346.36816L764.80945 336.49316L766.6532 336.49316L761.3251 350.0869L759.4813 350.0869ZM774.2626 348.86816Q773.3251 349.66504 772.4657 349.98535Q771.6063 350.30566 770.62195 350.30566Q769.0126 350.30566 768.1376 349.5166Q767.2626 348.72754 767.2626 347.49316Q767.2626 346.7588 767.5907 346.16504Q767.9188 345.5713 768.4501 345.2119Q768.9813 344.85254 769.6532 344.66504Q770.1532 344.5244 771.1376 344.41504Q773.1688 344.16504 774.12195 343.8369Q774.12195 343.49316 774.12195 343.3994Q774.12195 342.3838 773.6532 341.9619Q773.0126 341.3994 771.74695 341.3994Q770.5751 341.3994 770.0126 341.80566Q769.4501 342.2119 769.18445 343.2744L767.5438 343.04004Q767.7782 341.99316 768.286 341.35254Q768.7938 340.7119 769.75476 340.36035Q770.7157 340.0088 771.99695 340.0088Q773.2626 340.0088 774.0438 340.30566Q774.8251 340.60254 775.2001 341.05566Q775.5751 341.5088 775.7157 342.1963Q775.80945 342.61816 775.80945 343.72754L775.80945 345.9619Q775.80945 348.29004 775.911 348.90723Q776.0126 349.5244 776.3407 350.0869L774.5907 350.0869Q774.3251 349.5713 774.2626 348.86816ZM774.12195 345.1494Q773.2157 345.5088 771.3876 345.7744Q770.3563 345.91504 769.93445 346.10254Q769.5126 346.29004 769.2782 346.6494Q769.0438 347.0088 769.0438 347.4463Q769.0438 348.11816 769.55164 348.56348Q770.05945 349.0088 771.0282 349.0088Q771.99695 349.0088 772.74695 348.5791Q773.49695 348.1494 773.8563 347.43066Q774.12195 346.85254 774.12195 345.7588L774.12195 345.1494ZM778.1688 350.0869L778.1688 336.49316L779.8407 336.49316L779.8407 350.0869L778.1688 350.0869Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M440.0 270.93094L476.00067 271.3089" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M475.96597 274.61218L485.07635 271.40417L476.03534 268.0056Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M456.0 271.42963L456.0 199.42961" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M456.0 199.42961L476.0 199.42961" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M476.0 202.73308L485.0762 199.42961L476.0 196.12614Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M456.0 271.42963L456.0 343.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M456.0 343.42963L476.0 343.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M476.0 346.7331L485.0762 343.42963L476.0 340.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M656.0 343.42963L700.0 343.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M700.0 346.7331L709.0762 343.42963L700.0 340.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M656.0 271.42963L836.0 271.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M836.0 274.7331L845.0762 271.42963L836.0 268.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M656.0 199.42961L768.0 199.42961" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M768.0 319.42963L768.0 271.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M768.0 199.42961L768.0 271.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M624.0 423.42963L1032.0 423.42963L1032.0 679.4296L624.0 679.4296Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M808.2344 450.02338L808.2344 436.42963L818.0781 436.42963L818.0781 438.02338L810.03125 438.02338L810.03125 442.19525L817.5625 442.19525L817.5625 443.789L810.03125 443.789L810.03125 448.414L818.3906 448.414L818.3906 450.02338L808.2344 450.02338ZM820.40625 450.02338L820.40625 436.42963L822.0781 436.42963L822.0781 450.02338L820.40625 450.02338ZM831.3281 446.8515L833.0469 447.07025Q832.6406 448.57025 831.53906 449.4062Q830.4375 450.24213 828.71875 450.24213Q826.5625 450.24213 825.2969 448.914Q824.03125 447.58588 824.03125 445.17963Q824.03125 442.69525 825.3047 441.32025Q826.5781 439.94525 828.625 439.94525Q830.6094 439.94525 831.8594 441.289Q833.1094 442.63275 833.1094 445.08588Q833.1094 445.2265 833.09375 445.52338L825.75 445.52338Q825.84375 447.14838 826.6719 448.00775Q827.5 448.86713 828.7344 448.86713Q829.6406 448.86713 830.28906 448.39056Q830.9375 447.914 831.3281 446.8515ZM825.84375 444.14838L831.34375 444.14838Q831.2344 442.914 830.71875 442.289Q829.9219 441.32025 828.6406 441.32025Q827.5 441.32025 826.71094 442.0937Q825.9219 442.86713 825.84375 444.14838ZM834.9531 450.02338L834.9531 440.164L836.4531 440.164L836.4531 441.55463Q836.90625 440.83588 837.6797 440.39056Q838.4531 439.94525 839.4375 439.94525Q840.53125 439.94525 841.2344 440.39838Q841.9375 440.8515 842.21875 441.67963Q843.3906 439.94525 845.2656 439.94525Q846.7344 439.94525 847.52344 440.75775Q848.3125 441.57025 848.3125 443.25775L848.3125 450.02338L846.6406 450.02338L846.6406 443.82025Q846.6406 442.82025 846.4844 442.37494Q846.3281 441.92963 845.89844 441.664Q845.46875 441.39838 844.8906 441.39838Q843.8594 441.39838 843.1719 442.08588Q842.4844 442.77338 842.4844 444.30463L842.4844 450.02338L840.8125 450.02338L840.8125 443.61713Q840.8125 442.50775 840.40625 441.95306Q840.0 441.39838 839.0625 441.39838Q838.3594 441.39838 837.7578 441.76556Q837.15625 442.13275 836.8906 442.8515Q836.625 443.57025 836.625 444.914L836.625 450.02338L834.9531 450.02338Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M671.6063 461.8994L839.63196 461.8994L839.63196 516.30365L671.6063 516.30365Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M747.4813 495.5869L742.2001 481.99316L744.1532 481.99316L747.68445 491.86816Q748.12195 493.05566 748.4032 494.0869Q748.7157 492.97754 749.1376 491.86816L752.80945 481.99316L754.6532 481.99316L749.3251 495.5869L747.4813 495.5869ZM762.2626 494.36816Q761.3251 495.16504 760.4657 495.48535Q759.6063 495.80566 758.62195 495.80566Q757.0126 495.80566 756.1376 495.0166Q755.2626 494.22754 755.2626 492.99316Q755.2626 492.2588 755.5907 491.66504Q755.9188 491.0713 756.4501 490.7119Q756.9813 490.35254 757.6532 490.16504Q758.1532 490.0244 759.1376 489.91504Q761.1688 489.66504 762.12195 489.3369Q762.12195 488.99316 762.12195 488.8994Q762.12195 487.8838 761.6532 487.4619Q761.0126 486.8994 759.74695 486.8994Q758.5751 486.8994 758.0126 487.30566Q757.4501 487.7119 757.18445 488.7744L755.5438 488.54004Q755.7782 487.49316 756.286 486.85254Q756.7938 486.2119 757.75476 485.86035Q758.7157 485.5088 759.99695 485.5088Q761.2626 485.5088 762.0438 485.80566Q762.8251 486.10254 763.2001 486.55566Q763.5751 487.0088 763.7157 487.6963Q763.80945 488.11816 763.80945 489.22754L763.80945 491.4619Q763.80945 493.79004 763.911 494.40723Q764.0126 495.0244 764.3407 495.5869L762.5907 495.5869Q762.3251 495.0713 762.2626 494.36816ZM762.12195 490.6494Q761.2157 491.0088 759.3876 491.2744Q758.3563 491.41504 757.93445 491.60254Q757.5126 491.79004 757.2782 492.1494Q757.0438 492.5088 757.0438 492.9463Q757.0438 493.61816 757.55164 494.06348Q758.05945 494.5088 759.0282 494.5088Q759.99695 494.5088 760.74695 494.0791Q761.49695 493.6494 761.8563 492.93066Q762.12195 492.35254 762.12195 491.2588L762.12195 490.6494ZM766.1688 495.5869L766.1688 481.99316L767.8407 481.99316L767.8407 495.5869L766.1688 495.5869Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M672.2756 531.28394L840.4054 531.28394L840.4054 585.6882L672.2756 585.6882Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M718.3068 560.59644L719.9943 560.4558Q720.1193 561.47144 720.5568 562.1277Q720.9943 562.78394 721.924 563.1902Q722.8537 563.59644 724.00995 563.59644Q725.0412 563.59644 725.83026 563.28394Q726.6193 562.97144 727.00995 562.4402Q727.4006 561.90894 727.4006 561.28394Q727.4006 560.6433 727.0256 560.16675Q726.6506 559.6902 725.7912 559.36206Q725.2443 559.1433 723.3693 558.698Q721.4943 558.2527 720.7443 557.84644Q719.7756 557.3308 719.299 556.5808Q718.82245 555.8308 718.82245 554.8933Q718.82245 553.86206 719.4084 552.9636Q719.9943 552.0652 721.1115 551.60425Q722.2287 551.1433 723.6037 551.1433Q725.1193 551.1433 726.2756 551.6277Q727.4318 552.11206 728.049 553.0574Q728.6662 554.0027 728.7131 555.2058L726.9943 555.3308Q726.8537 554.04956 726.049 553.3855Q725.2443 552.72144 723.6818 552.72144Q722.0568 552.72144 721.3068 553.323Q720.5568 553.92456 720.5568 554.7683Q720.5568 555.5027 721.0881 555.97144Q721.6037 556.4402 723.799 556.9402Q725.9943 557.4402 726.8068 557.8152Q727.9943 558.36206 728.56464 559.198Q729.13495 560.03394 729.13495 561.1277Q729.13495 562.22144 728.50995 563.1824Q727.88495 564.1433 726.7209 564.67456Q725.5568 565.2058 724.1037 565.2058Q722.25995 565.2058 721.00995 564.66675Q719.75995 564.1277 719.049 563.04956Q718.3381 561.97144 718.3068 560.59644ZM737.88495 561.79956L739.6037 562.0183Q739.19745 563.5183 738.0959 564.35425Q736.9943 565.1902 735.2756 565.1902Q733.1193 565.1902 731.8537 563.86206Q730.5881 562.53394 730.5881 560.1277Q730.5881 557.6433 731.8615 556.2683Q733.13495 554.8933 735.1818 554.8933Q737.1662 554.8933 738.4162 556.23706Q739.6662 557.5808 739.6662 560.03394Q739.6662 560.17456 739.6506 560.47144L732.3068 560.47144Q732.4006 562.09644 733.2287 562.9558Q734.0568 563.8152 735.2912 563.8152Q736.19745 563.8152 736.8459 563.3386Q737.4943 562.86206 737.88495 561.79956ZM732.4006 559.09644L737.9006 559.09644Q737.7912 557.86206 737.2756 557.23706Q736.4787 556.2683 735.19745 556.2683Q734.0568 556.2683 733.26776 557.04175Q732.4787 557.8152 732.4006 559.09644ZM741.50995 564.97144L741.50995 555.11206L743.00995 555.11206L743.00995 556.61206Q743.5881 555.5652 744.07245 555.22925Q744.5568 554.8933 745.1506 554.8933Q745.9943 554.8933 746.8693 555.4402L746.2912 556.98706Q745.6818 556.6277 745.0568 556.6277Q744.50995 556.6277 744.08026 556.9558Q743.6506 557.28394 743.4631 557.86206Q743.1818 558.7527 743.1818 559.8152L743.1818 564.97144L741.50995 564.97144ZM747.3381 560.59644L749.0256 560.4558Q749.1506 561.47144 749.5881 562.1277Q750.0256 562.78394 750.95526 563.1902Q751.88495 563.59644 753.0412 563.59644Q754.07245 563.59644 754.8615 563.28394Q755.6506 562.97144 756.0412 562.4402Q756.4318 561.90894 756.4318 561.28394Q756.4318 560.6433 756.0568 560.16675Q755.6818 559.6902 754.82245 559.36206Q754.2756 559.1433 752.4006 558.698Q750.5256 558.2527 749.7756 557.84644Q748.8068 557.3308 748.33026 556.5808Q747.8537 555.8308 747.8537 554.8933Q747.8537 553.86206 748.43964 552.9636Q749.0256 552.0652 750.14276 551.60425Q751.25995 551.1433 752.63495 551.1433Q754.1506 551.1433 755.3068 551.6277Q756.4631 552.11206 757.08026 553.0574Q757.69745 554.0027 757.7443 555.2058L756.0256 555.3308Q755.88495 554.04956 755.08026 553.3855Q754.2756 552.72144 752.7131 552.72144Q751.0881 552.72144 750.3381 553.323Q749.5881 553.92456 749.5881 554.7683Q749.5881 555.5027 750.1193 555.97144Q750.63495 556.4402 752.83026 556.9402Q755.0256 557.4402 755.8381 557.8152Q757.0256 558.36206 757.5959 559.198Q758.1662 560.03394 758.1662 561.1277Q758.1662 562.22144 757.5412 563.1824Q756.9162 564.1433 755.75214 564.67456Q754.5881 565.2058 753.13495 565.2058Q751.2912 565.2058 750.0412 564.66675Q748.7912 564.1277 748.08026 563.04956Q747.3693 561.97144 747.3381 560.59644ZM763.8381 563.47144L764.07245 564.9558Q763.3693 565.09644 762.8068 565.09644Q761.9006 565.09644 761.4006 564.8074Q760.9006 564.5183 760.69745 564.0574Q760.4943 563.59644 760.4943 562.0808L760.4943 556.42456L759.25995 556.42456L759.25995 555.11206L760.4943 555.11206L760.4943 552.67456L762.1506 551.67456L762.1506 555.11206L763.8381 555.11206L763.8381 556.42456L762.1506 556.42456L762.1506 562.17456Q762.1506 562.8933 762.2365 563.09644Q762.32245 563.29956 762.5256 563.42456Q762.7287 563.54956 763.1037 563.54956Q763.3693 563.54956 763.8381 563.47144ZM765.3381 564.97144L765.3381 555.11206L766.8381 555.11206L766.8381 556.61206Q767.4162 555.5652 767.9006 555.22925Q768.38495 554.8933 768.9787 554.8933Q769.82245 554.8933 770.69745 555.4402L770.1193 556.98706Q769.50995 556.6277 768.88495 556.6277Q768.3381 556.6277 767.9084 556.9558Q767.4787 557.28394 767.2912 557.86206Q767.00995 558.7527 767.00995 559.8152L767.00995 564.97144L765.3381 564.97144ZM771.5881 553.28394L771.5881 551.3777L773.25995 551.3777L773.25995 553.28394L771.5881 553.28394ZM771.5881 564.97144L771.5881 555.11206L773.25995 555.11206L773.25995 564.97144L771.5881 564.97144ZM775.7131 564.97144L775.7131 555.11206L777.2131 555.11206L777.2131 556.5183Q778.3068 554.8933 780.3537 554.8933Q781.2443 554.8933 781.9943 555.2136Q782.7443 555.53394 783.1115 556.0574Q783.4787 556.5808 783.63495 557.28394Q783.7287 557.7527 783.7287 558.90894L783.7287 564.97144L782.0568 564.97144L782.0568 558.97144Q782.0568 557.9558 781.8615 557.448Q781.6662 556.9402 781.1662 556.6433Q780.6662 556.34644 779.9943 556.34644Q778.9318 556.34644 778.1584 557.0183Q777.38495 557.6902 777.38495 559.59644L777.38495 564.97144L775.7131 564.97144ZM785.7912 565.78394L787.4006 566.03394Q787.50995 566.78394 787.9787 567.1277Q788.5881 567.5808 789.6662 567.5808Q790.8381 567.5808 791.4631 567.1199Q792.0881 566.65894 792.32245 565.8308Q792.44745 565.3152 792.4318 563.67456Q791.3381 564.97144 789.7131 564.97144Q787.6818 564.97144 786.56464 563.5027Q785.44745 562.03394 785.44745 559.98706Q785.44745 558.5808 785.9631 557.3855Q786.4787 556.1902 787.44745 555.54175Q788.4162 554.8933 789.7131 554.8933Q791.4631 554.8933 792.5881 556.29956L792.5881 555.11206L794.13495 555.11206L794.13495 563.6277Q794.13495 565.9402 793.6662 566.9011Q793.19745 567.86206 792.1818 568.41675Q791.1662 568.97144 789.6818 568.97144Q787.9162 568.97144 786.83026 568.17456Q785.7443 567.3777 785.7912 565.78394ZM787.1662 559.86206Q787.1662 561.8152 787.93964 562.7058Q788.7131 563.59644 789.8693 563.59644Q791.00995 563.59644 791.7912 562.7058Q792.57245 561.8152 792.57245 559.92456Q792.57245 558.11206 791.76776 557.198Q790.9631 556.28394 789.8381 556.28394Q788.7287 556.28394 787.94745 557.1824Q787.1662 558.0808 787.1662 559.86206Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M672.0551 602.90204L840.0747 602.90204L840.0747 657.3063L672.0551 657.3063Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M686.602 636.58954L686.602 622.9958L695.77386 622.9958L695.77386 624.58954L688.39886 624.58954L688.39886 628.8083L694.77386 628.8083L694.77386 630.41766L688.39886 630.41766L688.39886 636.58954L686.602 636.58954ZM697.69574 624.90204L697.69574 622.9958L699.3676 622.9958L699.3676 624.90204L697.69574 624.90204ZM697.69574 636.58954L697.69574 626.73016L699.3676 626.73016L699.3676 636.58954L697.69574 636.58954ZM708.57074 633.41766L710.2895 633.6364Q709.88324 635.1364 708.7817 635.97235Q707.6801 636.8083 705.96136 636.8083Q703.8051 636.8083 702.5395 635.48016Q701.27386 634.15204 701.27386 631.7458Q701.27386 629.2614 702.5473 627.8864Q703.82074 626.5114 705.8676 626.5114Q707.852 626.5114 709.102 627.85516Q710.352 629.1989 710.352 631.65204Q710.352 631.79266 710.33636 632.08954L702.9926 632.08954Q703.08636 633.71454 703.9145 634.5739Q704.7426 635.4333 705.977 635.4333Q706.88324 635.4333 707.5317 634.9567Q708.1801 634.48016 708.57074 633.41766ZM703.08636 630.71454L708.58636 630.71454Q708.477 629.48016 707.96136 628.85516Q707.1645 627.8864 705.88324 627.8864Q704.7426 627.8864 703.95355 628.65985Q703.1645 629.4333 703.08636 630.71454ZM712.1645 636.58954L712.1645 622.9958L713.83636 622.9958L713.83636 636.58954L712.1645 636.58954ZM722.7426 636.58954L722.7426 635.33954Q721.8051 636.8083 719.9926 636.8083Q718.82074 636.8083 717.82855 636.15985Q716.83636 635.5114 716.2973 634.34735Q715.75824 633.1833 715.75824 631.66766Q715.75824 630.1989 716.2504 628.9958Q716.7426 627.79266 717.7192 627.15204Q718.69574 626.5114 719.9145 626.5114Q720.8051 626.5114 721.5004 626.8864Q722.19574 627.2614 722.63324 627.8708L722.63324 622.9958L724.2895 622.9958L724.2895 636.58954L722.7426 636.58954ZM717.46136 631.66766Q717.46136 633.5583 718.26605 634.4958Q719.07074 635.4333 720.14886 635.4333Q721.2426 635.4333 722.00824 634.54266Q722.77386 633.65204 722.77386 631.8083Q722.77386 629.79266 721.9926 628.84735Q721.21136 627.90204 720.07074 627.90204Q718.96136 627.90204 718.21136 628.8083Q717.46136 629.71454 717.46136 631.66766ZM726.39886 629.96454Q726.39886 626.5739 728.2192 624.65985Q730.0395 622.7458 732.9145 622.7458Q734.7895 622.7458 736.3051 623.6442Q737.82074 624.54266 738.6098 626.15204Q739.39886 627.7614 739.39886 629.8083Q739.39886 631.8708 738.5629 633.5036Q737.727 635.1364 736.19574 635.98016Q734.6645 636.8239 732.89886 636.8239Q730.977 636.8239 729.4692 635.8942Q727.96136 634.96454 727.1801 633.363Q726.39886 631.7614 726.39886 629.96454ZM728.25824 629.9958Q728.25824 632.4489 729.57855 633.863Q730.89886 635.27704 732.88324 635.27704Q734.9145 635.27704 736.227 633.84735Q737.5395 632.41766 737.5395 629.79266Q737.5395 628.1364 736.9848 626.90204Q736.4301 625.66766 735.3442 624.98016Q734.25824 624.29266 732.9145 624.29266Q731.00824 624.29266 729.63324 625.60516Q728.25824 626.91766 728.25824 629.9958ZM741.21136 636.58954L741.21136 626.73016L742.71136 626.73016L742.71136 628.23016Q743.2895 627.1833 743.77386 626.84735Q744.25824 626.5114 744.852 626.5114Q745.69574 626.5114 746.57074 627.0583L745.9926 628.60516Q745.38324 628.2458 744.75824 628.2458Q744.21136 628.2458 743.7817 628.5739Q743.352 628.90204 743.1645 629.48016Q742.88324 630.3708 742.88324 631.4333L742.88324 636.58954L741.21136 636.58954ZM747.6645 636.58954L747.6645 622.9958L752.7895 622.9958Q754.14886 622.9958 754.8676 623.1208Q755.8676 623.29266 756.5395 623.7614Q757.21136 624.23016 757.6254 625.0739Q758.0395 625.91766 758.0395 626.91766Q758.0395 628.65204 756.9379 629.85516Q755.83636 631.0583 752.94574 631.0583L749.46136 631.0583L749.46136 636.58954L747.6645 636.58954ZM749.46136 629.4489L752.977 629.4489Q754.727 629.4489 755.45355 628.8005Q756.1801 628.15204 756.1801 626.98016Q756.1801 626.1208 755.7504 625.5114Q755.32074 624.90204 754.6176 624.71454Q754.1645 624.58954 752.94574 624.58954L749.46136 624.58954L749.46136 629.4489ZM759.8676 636.58954L759.8676 626.73016L761.3676 626.73016L761.3676 628.23016Q761.94574 627.1833 762.4301 626.84735Q762.9145 626.5114 763.50824 626.5114Q764.352 626.5114 765.227 627.0583L764.64886 628.60516Q764.0395 628.2458 763.4145 628.2458Q762.8676 628.2458 762.4379 628.5739Q762.00824 628.90204 761.82074 629.48016Q761.5395 630.3708 761.5395 631.4333L761.5395 636.58954L759.8676 636.58954ZM765.477 631.66766Q765.477 628.9333 767.00824 627.60516Q768.27386 626.5114 770.102 626.5114Q772.13324 626.5114 773.4223 627.84735Q774.71136 629.1833 774.71136 631.52704Q774.71136 633.4333 774.14105 634.5192Q773.57074 635.60516 772.4848 636.2067Q771.39886 636.8083 770.102 636.8083Q768.0395 636.8083 766.75824 635.48016Q765.477 634.15204 765.477 631.66766ZM767.19574 631.66766Q767.19574 633.5583 768.02386 634.4958Q768.852 635.4333 770.102 635.4333Q771.352 635.4333 772.1723 634.488Q772.9926 633.54266 772.9926 631.60516Q772.9926 629.77704 772.1645 628.83954Q771.33636 627.90204 770.102 627.90204Q768.852 627.90204 768.02386 628.83954Q767.19574 629.77704 767.19574 631.66766ZM776.477 640.3708L776.477 626.73016L778.00824 626.73016L778.00824 628.0114Q778.5395 627.2614 779.2192 626.8864Q779.89886 626.5114 780.852 626.5114Q782.1176 626.5114 783.08636 627.15985Q784.0551 627.8083 784.5473 628.9958Q785.0395 630.1833 785.0395 631.58954Q785.0395 633.10516 784.4926 634.3161Q783.94574 635.52704 782.9145 636.16766Q781.88324 636.8083 780.7426 636.8083Q779.89886 636.8083 779.2348 636.4567Q778.57074 636.10516 778.14886 635.5739L778.14886 640.3708L776.477 640.3708ZM777.9926 631.71454Q777.9926 633.6208 778.76605 634.52704Q779.5395 635.4333 780.63324 635.4333Q781.7426 635.4333 782.5317 634.4958Q783.32074 633.5583 783.32074 631.5739Q783.32074 629.6989 782.5473 628.7614Q781.77386 627.8239 780.69574 627.8239Q779.63324 627.8239 778.8129 628.8239Q777.9926 629.8239 777.9926 631.71454ZM790.52386 636.58954L790.52386 624.58954L786.0551 624.58954L786.0551 622.9958L796.82074 622.9958L796.82074 624.58954L792.32074 624.58954L792.32074 636.58954L790.52386 636.58954ZM798.1645 640.3864L797.9926 638.8239Q798.5395 638.96454 798.94574 638.96454Q799.4926 638.96454 799.82855 638.77704Q800.1645 638.58954 800.38324 638.2614Q800.5395 638.0114 800.88324 637.0114Q800.9301 636.8708 801.0395 636.60516L797.3051 626.73016L799.102 626.73016L801.14886 632.4489Q801.5551 633.52704 801.8676 634.73016Q802.14886 633.5739 802.5551 632.48016L804.64886 626.73016L806.32074 626.73016L802.57074 636.7614Q801.977 638.3864 801.63324 638.9958Q801.19574 639.8239 800.6176 640.2067Q800.0395 640.58954 799.2426 640.58954Q798.75824 640.58954 798.1645 640.3864ZM807.57074 640.3708L807.57074 626.73016L809.102 626.73016L809.102 628.0114Q809.63324 627.2614 810.3129 626.8864Q810.9926 626.5114 811.94574 626.5114Q813.21136 626.5114 814.1801 627.15985Q815.14886 627.8083 815.64105 628.9958Q816.13324 630.1833 816.13324 631.58954Q816.13324 633.10516 815.58636 634.3161Q815.0395 635.52704 814.00824 636.16766Q812.977 636.8083 811.83636 636.8083Q810.9926 636.8083 810.32855 636.4567Q809.6645 636.10516 809.2426 635.5739L809.2426 640.3708L807.57074 640.3708ZM809.08636 631.71454Q809.08636 633.6208 809.8598 634.52704Q810.63324 635.4333 811.727 635.4333Q812.83636 635.4333 813.6254 634.4958Q814.4145 633.5583 814.4145 631.5739Q814.4145 629.6989 813.64105 628.7614Q812.8676 627.8239 811.7895 627.8239Q810.727 627.8239 809.9067 628.8239Q809.08636 629.8239 809.08636 631.71454ZM824.71136 633.41766L826.4301 633.6364Q826.02386 635.1364 824.9223 635.97235Q823.82074 636.8083 822.102 636.8083Q819.94574 636.8083 818.6801 635.48016Q817.4145 634.15204 817.4145 631.7458Q817.4145 629.2614 818.6879 627.8864Q819.96136 626.5114 822.00824 626.5114Q823.9926 626.5114 825.2426 627.85516Q826.4926 629.1989 826.4926 631.65204Q826.4926 631.79266 826.477 632.08954L819.13324 632.08954Q819.227 633.71454 820.0551 634.5739Q820.88324 635.4333 822.1176 635.4333Q823.02386 635.4333 823.6723 634.9567Q824.32074 634.48016 824.71136 633.41766ZM819.227 630.71454L824.727 630.71454Q824.6176 629.48016 824.102 628.85516Q823.3051 627.8864 822.02386 627.8864Q820.88324 627.8864 820.0942 628.65985Q819.3051 629.4333 819.227 630.71454Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M895.6063 607.8994L1007.63196 607.8994L1007.63196 655.30365L895.6063 655.30365Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M943.4813 638.0869L938.2001 624.49316L940.1532 624.49316L943.68445 634.36816Q944.12195 635.55566 944.4032 636.5869Q944.7157 635.47754 945.1376 634.36816L948.80945 624.49316L950.6532 624.49316L945.3251 638.0869L943.4813 638.0869ZM958.2626 636.86816Q957.3251 637.66504 956.4657 637.98535Q955.6063 638.30566 954.62195 638.30566Q953.0126 638.30566 952.1376 637.5166Q951.2626 636.72754 951.2626 635.49316Q951.2626 634.7588 951.5907 634.16504Q951.9188 633.5713 952.4501 633.2119Q952.9813 632.85254 953.6532 632.66504Q954.1532 632.5244 955.1376 632.41504Q957.1688 632.16504 958.12195 631.8369Q958.12195 631.49316 958.12195 631.3994Q958.12195 630.3838 957.6532 629.9619Q957.0126 629.3994 955.74695 629.3994Q954.5751 629.3994 954.0126 629.80566Q953.4501 630.2119 953.18445 631.2744L951.5438 631.04004Q951.7782 629.99316 952.286 629.35254Q952.7938 628.7119 953.75476 628.36035Q954.7157 628.0088 955.99695 628.0088Q957.2626 628.0088 958.0438 628.30566Q958.8251 628.60254 959.2001 629.05566Q959.5751 629.5088 959.7157 630.1963Q959.80945 630.61816 959.80945 631.72754L959.80945 633.9619Q959.80945 636.29004 959.911 636.9072Q960.0126 637.5244 960.3407 638.0869L958.5907 638.0869Q958.3251 637.5713 958.2626 636.86816ZM958.12195 633.1494Q957.2157 633.5088 955.3876 633.7744Q954.3563 633.91504 953.93445 634.10254Q953.5126 634.29004 953.2782 634.6494Q953.0438 635.0088 953.0438 635.4463Q953.0438 636.11816 953.55164 636.5635Q954.05945 637.0088 955.0282 637.0088Q955.99695 637.0088 956.74695 636.5791Q957.49695 636.1494 957.8563 635.43066Q958.12195 634.85254 958.12195 633.7588L958.12195 633.1494ZM962.1688 638.0869L962.1688 624.49316L963.8407 624.49316L963.8407 638.0869L962.1688 638.0869Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M624.0 558.9309L660.0007 559.3089" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M659.966 562.6122L669.07635 559.4042L660.03534 556.0056Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M640.0 559.4296L640.0 487.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M640.0 487.42963L660.0 487.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M660.0 490.7331L669.0762 487.42963L660.0 484.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M640.0 559.4296L640.0 631.4296" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M640.0 631.4296L660.0 631.4296" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M660.0 634.7331L669.0762 631.4296L660.0 628.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M840.0 631.4296L884.0 631.4296" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M884.0 634.7331L893.0762 631.4296L884.0 628.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M840.0 559.4296L1020.0 559.4296" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1020.0 562.7331L1029.0762 559.4296L1020.0 556.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M840.0 487.42963L952.0 487.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M952.0 607.4296L952.0 559.4296" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M952.0 487.42963L952.0 559.4296" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M360.0 423.42963L392.0 423.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M392.0 423.42963L392.0 271.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M392.0 271.42963L428.0 271.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M428.0 274.7331L437.0762 271.42963L428.0 268.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M392.0 423.42963L392.0 559.4296" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M392.0 559.4296L436.0 559.4296" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M436.0 562.7331L445.0762 559.4296L436.0 556.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M402.45312 493.55463L404.14062 493.414Q404.26562 494.42963 404.70312 495.08588Q405.14062 495.74213 406.0703 496.14838Q407.0 496.55463 408.15625 496.55463Q409.1875 496.55463 409.97656 496.24213Q410.76562 495.92963 411.15625 495.39838Q411.54688 494.86713 411.54688 494.24213Q411.54688 493.6015 411.17188 493.12494Q410.79688 492.64838 409.9375 492.32025Q409.39062 492.1015 407.51562 491.6562Q405.64062 491.21088 404.89062 490.80463Q403.92188 490.289 403.4453 489.539Q402.96875 488.789 402.96875 487.8515Q402.96875 486.82025 403.5547 485.9218Q404.14062 485.02338 405.2578 484.56244Q406.375 484.1015 407.75 484.1015Q409.26562 484.1015 410.42188 484.58588Q411.57812 485.07025 412.1953 486.01556Q412.8125 486.96088 412.85938 488.164L411.14062 488.289Q411.0 487.00775 410.1953 486.3437Q409.39062 485.67963 407.82812 485.67963Q406.20312 485.67963 405.45312 486.2812Q404.70312 486.88275 404.70312 487.7265Q404.70312 488.46088 405.23438 488.92963Q405.75 489.39838 407.9453 489.89838Q410.14062 490.39838 410.95312 490.77338Q412.14062 491.32025 412.71094 492.1562Q413.28125 492.99213 413.28125 494.08588Q413.28125 495.17963 412.65625 496.14056Q412.03125 497.1015 410.8672 497.63275Q409.70312 498.164 408.25 498.164Q406.40625 498.164 405.15625 497.62494Q403.90625 497.08588 403.1953 496.00775Q402.48438 494.92963 402.45312 493.55463ZM414.40625 497.92963L414.40625 496.25775L421.375 487.55463Q422.125 486.61713 422.79688 485.92963L415.20312 485.92963L415.20312 484.33588L424.9375 484.33588L424.9375 485.92963L417.3125 495.36713L416.48438 496.32025L425.17188 496.32025L425.17188 497.92963L414.40625 497.92963ZM425.40625 497.92963L430.64062 484.33588L432.57812 484.33588L438.14062 497.92963L436.09375 497.92963L434.5 493.80463L428.8125 493.80463L427.32812 497.92963L425.40625 497.92963ZM429.32812 492.3515L433.9375 492.3515L432.53125 488.57025Q431.875 486.86713 431.5625 485.75775Q431.29688 487.07025 430.82812 488.3515L429.32812 492.3515ZM439.375 497.92963L439.375 484.33588L445.40625 484.33588Q447.21875 484.33588 448.16406 484.69525Q449.10938 485.05463 449.67188 485.9843Q450.23438 486.914 450.23438 488.039Q450.23438 489.49213 449.3047 490.4843Q448.375 491.4765 446.40625 491.74213Q447.125 492.08588 447.5 492.414Q448.28125 493.14838 448.98438 494.2265L451.35938 497.92963L449.09375 497.92963L447.29688 495.1015Q446.5 493.88275 445.9922 493.2265Q445.48438 492.57025 445.07812 492.31244Q444.67188 492.05463 444.26562 491.96088Q443.95312 491.88275 443.25 491.88275L441.17188 491.88275L441.17188 497.92963L439.375 497.92963ZM441.17188 490.33588L445.03125 490.33588Q446.26562 490.33588 446.96094 490.07806Q447.65625 489.82025 448.02344 489.25775Q448.39062 488.69525 448.39062 488.039Q448.39062 487.07025 447.6875 486.45306Q446.98438 485.83588 445.46875 485.83588L441.17188 485.83588L441.17188 490.33588ZM452.84375 497.92963L452.84375 484.33588L458.875 484.33588Q460.6875 484.33588 461.6328 484.69525Q462.57812 485.05463 463.14062 485.9843Q463.70312 486.914 463.70312 488.039Q463.70312 489.49213 462.77344 490.4843Q461.84375 491.4765 459.875 491.74213Q460.59375 492.08588 460.96875 492.414Q461.75 493.14838 462.45312 494.2265L464.82812 497.92963L462.5625 497.92963L460.76562 495.1015Q459.96875 493.88275 459.46094 493.2265Q458.95312 492.57025 458.54688 492.31244Q458.14062 492.05463 457.73438 491.96088Q457.42188 491.88275 456.71875 491.88275L454.64062 491.88275L454.64062 497.92963L452.84375 497.92963ZM454.64062 490.33588L458.5 490.33588Q459.73438 490.33588 460.4297 490.07806Q461.125 489.82025 461.4922 489.25775Q461.85938 488.69525 461.85938 488.039Q461.85938 487.07025 461.15625 486.45306Q460.45312 485.83588 458.9375 485.83588L454.64062 485.83588L454.64062 490.33588ZM464.79688 497.92963L470.03125 484.33588L471.96875 484.33588L477.53125 497.92963L475.48438 497.92963L473.89062 493.80463L468.20312 493.80463L466.71875 497.92963L464.79688 497.92963ZM468.71875 492.3515L473.32812 492.3515L471.92188 488.57025Q471.26562 486.86713 470.95312 485.75775Q470.6875 487.07025 470.21875 488.3515L468.71875 492.3515ZM482.5625 497.92963L482.5625 492.164L477.32812 484.33588L479.51562 484.33588L482.1875 488.42963Q482.9375 489.58588 483.57812 490.7265Q484.1875 489.664 485.0625 488.32025L487.6875 484.33588L489.79688 484.33588L484.35938 492.164L484.35938 497.92963L482.5625 497.92963Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M399.125 251.69524L391.92188 252.19524L388.90625 252.19524L388.90625 250.13274L391.92188 250.13274L399.125 250.61711L399.125 251.69524ZM402.5 252.13274L400.59375 252.13274L400.59375 250.21086L402.5 250.21086L402.5 252.13274ZM398.125 247.78899L397.98438 246.10149Q399.0 245.97649 399.65625 245.53899Q400.3125 245.10149 400.71875 244.1718Q401.125 243.24211 401.125 242.08586Q401.125 241.05461 400.8125 240.26555Q400.5 239.47649 399.96875 239.08586Q399.4375 238.69524 398.8125 238.69524Q398.17188 238.69524 397.6953 239.07024Q397.21875 239.44524 396.89062 240.30461Q396.67188 240.85149 396.22656 242.72649Q395.78125 244.60149 395.375 245.35149Q394.85938 246.32024 394.10938 246.7968Q393.35938 247.27336 392.42188 247.27336Q391.39062 247.27336 390.4922 246.68742Q389.59375 246.10149 389.1328 244.9843Q388.67188 243.86711 388.67188 242.49211Q388.67188 240.97649 389.15625 239.82024Q389.64062 238.66399 390.58594 238.0468Q391.53125 237.42961 392.73438 237.38274L392.85938 239.10149Q391.57812 239.24211 390.91406 240.0468Q390.25 240.85149 390.25 242.41399Q390.25 244.03899 390.85156 244.78899Q391.45312 245.53899 392.29688 245.53899Q393.03125 245.53899 393.5 245.00774Q393.96875 244.49211 394.46875 242.2968Q394.96875 240.10149 395.34375 239.28899Q395.89062 238.10149 396.72656 237.53117Q397.5625 236.96086 398.65625 236.96086Q399.75 236.96086 400.71094 237.58586Q401.67188 238.21086 402.20312 239.37492Q402.73438 240.53899 402.73438 241.99211Q402.73438 243.83586 402.1953 245.08586Q401.65625 246.33586 400.57812 247.0468Q399.5 247.75774 398.125 247.78899ZM402.5 235.83586L400.82812 235.83586L392.125 228.86711Q391.1875 228.11711 390.5 227.44524L390.5 235.03899L388.90625 235.03899L388.90625 225.30461L390.5 225.30461L399.9375 232.92961L400.89062 233.75774L400.89062 225.07024L402.5 225.07024L402.5 235.83586ZM402.5 224.85149L388.90625 219.61711L388.90625 217.67961L402.5 212.11711L402.5 214.16399L398.375 215.75774L398.375 221.44524L402.5 222.92961L402.5 224.85149ZM396.92188 220.92961L396.92188 216.32024L393.14062 217.72649Q391.4375 218.38274 390.32812 218.69524Q391.64062 218.96086 392.92188 219.42961L396.92188 220.92961ZM402.5 210.86711L388.90625 210.86711L388.90625 204.83586Q388.90625 203.02336 389.26562 202.07805Q389.625 201.13274 390.5547 200.57024Q391.48438 200.00774 392.60938 200.00774Q394.0625 200.00774 395.0547 200.93742Q396.04688 201.86711 396.3125 203.83586Q396.65625 203.11711 396.98438 202.74211Q397.71875 201.96086 398.79688 201.25774L402.5 198.88274L402.5 201.14836L399.67188 202.94524Q398.45312 203.74211 397.79688 204.24992Q397.14062 204.75774 396.8828 205.16399Q396.625 205.57024 396.53125 205.97649Q396.45312 206.28899 396.45312 206.99211L396.45312 209.07024L402.5 209.07024L402.5 210.86711ZM394.90625 209.07024L394.90625 205.21086Q394.90625 203.97649 394.64844 203.28117Q394.39062 202.58586 393.82812 202.21867Q393.26562 201.85149 392.60938 201.85149Q391.64062 201.85149 391.02344 202.55461Q390.40625 203.25774 390.40625 204.77336L390.40625 209.07024L394.90625 209.07024ZM402.5 197.39836L388.90625 197.39836L388.90625 191.36711Q388.90625 189.55461 389.26562 188.6093Q389.625 187.66399 390.5547 187.10149Q391.48438 186.53899 392.60938 186.53899Q394.0625 186.53899 395.0547 187.46867Q396.04688 188.39836 396.3125 190.36711Q396.65625 189.64836 396.98438 189.27336Q397.71875 188.49211 398.79688 187.78899L402.5 185.41399L402.5 187.67961L399.67188 189.47649Q398.45312 190.27336 397.79688 190.78117Q397.14062 191.28899 396.8828 191.69524Q396.625 192.10149 396.53125 192.50774Q396.45312 192.82024 396.45312 193.52336L396.45312 195.60149L402.5 195.60149L402.5 197.39836ZM394.90625 195.60149L394.90625 191.74211Q394.90625 190.50774 394.64844 189.81242Q394.39062 189.11711 393.82812 188.74992Q393.26562 188.38274 392.60938 188.38274Q391.64062 188.38274 391.02344 189.08586Q390.40625 189.78899 390.40625 191.30461L390.40625 195.60149L394.90625 195.60149ZM402.5 185.46086L388.90625 180.22649L388.90625 178.28899L402.5 172.72649L402.5 174.77336L398.375 176.36711L398.375 182.05461L402.5 183.53899L402.5 185.46086ZM396.92188 181.53899L396.92188 176.92961L393.14062 178.33586Q391.4375 178.99211 390.32812 179.30461Q391.64062 179.57024 392.92188 180.03899L396.92188 181.53899ZM402.5 167.67961L396.73438 167.67961L388.90625 172.91399L388.90625 170.72649L393.0 168.05461Q394.15625 167.30461 395.29688 166.66399Q394.23438 166.05461 392.89062 165.17961L388.90625 162.55461L388.90625 160.44524L396.73438 165.88274L402.5 165.88274L402.5 167.67961Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M560.0 559.4296L612.0 559.4296" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M612.0 562.7331L621.0762 559.4296L612.0 556.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M1032.0 559.4296L1056.0 559.4296" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1056.0 559.4296L1056.0 399.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M848.0 271.42963L1056.0 271.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1056.0 271.42963L1056.0 399.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1056.0 399.42963L1076.0 399.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1076.0 402.7331L1085.0762 399.42963L1076.0 396.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M1208.0 367.42963L1384.0 367.42963L1384.0 431.42963L1208.0 431.42963Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1247.6875 405.92963L1247.6875 392.33588L1249.5312 392.33588L1256.6719 403.00775L1256.6719 392.33588L1258.3906 392.33588L1258.3906 405.92963L1256.5469 405.92963L1249.4062 395.24213L1249.4062 405.92963L1247.6875 405.92963ZM1267.4062 405.92963L1267.4062 404.4765Q1266.2656 406.14838 1264.2812 406.14838Q1263.4219 406.14838 1262.6641 405.81244Q1261.9062 405.4765 1261.5391 404.9765Q1261.1719 404.4765 1261.0156 403.74213Q1260.9219 403.24213 1260.9219 402.17963L1260.9219 396.07025L1262.5938 396.07025L1262.5938 401.539Q1262.5938 402.8515 1262.6875 403.30463Q1262.8438 403.96088 1263.3594 404.33588Q1263.875 404.71088 1264.625 404.71088Q1265.375 404.71088 1266.0312 404.32806Q1266.6875 403.94525 1266.9609 403.2812Q1267.2344 402.61713 1267.2344 401.3515L1267.2344 396.07025L1268.9062 396.07025L1268.9062 405.92963L1267.4062 405.92963ZM1271.3281 405.92963L1271.3281 396.07025L1272.8281 396.07025L1272.8281 397.46088Q1273.2812 396.74213 1274.0547 396.2968Q1274.8281 395.8515 1275.8125 395.8515Q1276.9062 395.8515 1277.6094 396.30463Q1278.3125 396.75775 1278.5938 397.58588Q1279.7656 395.8515 1281.6406 395.8515Q1283.1094 395.8515 1283.8984 396.664Q1284.6875 397.4765 1284.6875 399.164L1284.6875 405.92963L1283.0156 405.92963L1283.0156 399.7265Q1283.0156 398.7265 1282.8594 398.2812Q1282.7031 397.83588 1282.2734 397.57025Q1281.8438 397.30463 1281.2656 397.30463Q1280.2344 397.30463 1279.5469 397.99213Q1278.8594 398.67963 1278.8594 400.21088L1278.8594 405.92963L1277.1875 405.92963L1277.1875 399.52338Q1277.1875 398.414 1276.7812 397.8593Q1276.375 397.30463 1275.4375 397.30463Q1274.7344 397.30463 1274.1328 397.6718Q1273.5312 398.039 1273.2656 398.75775Q1273.0 399.4765 1273.0 400.82025L1273.0 405.92963L1271.3281 405.92963ZM1287.0625 405.92963L1287.0625 392.33588L1288.9062 392.33588L1296.0469 403.00775L1296.0469 392.33588L1297.7656 392.33588L1297.7656 405.92963L1295.9219 405.92963L1288.7812 395.24213L1288.7812 405.92963L1287.0625 405.92963ZM1306.7812 404.71088Q1305.8438 405.50775 1304.9844 405.82806Q1304.125 406.14838 1303.1406 406.14838Q1301.5312 406.14838 1300.6562 405.3593Q1299.7812 404.57025 1299.7812 403.33588Q1299.7812 402.6015 1300.1094 402.00775Q1300.4375 401.414 1300.9688 401.05463Q1301.5 400.69525 1302.1719 400.50775Q1302.6719 400.36713 1303.6562 400.25775Q1305.6875 400.00775 1306.6406 399.67963Q1306.6406 399.33588 1306.6406 399.24213Q1306.6406 398.2265 1306.1719 397.80463Q1305.5312 397.24213 1304.2656 397.24213Q1303.0938 397.24213 1302.5312 397.64838Q1301.9688 398.05463 1301.7031 399.11713L1300.0625 398.88275Q1300.2969 397.83588 1300.8047 397.19525Q1301.3125 396.55463 1302.2734 396.20306Q1303.2344 395.8515 1304.5156 395.8515Q1305.7812 395.8515 1306.5625 396.14838Q1307.3438 396.44525 1307.7188 396.89838Q1308.0938 397.3515 1308.2344 398.039Q1308.3281 398.46088 1308.3281 399.57025L1308.3281 401.80463Q1308.3281 404.13275 1308.4297 404.74994Q1308.5312 405.36713 1308.8594 405.92963L1307.1094 405.92963Q1306.8438 405.414 1306.7812 404.71088ZM1306.6406 400.99213Q1305.7344 401.3515 1303.9062 401.61713Q1302.875 401.75775 1302.4531 401.94525Q1302.0312 402.13275 1301.7969 402.49213Q1301.5625 402.8515 1301.5625 403.289Q1301.5625 403.96088 1302.0703 404.4062Q1302.5781 404.8515 1303.5469 404.8515Q1304.5156 404.8515 1305.2656 404.4218Q1306.0156 403.99213 1306.375 403.27338Q1306.6406 402.69525 1306.6406 401.6015L1306.6406 400.99213ZM1310.7188 405.92963L1310.7188 396.07025L1312.2188 396.07025L1312.2188 397.46088Q1312.6719 396.74213 1313.4453 396.2968Q1314.2188 395.8515 1315.2031 395.8515Q1316.2969 395.8515 1317.0 396.30463Q1317.7031 396.75775 1317.9844 397.58588Q1319.1562 395.8515 1321.0312 395.8515Q1322.5 395.8515 1323.2891 396.664Q1324.0781 397.4765 1324.0781 399.164L1324.0781 405.92963L1322.4062 405.92963L1322.4062 399.7265Q1322.4062 398.7265 1322.25 398.2812Q1322.0938 397.83588 1321.6641 397.57025Q1321.2344 397.30463 1320.6562 397.30463Q1319.625 397.30463 1318.9375 397.99213Q1318.25 398.67963 1318.25 400.21088L1318.25 405.92963L1316.5781 405.92963L1316.5781 399.52338Q1316.5781 398.414 1316.1719 397.8593Q1315.7656 397.30463 1314.8281 397.30463Q1314.125 397.30463 1313.5234 397.6718Q1312.9219 398.039 1312.6562 398.75775Q1312.3906 399.4765 1312.3906 400.82025L1312.3906 405.92963L1310.7188 405.92963ZM1333.0 402.75775L1334.7188 402.9765Q1334.3125 404.4765 1333.2109 405.31244Q1332.1094 406.14838 1330.3906 406.14838Q1328.2344 406.14838 1326.9688 404.82025Q1325.7031 403.49213 1325.7031 401.08588Q1325.7031 398.6015 1326.9766 397.2265Q1328.25 395.8515 1330.2969 395.8515Q1332.2812 395.8515 1333.5312 397.19525Q1334.7812 398.539 1334.7812 400.99213Q1334.7812 401.13275 1334.7656 401.42963L1327.4219 401.42963Q1327.5156 403.05463 1328.3438 403.914Q1329.1719 404.77338 1330.4062 404.77338Q1331.3125 404.77338 1331.9609 404.2968Q1332.6094 403.82025 1333.0 402.75775ZM1327.5156 400.05463L1333.0156 400.05463Q1332.9062 398.82025 1332.3906 398.19525Q1331.5938 397.2265 1330.3125 397.2265Q1329.1719 397.2265 1328.3828 397.99994Q1327.5938 398.77338 1327.5156 400.05463ZM1343.0156 405.92963L1343.0156 404.67963Q1342.0781 406.14838 1340.2656 406.14838Q1339.0938 406.14838 1338.1016 405.49994Q1337.1094 404.8515 1336.5703 403.68744Q1336.0312 402.52338 1336.0312 401.00775Q1336.0312 399.539 1336.5234 398.33588Q1337.0156 397.13275 1337.9922 396.49213Q1338.9688 395.8515 1340.1875 395.8515Q1341.0781 395.8515 1341.7734 396.2265Q1342.4688 396.6015 1342.9062 397.21088L1342.9062 392.33588L1344.5625 392.33588L1344.5625 405.92963L1343.0156 405.92963ZM1337.7344 401.00775Q1337.7344 402.89838 1338.5391 403.83588Q1339.3438 404.77338 1340.4219 404.77338Q1341.5156 404.77338 1342.2812 403.88275Q1343.0469 402.99213 1343.0469 401.14838Q1343.0469 399.13275 1342.2656 398.18744Q1341.4844 397.24213 1340.3438 397.24213Q1339.2344 397.24213 1338.4844 398.14838Q1337.7344 399.05463 1337.7344 401.00775Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M1088.0 399.42963L1196.0 399.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1196.0 402.7331L1205.0762 399.42963L1196.0 396.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M304.0 423.42963L304.0 791.4296" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M304.0 791.4296L1184.0 791.4296" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1184.0 791.4296L1184.0 399.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M336.0 423.42963L336.0 767.4296" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M336.0 767.4296L1120.0 767.4296" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1120.0 767.4296L1120.0 399.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1496.0 319.42963L1632.0 319.42963L1632.0 375.42963L1496.0 375.42963Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1539.125 353.92963L1539.125 340.33588L1548.2969 340.33588L1548.2969 341.92963L1540.9219 341.92963L1540.9219 346.14838L1547.2969 346.14838L1547.2969 347.75775L1540.9219 347.75775L1540.9219 353.92963L1539.125 353.92963ZM1550.7188 353.92963L1550.7188 340.33588L1552.5312 340.33588L1552.5312 353.92963L1550.7188 353.92963ZM1555.6406 353.92963L1555.6406 340.33588L1565.4844 340.33588L1565.4844 341.92963L1557.4375 341.92963L1557.4375 346.1015L1564.9688 346.1015L1564.9688 347.69525L1557.4375 347.69525L1557.4375 352.32025L1565.7969 352.32025L1565.7969 353.92963L1555.6406 353.92963ZM1567.9688 353.92963L1567.9688 340.33588L1569.7656 340.33588L1569.7656 352.32025L1576.4688 352.32025L1576.4688 353.92963L1567.9688 353.92963ZM1578.4219 353.92963L1578.4219 340.33588L1583.1094 340.33588Q1584.6875 340.33588 1585.5312 340.52338Q1586.6875 340.789 1587.5156 341.49213Q1588.5938 342.414 1589.125 343.82806Q1589.6562 345.24213 1589.6562 347.05463Q1589.6562 348.6015 1589.2969 349.7968Q1588.9375 350.99213 1588.375 351.7812Q1587.8125 352.57025 1587.1406 353.01556Q1586.4688 353.46088 1585.5156 353.69525Q1584.5625 353.92963 1583.3281 353.92963L1578.4219 353.92963ZM1580.2188 352.32025L1583.125 352.32025Q1584.4688 352.32025 1585.2344 352.07025Q1586.0 351.82025 1586.4531 351.36713Q1587.0938 350.7265 1587.4531 349.64838Q1587.8125 348.57025 1587.8125 347.02338Q1587.8125 344.89838 1587.1094 343.74994Q1586.4062 342.6015 1585.4062 342.21088Q1584.6875 341.92963 1583.0781 341.92963L1580.2188 341.92963L1580.2188 352.32025Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M1504.0 431.42963L1640.0 431.42963L1640.0 487.42963L1504.0 487.42963Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1522.1406 465.92963L1522.1406 452.33588L1527.2656 452.33588Q1528.625 452.33588 1529.3438 452.46088Q1530.3438 452.63275 1531.0156 453.1015Q1531.6875 453.57025 1532.1016 454.414Q1532.5156 455.25775 1532.5156 456.25775Q1532.5156 457.99213 1531.4141 459.19525Q1530.3125 460.39838 1527.4219 460.39838L1523.9375 460.39838L1523.9375 465.92963L1522.1406 465.92963ZM1523.9375 458.789L1527.4531 458.789Q1529.2031 458.789 1529.9297 458.14056Q1530.6562 457.49213 1530.6562 456.32025Q1530.6562 455.46088 1530.2266 454.8515Q1529.7969 454.24213 1529.0938 454.05463Q1528.6406 453.92963 1527.4219 453.92963L1523.9375 453.92963L1523.9375 458.789ZM1534.625 465.92963L1534.625 452.33588L1540.6562 452.33588Q1542.4688 452.33588 1543.4141 452.69525Q1544.3594 453.05463 1544.9219 453.9843Q1545.4844 454.914 1545.4844 456.039Q1545.4844 457.49213 1544.5547 458.4843Q1543.625 459.4765 1541.6562 459.74213Q1542.375 460.08588 1542.75 460.414Q1543.5312 461.14838 1544.2344 462.2265L1546.6094 465.92963L1544.3438 465.92963L1542.5469 463.1015Q1541.75 461.88275 1541.2422 461.2265Q1540.7344 460.57025 1540.3281 460.31244Q1539.9219 460.05463 1539.5156 459.96088Q1539.2031 459.88275 1538.5 459.88275L1536.4219 459.88275L1536.4219 465.92963L1534.625 465.92963ZM1536.4219 458.33588L1540.2812 458.33588Q1541.5156 458.33588 1542.2109 458.07806Q1542.9062 457.82025 1543.2734 457.25775Q1543.6406 456.69525 1543.6406 456.039Q1543.6406 455.07025 1542.9375 454.45306Q1542.2344 453.83588 1540.7188 453.83588L1536.4219 453.83588L1536.4219 458.33588ZM1547.5156 459.30463Q1547.5156 455.914 1549.3359 453.99994Q1551.1562 452.08588 1554.0312 452.08588Q1555.9062 452.08588 1557.4219 452.9843Q1558.9375 453.88275 1559.7266 455.49213Q1560.5156 457.1015 1560.5156 459.14838Q1560.5156 461.21088 1559.6797 462.8437Q1558.8438 464.4765 1557.3125 465.32025Q1555.7812 466.164 1554.0156 466.164Q1552.0938 466.164 1550.5859 465.2343Q1549.0781 464.30463 1548.2969 462.70306Q1547.5156 461.1015 1547.5156 459.30463ZM1549.375 459.33588Q1549.375 461.789 1550.6953 463.20306Q1552.0156 464.61713 1554.0 464.61713Q1556.0312 464.61713 1557.3438 463.18744Q1558.6562 461.75775 1558.6562 459.13275Q1558.6562 457.4765 1558.1016 456.24213Q1557.5469 455.00775 1556.4609 454.32025Q1555.375 453.63275 1554.0312 453.63275Q1552.125 453.63275 1550.75 454.94525Q1549.375 456.25775 1549.375 459.33588ZM1562.5781 465.92963L1562.5781 452.33588L1567.7031 452.33588Q1569.0625 452.33588 1569.7812 452.46088Q1570.7812 452.63275 1571.4531 453.1015Q1572.125 453.57025 1572.5391 454.414Q1572.9531 455.25775 1572.9531 456.25775Q1572.9531 457.99213 1571.8516 459.19525Q1570.75 460.39838 1567.8594 460.39838L1564.375 460.39838L1564.375 465.92963L1562.5781 465.92963ZM1564.375 458.789L1567.8906 458.789Q1569.6406 458.789 1570.3672 458.14056Q1571.0938 457.49213 1571.0938 456.32025Q1571.0938 455.46088 1570.6641 454.8515Q1570.2344 454.24213 1569.5312 454.05463Q1569.0781 453.92963 1567.8594 453.92963L1564.375 453.92963L1564.375 458.789ZM1575.0469 465.92963L1575.0469 452.33588L1584.8906 452.33588L1584.8906 453.92963L1576.8438 453.92963L1576.8438 458.1015L1584.375 458.1015L1584.375 459.69525L1576.8438 459.69525L1576.8438 464.32025L1585.2031 464.32025L1585.2031 465.92963L1575.0469 465.92963ZM1587.5 465.92963L1587.5 452.33588L1593.5312 452.33588Q1595.3438 452.33588 1596.2891 452.69525Q1597.2344 453.05463 1597.7969 453.9843Q1598.3594 454.914 1598.3594 456.039Q1598.3594 457.49213 1597.4297 458.4843Q1596.5 459.4765 1594.5312 459.74213Q1595.25 460.08588 1595.625 460.414Q1596.4062 461.14838 1597.1094 462.2265L1599.4844 465.92963L1597.2188 465.92963L1595.4219 463.1015Q1594.625 461.88275 1594.1172 461.2265Q1593.6094 460.57025 1593.2031 460.31244Q1592.7969 460.05463 1592.3906 459.96088Q1592.0781 459.88275 1591.375 459.88275L1589.2969 459.88275L1589.2969 465.92963L1587.5 465.92963ZM1589.2969 458.33588L1593.1562 458.33588Q1594.3906 458.33588 1595.0859 458.07806Q1595.7812 457.82025 1596.1484 457.25775Q1596.5156 456.69525 1596.5156 456.039Q1596.5156 455.07025 1595.8125 454.45306Q1595.1094 453.83588 1593.5938 453.83588L1589.2969 453.83588L1589.2969 458.33588ZM1604.3906 465.92963L1604.3906 453.92963L1599.9219 453.92963L1599.9219 452.33588L1610.6875 452.33588L1610.6875 453.92963L1606.1875 453.92963L1606.1875 465.92963L1604.3906 465.92963ZM1616.1562 465.92963L1616.1562 460.164L1610.9219 452.33588L1613.1094 452.33588L1615.7812 456.42963Q1616.5312 457.58588 1617.1719 458.7265Q1617.7812 457.664 1618.6562 456.32025L1621.2812 452.33588L1623.3906 452.33588L1617.9531 460.164L1617.9531 465.92963L1616.1562 465.92963Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M1704.0552 375.90204L1872.0747 375.90204L1872.0747 430.30624L1704.0552 430.30624Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1718.602 409.58954L1718.602 395.9958L1727.7739 395.9958L1727.7739 397.58954L1720.3989 397.58954L1720.3989 401.8083L1726.7739 401.8083L1726.7739 403.41766L1720.3989 403.41766L1720.3989 409.58954L1718.602 409.58954ZM1729.6958 397.90204L1729.6958 395.9958L1731.3677 395.9958L1731.3677 397.90204L1729.6958 397.90204ZM1729.6958 409.58954L1729.6958 399.73016L1731.3677 399.73016L1731.3677 409.58954L1729.6958 409.58954ZM1740.5708 406.41766L1742.2896 406.6364Q1741.8833 408.1364 1740.7817 408.97235Q1739.6802 409.8083 1737.9614 409.8083Q1735.8052 409.8083 1734.5396 408.48016Q1733.2739 407.15204 1733.2739 404.7458Q1733.2739 402.2614 1734.5474 400.8864Q1735.8208 399.5114 1737.8677 399.5114Q1739.852 399.5114 1741.102 400.85516Q1742.352 402.1989 1742.352 404.65204Q1742.352 404.79266 1742.3364 405.08954L1734.9927 405.08954Q1735.0864 406.71454 1735.9146 407.5739Q1736.7427 408.4333 1737.977 408.4333Q1738.8833 408.4333 1739.5317 407.95673Q1740.1802 407.48016 1740.5708 406.41766ZM1735.0864 403.71454L1740.5864 403.71454Q1740.477 402.48016 1739.9614 401.85516Q1739.1646 400.8864 1737.8833 400.8864Q1736.7427 400.8864 1735.9536 401.65985Q1735.1646 402.4333 1735.0864 403.71454ZM1744.1646 409.58954L1744.1646 395.9958L1745.8364 395.9958L1745.8364 409.58954L1744.1646 409.58954ZM1754.7427 409.58954L1754.7427 408.33954Q1753.8052 409.8083 1751.9927 409.8083Q1750.8208 409.8083 1749.8286 409.15985Q1748.8364 408.5114 1748.2974 407.34735Q1747.7583 406.1833 1747.7583 404.66766Q1747.7583 403.1989 1748.2505 401.9958Q1748.7427 400.79266 1749.7192 400.15204Q1750.6958 399.5114 1751.9146 399.5114Q1752.8052 399.5114 1753.5005 399.8864Q1754.1958 400.2614 1754.6333 400.8708L1754.6333 395.9958L1756.2896 395.9958L1756.2896 409.58954L1754.7427 409.58954ZM1749.4614 404.66766Q1749.4614 406.5583 1750.2661 407.4958Q1751.0708 408.4333 1752.1489 408.4333Q1753.2427 408.4333 1754.0083 407.54266Q1754.7739 406.65204 1754.7739 404.8083Q1754.7739 402.79266 1753.9927 401.84735Q1753.2114 400.90204 1752.0708 400.90204Q1750.9614 400.90204 1750.2114 401.8083Q1749.4614 402.71454 1749.4614 404.66766ZM1758.3989 402.96454Q1758.3989 399.5739 1760.2192 397.65985Q1762.0396 395.7458 1764.9146 395.7458Q1766.7896 395.7458 1768.3052 396.64423Q1769.8208 397.54266 1770.6099 399.15204Q1771.3989 400.7614 1771.3989 402.8083Q1771.3989 404.8708 1770.563 406.5036Q1769.727 408.1364 1768.1958 408.98016Q1766.6646 409.8239 1764.8989 409.8239Q1762.977 409.8239 1761.4692 408.89423Q1759.9614 407.96454 1759.1802 406.36298Q1758.3989 404.7614 1758.3989 402.96454ZM1760.2583 402.9958Q1760.2583 405.4489 1761.5786 406.86298Q1762.8989 408.27704 1764.8833 408.27704Q1766.9146 408.27704 1768.227 406.84735Q1769.5396 405.41766 1769.5396 402.79266Q1769.5396 401.1364 1768.9849 399.90204Q1768.4302 398.66766 1767.3442 397.98016Q1766.2583 397.29266 1764.9146 397.29266Q1763.0083 397.29266 1761.6333 398.60516Q1760.2583 399.91766 1760.2583 402.9958ZM1773.2114 409.58954L1773.2114 399.73016L1774.7114 399.73016L1774.7114 401.23016Q1775.2896 400.1833 1775.7739 399.84735Q1776.2583 399.5114 1776.852 399.5114Q1777.6958 399.5114 1778.5708 400.0583L1777.9927 401.60516Q1777.3833 401.2458 1776.7583 401.2458Q1776.2114 401.2458 1775.7817 401.5739Q1775.352 401.90204 1775.1646 402.48016Q1774.8833 403.3708 1774.8833 404.4333L1774.8833 409.58954L1773.2114 409.58954ZM1779.6646 409.58954L1779.6646 395.9958L1784.7896 395.9958Q1786.1489 395.9958 1786.8677 396.1208Q1787.8677 396.29266 1788.5396 396.7614Q1789.2114 397.23016 1789.6255 398.0739Q1790.0396 398.91766 1790.0396 399.91766Q1790.0396 401.65204 1788.938 402.85516Q1787.8364 404.0583 1784.9458 404.0583L1781.4614 404.0583L1781.4614 409.58954L1779.6646 409.58954ZM1781.4614 402.4489L1784.977 402.4489Q1786.727 402.4489 1787.4536 401.80048Q1788.1802 401.15204 1788.1802 399.98016Q1788.1802 399.1208 1787.7505 398.5114Q1787.3208 397.90204 1786.6177 397.71454Q1786.1646 397.58954 1784.9458 397.58954L1781.4614 397.58954L1781.4614 402.4489ZM1791.8677 409.58954L1791.8677 399.73016L1793.3677 399.73016L1793.3677 401.23016Q1793.9458 400.1833 1794.4302 399.84735Q1794.9146 399.5114 1795.5083 399.5114Q1796.352 399.5114 1797.227 400.0583L1796.6489 401.60516Q1796.0396 401.2458 1795.4146 401.2458Q1794.8677 401.2458 1794.438 401.5739Q1794.0083 401.90204 1793.8208 402.48016Q1793.5396 403.3708 1793.5396 404.4333L1793.5396 409.58954L1791.8677 409.58954ZM1797.477 404.66766Q1797.477 401.9333 1799.0083 400.60516Q1800.2739 399.5114 1802.102 399.5114Q1804.1333 399.5114 1805.4224 400.84735Q1806.7114 402.1833 1806.7114 404.52704Q1806.7114 406.4333 1806.1411 407.51923Q1805.5708 408.60516 1804.4849 409.20673Q1803.3989 409.8083 1802.102 409.8083Q1800.0396 409.8083 1798.7583 408.48016Q1797.477 407.15204 1797.477 404.66766ZM1799.1958 404.66766Q1799.1958 406.5583 1800.0239 407.4958Q1800.852 408.4333 1802.102 408.4333Q1803.352 408.4333 1804.1724 407.48798Q1804.9927 406.54266 1804.9927 404.60516Q1804.9927 402.77704 1804.1646 401.83954Q1803.3364 400.90204 1802.102 400.90204Q1800.852 400.90204 1800.0239 401.83954Q1799.1958 402.77704 1799.1958 404.66766ZM1808.477 413.3708L1808.477 399.73016L1810.0083 399.73016L1810.0083 401.0114Q1810.5396 400.2614 1811.2192 399.8864Q1811.8989 399.5114 1812.852 399.5114Q1814.1177 399.5114 1815.0864 400.15985Q1816.0552 400.8083 1816.5474 401.9958Q1817.0396 403.1833 1817.0396 404.58954Q1817.0396 406.10516 1816.4927 407.3161Q1815.9458 408.52704 1814.9146 409.16766Q1813.8833 409.8083 1812.7427 409.8083Q1811.8989 409.8083 1811.2349 409.45673Q1810.5708 409.10516 1810.1489 408.5739L1810.1489 413.3708L1808.477 413.3708ZM1809.9927 404.71454Q1809.9927 406.6208 1810.7661 407.52704Q1811.5396 408.4333 1812.6333 408.4333Q1813.7427 408.4333 1814.5317 407.4958Q1815.3208 406.5583 1815.3208 404.5739Q1815.3208 402.6989 1814.5474 401.7614Q1813.7739 400.8239 1812.6958 400.8239Q1811.6333 400.8239 1810.813 401.8239Q1809.9927 402.8239 1809.9927 404.71454ZM1822.5239 409.58954L1822.5239 397.58954L1818.0552 397.58954L1818.0552 395.9958L1828.8208 395.9958L1828.8208 397.58954L1824.3208 397.58954L1824.3208 409.58954L1822.5239 409.58954ZM1830.1646 413.3864L1829.9927 411.8239Q1830.5396 411.96454 1830.9458 411.96454Q1831.4927 411.96454 1831.8286 411.77704Q1832.1646 411.58954 1832.3833 411.2614Q1832.5396 411.0114 1832.8833 410.0114Q1832.9302 409.8708 1833.0396 409.60516L1829.3052 399.73016L1831.102 399.73016L1833.1489 405.4489Q1833.5552 406.52704 1833.8677 407.73016Q1834.1489 406.5739 1834.5552 405.48016L1836.6489 399.73016L1838.3208 399.73016L1834.5708 409.7614Q1833.977 411.3864 1833.6333 411.9958Q1833.1958 412.8239 1832.6177 413.20673Q1832.0396 413.58954 1831.2427 413.58954Q1830.7583 413.58954 1830.1646 413.3864ZM1839.5708 413.3708L1839.5708 399.73016L1841.102 399.73016L1841.102 401.0114Q1841.6333 400.2614 1842.313 399.8864Q1842.9927 399.5114 1843.9458 399.5114Q1845.2114 399.5114 1846.1802 400.15985Q1847.1489 400.8083 1847.6411 401.9958Q1848.1333 403.1833 1848.1333 404.58954Q1848.1333 406.10516 1847.5864 407.3161Q1847.0396 408.52704 1846.0083 409.16766Q1844.977 409.8083 1843.8364 409.8083Q1842.9927 409.8083 1842.3286 409.45673Q1841.6646 409.10516 1841.2427 408.5739L1841.2427 413.3708L1839.5708 413.3708ZM1841.0864 404.71454Q1841.0864 406.6208 1841.8599 407.52704Q1842.6333 408.4333 1843.727 408.4333Q1844.8364 408.4333 1845.6255 407.4958Q1846.4146 406.5583 1846.4146 404.5739Q1846.4146 402.6989 1845.6411 401.7614Q1844.8677 400.8239 1843.7896 400.8239Q1842.727 400.8239 1841.9067 401.8239Q1841.0864 402.8239 1841.0864 404.71454ZM1856.7114 406.41766L1858.4302 406.6364Q1858.0239 408.1364 1856.9224 408.97235Q1855.8208 409.8083 1854.102 409.8083Q1851.9458 409.8083 1850.6802 408.48016Q1849.4146 407.15204 1849.4146 404.7458Q1849.4146 402.2614 1850.688 400.8864Q1851.9614 399.5114 1854.0083 399.5114Q1855.9927 399.5114 1857.2427 400.85516Q1858.4927 402.1989 1858.4927 404.65204Q1858.4927 404.79266 1858.477 405.08954L1851.1333 405.08954Q1851.227 406.71454 1852.0552 407.5739Q1852.8833 408.4333 1854.1177 408.4333Q1855.0239 408.4333 1855.6724 407.95673Q1856.3208 407.48016 1856.7114 406.41766ZM1851.227 403.71454L1856.727 403.71454Q1856.6177 402.48016 1856.102 401.85516Q1855.3052 400.8864 1854.0239 400.8864Q1852.8833 400.8864 1852.0942 401.65985Q1851.3052 402.4333 1851.227 403.71454Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M1928.0552 375.90204L2112.0747 375.90204L2112.0747 430.30624L1928.0552 430.30624Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1946.4458 409.58954L1946.4458 395.9958L1955.6177 395.9958L1955.6177 397.58954L1948.2427 397.58954L1948.2427 401.8083L1954.6177 401.8083L1954.6177 403.41766L1948.2427 403.41766L1948.2427 409.58954L1946.4458 409.58954ZM1957.5552 397.90204L1957.5552 395.9958L1959.227 395.9958L1959.227 397.90204L1957.5552 397.90204ZM1957.5552 409.58954L1957.5552 399.73016L1959.227 399.73016L1959.227 409.58954L1957.5552 409.58954ZM1968.4302 406.41766L1970.1489 406.6364Q1969.7427 408.1364 1968.6411 408.97235Q1967.5396 409.8083 1965.8208 409.8083Q1963.6646 409.8083 1962.3989 408.48016Q1961.1333 407.15204 1961.1333 404.7458Q1961.1333 402.2614 1962.4067 400.8864Q1963.6802 399.5114 1965.727 399.5114Q1967.7114 399.5114 1968.9614 400.85516Q1970.2114 402.1989 1970.2114 404.65204Q1970.2114 404.79266 1970.1958 405.08954L1962.852 405.08954Q1962.9458 406.71454 1963.7739 407.5739Q1964.602 408.4333 1965.8364 408.4333Q1966.7427 408.4333 1967.3911 407.95673Q1968.0396 407.48016 1968.4302 406.41766ZM1962.9458 403.71454L1968.4458 403.71454Q1968.3364 402.48016 1967.8208 401.85516Q1967.0239 400.8864 1965.7427 400.8864Q1964.602 400.8864 1963.813 401.65985Q1963.0239 402.4333 1962.9458 403.71454ZM1972.0239 409.58954L1972.0239 395.9958L1973.6958 395.9958L1973.6958 409.58954L1972.0239 409.58954ZM1982.5864 409.58954L1982.5864 408.33954Q1981.6489 409.8083 1979.8364 409.8083Q1978.6646 409.8083 1977.6724 409.15985Q1976.6802 408.5114 1976.1411 407.34735Q1975.602 406.1833 1975.602 404.66766Q1975.602 403.1989 1976.0942 401.9958Q1976.5864 400.79266 1977.563 400.15204Q1978.5396 399.5114 1979.7583 399.5114Q1980.6489 399.5114 1981.3442 399.8864Q1982.0396 400.2614 1982.477 400.8708L1982.477 395.9958L1984.1333 395.9958L1984.1333 409.58954L1982.5864 409.58954ZM1977.3052 404.66766Q1977.3052 406.5583 1978.1099 407.4958Q1978.9146 408.4333 1979.9927 408.4333Q1981.0864 408.4333 1981.852 407.54266Q1982.6177 406.65204 1982.6177 404.8083Q1982.6177 402.79266 1981.8364 401.84735Q1981.0552 400.90204 1979.9146 400.90204Q1978.8052 400.90204 1978.0552 401.8083Q1977.3052 402.71454 1977.3052 404.66766ZM1986.2427 402.96454Q1986.2427 399.5739 1988.063 397.65985Q1989.8833 395.7458 1992.7583 395.7458Q1994.6333 395.7458 1996.1489 396.64423Q1997.6646 397.54266 1998.4536 399.15204Q1999.2427 400.7614 1999.2427 402.8083Q1999.2427 404.8708 1998.4067 406.5036Q1997.5708 408.1364 1996.0396 408.98016Q1994.5083 409.8239 1992.7427 409.8239Q1990.8208 409.8239 1989.313 408.89423Q1987.8052 407.96454 1987.0239 406.36298Q1986.2427 404.7614 1986.2427 402.96454ZM1988.102 402.9958Q1988.102 405.4489 1989.4224 406.86298Q1990.7427 408.27704 1992.727 408.27704Q1994.7583 408.27704 1996.0708 406.84735Q1997.3833 405.41766 1997.3833 402.79266Q1997.3833 401.1364 1996.8286 399.90204Q1996.2739 398.66766 1995.188 397.98016Q1994.102 397.29266 1992.7583 397.29266Q1990.852 397.29266 1989.477 398.60516Q1988.102 399.91766 1988.102 402.9958ZM2001.0708 409.58954L2001.0708 399.73016L2002.5708 399.73016L2002.5708 401.23016Q2003.1489 400.1833 2003.6333 399.84735Q2004.1177 399.5114 2004.7114 399.5114Q2005.5552 399.5114 2006.4302 400.0583L2005.852 401.60516Q2005.2427 401.2458 2004.6177 401.2458Q2004.0708 401.2458 2003.6411 401.5739Q2003.2114 401.90204 2003.0239 402.48016Q2002.7427 403.3708 2002.7427 404.4333L2002.7427 409.58954L2001.0708 409.58954ZM2007.5239 409.58954L2007.5239 395.9958L2012.6489 395.9958Q2014.0083 395.9958 2014.727 396.1208Q2015.727 396.29266 2016.3989 396.7614Q2017.0708 397.23016 2017.4849 398.0739Q2017.8989 398.91766 2017.8989 399.91766Q2017.8989 401.65204 2016.7974 402.85516Q2015.6958 404.0583 2012.8052 404.0583L2009.3208 404.0583L2009.3208 409.58954L2007.5239 409.58954ZM2009.3208 402.4489L2012.8364 402.4489Q2014.5864 402.4489 2015.313 401.80048Q2016.0396 401.15204 2016.0396 399.98016Q2016.0396 399.1208 2015.6099 398.5114Q2015.1802 397.90204 2014.477 397.71454Q2014.0239 397.58954 2012.8052 397.58954L2009.3208 397.58954L2009.3208 402.4489ZM2019.727 409.58954L2019.727 399.73016L2021.227 399.73016L2021.227 401.23016Q2021.8052 400.1833 2022.2896 399.84735Q2022.7739 399.5114 2023.3677 399.5114Q2024.2114 399.5114 2025.0864 400.0583L2024.5083 401.60516Q2023.8989 401.2458 2023.2739 401.2458Q2022.727 401.2458 2022.2974 401.5739Q2021.8677 401.90204 2021.6802 402.48016Q2021.3989 403.3708 2021.3989 404.4333L2021.3989 409.58954L2019.727 409.58954ZM2025.3364 404.66766Q2025.3364 401.9333 2026.8677 400.60516Q2028.1333 399.5114 2029.9614 399.5114Q2031.9927 399.5114 2033.2817 400.84735Q2034.5708 402.1833 2034.5708 404.52704Q2034.5708 406.4333 2034.0005 407.51923Q2033.4302 408.60516 2032.3442 409.20673Q2031.2583 409.8083 2029.9614 409.8083Q2027.8989 409.8083 2026.6177 408.48016Q2025.3364 407.15204 2025.3364 404.66766ZM2027.0552 404.66766Q2027.0552 406.5583 2027.8833 407.4958Q2028.7114 408.4333 2029.9614 408.4333Q2031.2114 408.4333 2032.0317 407.48798Q2032.852 406.54266 2032.852 404.60516Q2032.852 402.77704 2032.0239 401.83954Q2031.1958 400.90204 2029.9614 400.90204Q2028.7114 400.90204 2027.8833 401.83954Q2027.0552 402.77704 2027.0552 404.66766ZM2036.3364 413.3708L2036.3364 399.73016L2037.8677 399.73016L2037.8677 401.0114Q2038.3989 400.2614 2039.0786 399.8864Q2039.7583 399.5114 2040.7114 399.5114Q2041.977 399.5114 2042.9458 400.15985Q2043.9146 400.8083 2044.4067 401.9958Q2044.8989 403.1833 2044.8989 404.58954Q2044.8989 406.10516 2044.352 407.3161Q2043.8052 408.52704 2042.7739 409.16766Q2041.7427 409.8083 2040.602 409.8083Q2039.7583 409.8083 2039.0942 409.45673Q2038.4302 409.10516 2038.0083 408.5739L2038.0083 413.3708L2036.3364 413.3708ZM2037.852 404.71454Q2037.852 406.6208 2038.6255 407.52704Q2039.3989 408.4333 2040.4927 408.4333Q2041.602 408.4333 2042.3911 407.4958Q2043.1802 406.5583 2043.1802 404.5739Q2043.1802 402.6989 2042.4067 401.7614Q2041.6333 400.8239 2040.5552 400.8239Q2039.4927 400.8239 2038.6724 401.8239Q2037.852 402.8239 2037.852 404.71454ZM2046.9146 409.58954L2046.9146 395.9958L2048.7583 395.9958L2055.899 406.66766L2055.899 395.9958L2057.6177 395.9958L2057.6177 409.58954L2055.774 409.58954L2048.6333 398.90204L2048.6333 409.58954L2046.9146 409.58954ZM2066.6177 408.3708Q2065.6802 409.16766 2064.8208 409.48798Q2063.9614 409.8083 2062.977 409.8083Q2061.3677 409.8083 2060.4927 409.01923Q2059.6177 408.23016 2059.6177 406.9958Q2059.6177 406.2614 2059.9458 405.66766Q2060.274 405.0739 2060.8052 404.71454Q2061.3364 404.35516 2062.0083 404.16766Q2062.5083 404.02704 2063.4927 403.91766Q2065.524 403.66766 2066.477 403.33954Q2066.477 402.9958 2066.477 402.90204Q2066.477 401.8864 2066.0083 401.46454Q2065.3677 400.90204 2064.102 400.90204Q2062.9302 400.90204 2062.3677 401.3083Q2061.8052 401.71454 2061.5396 402.77704L2059.899 402.54266Q2060.1333 401.4958 2060.641 400.85516Q2061.149 400.21454 2062.1099 399.86298Q2063.0708 399.5114 2064.352 399.5114Q2065.6177 399.5114 2066.399 399.8083Q2067.1802 400.10516 2067.5552 400.5583Q2067.9302 401.0114 2068.0708 401.6989Q2068.1646 402.1208 2068.1646 403.23016L2068.1646 405.46454Q2068.1646 407.79266 2068.266 408.40985Q2068.3677 409.02704 2068.6958 409.58954L2066.9458 409.58954Q2066.6802 409.0739 2066.6177 408.3708ZM2066.477 404.65204Q2065.5708 405.0114 2063.7427 405.27704Q2062.7114 405.41766 2062.2896 405.60516Q2061.8677 405.79266 2061.6333 406.15204Q2061.399 406.5114 2061.399 406.9489Q2061.399 407.6208 2061.9067 408.0661Q2062.4146 408.5114 2063.3833 408.5114Q2064.352 408.5114 2065.102 408.08173Q2065.852 407.65204 2066.2114 406.9333Q2066.477 406.35516 2066.477 405.2614L2066.477 404.65204ZM2070.5552 409.58954L2070.5552 399.73016L2072.0552 399.73016L2072.0552 401.1208Q2072.5083 400.40204 2073.2817 399.95673Q2074.0552 399.5114 2075.0396 399.5114Q2076.1333 399.5114 2076.8364 399.96454Q2077.5396 400.41766 2077.8208 401.2458Q2078.9927 399.5114 2080.8677 399.5114Q2082.3364 399.5114 2083.1255 400.3239Q2083.9146 401.1364 2083.9146 402.8239L2083.9146 409.58954L2082.2427 409.58954L2082.2427 403.3864Q2082.2427 402.3864 2082.0864 401.9411Q2081.9302 401.4958 2081.5005 401.23016Q2081.0708 400.96454 2080.4927 400.96454Q2079.4614 400.96454 2078.774 401.65204Q2078.0864 402.33954 2078.0864 403.8708L2078.0864 409.58954L2076.4146 409.58954L2076.4146 403.1833Q2076.4146 402.0739 2076.0083 401.51923Q2075.602 400.96454 2074.6646 400.96454Q2073.9614 400.96454 2073.3599 401.33173Q2072.7583 401.6989 2072.4927 402.41766Q2072.227 403.1364 2072.227 404.48016L2072.227 409.58954L2070.5552 409.58954ZM2092.852 406.41766L2094.5708 406.6364Q2094.1646 408.1364 2093.063 408.97235Q2091.9614 409.8083 2090.2427 409.8083Q2088.0864 409.8083 2086.8208 408.48016Q2085.5552 407.15204 2085.5552 404.7458Q2085.5552 402.2614 2086.8286 400.8864Q2088.102 399.5114 2090.149 399.5114Q2092.1333 399.5114 2093.3833 400.85516Q2094.6333 402.1989 2094.6333 404.65204Q2094.6333 404.79266 2094.6177 405.08954L2087.274 405.08954Q2087.3677 406.71454 2088.1958 407.5739Q2089.024 408.4333 2090.2583 408.4333Q2091.1646 408.4333 2091.813 407.95673Q2092.4614 407.48016 2092.852 406.41766ZM2087.3677 403.71454L2092.8677 403.71454Q2092.7583 402.48016 2092.2427 401.85516Q2091.4458 400.8864 2090.1646 400.8864Q2089.024 400.8864 2088.2349 401.65985Q2087.4458 402.4333 2087.3677 403.71454Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M2192.0 79.42961L2920.0 79.42961L2920.0 735.4296L2192.0 735.4296Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2520.2344 106.02336L2520.2344 92.42961L2529.4062 92.42961L2529.4062 94.02336L2522.0312 94.02336L2522.0312 98.24211L2528.4062 98.24211L2528.4062 99.85149L2522.0312 99.85149L2522.0312 106.02336L2520.2344 106.02336ZM2531.3281 94.33586L2531.3281 92.42961L2533.0 92.42961L2533.0 94.33586L2531.3281 94.33586ZM2531.3281 106.02336L2531.3281 96.16399L2533.0 96.16399L2533.0 106.02336L2531.3281 106.02336ZM2534.3438 106.02336L2537.9375 100.89836L2534.6094 96.16399L2536.7031 96.16399L2538.2188 98.47649Q2538.6406 99.13274 2538.8906 99.58586Q2539.3125 98.97649 2539.6562 98.49211L2541.3125 96.16399L2543.2969 96.16399L2539.9062 100.80461L2543.5625 106.02336L2541.5156 106.02336L2539.4844 102.96086L2538.9531 102.13274L2536.3594 106.02336L2534.3438 106.02336ZM2551.5312 102.85149L2553.25 103.07024Q2552.8438 104.57024 2551.7422 105.40617Q2550.6406 106.24211 2548.9219 106.24211Q2546.7656 106.24211 2545.5 104.91399Q2544.2344 103.58586 2544.2344 101.17961Q2544.2344 98.69524 2545.5078 97.32024Q2546.7812 95.94524 2548.8281 95.94524Q2550.8125 95.94524 2552.0625 97.28899Q2553.3125 98.63274 2553.3125 101.08586Q2553.3125 101.22649 2553.2969 101.52336L2545.9531 101.52336Q2546.0469 103.14836 2546.875 104.00774Q2547.7031 104.86711 2548.9375 104.86711Q2549.8438 104.86711 2550.4922 104.39055Q2551.1406 103.91399 2551.5312 102.85149ZM2546.0469 100.14836L2551.5469 100.14836Q2551.4375 98.91399 2550.9219 98.28899Q2550.125 97.32024 2548.8438 97.32024Q2547.7031 97.32024 2546.914 98.09367Q2546.125 98.86711 2546.0469 100.14836ZM2561.5469 106.02336L2561.5469 104.77336Q2560.6094 106.24211 2558.7969 106.24211Q2557.625 106.24211 2556.6328 105.59367Q2555.6406 104.94524 2555.1016 103.78117Q2554.5625 102.61711 2554.5625 101.10149Q2554.5625 99.63274 2555.0547 98.42961Q2555.5469 97.22649 2556.5234 96.58586Q2557.5 95.94524 2558.7188 95.94524Q2559.6094 95.94524 2560.3047 96.32024Q2561.0 96.69524 2561.4375 97.30461L2561.4375 92.42961L2563.0938 92.42961L2563.0938 106.02336L2561.5469 106.02336ZM2556.2656 101.10149Q2556.2656 102.99211 2557.0703 103.92961Q2557.875 104.86711 2558.9531 104.86711Q2560.0469 104.86711 2560.8125 103.97649Q2561.5781 103.08586 2561.5781 101.24211Q2561.5781 99.22649 2560.7969 98.28117Q2560.0156 97.33586 2558.875 97.33586Q2557.7656 97.33586 2557.0156 98.24211Q2556.2656 99.14836 2556.2656 101.10149ZM2564.25 106.02336L2569.4844 92.42961L2571.4219 92.42961L2576.9844 106.02336L2574.9375 106.02336L2573.3438 101.89836L2567.6562 101.89836L2566.1719 106.02336L2564.25 106.02336ZM2568.1719 100.44524L2572.7812 100.44524L2571.375 96.66399Q2570.7188 94.96086 2570.4062 93.85149Q2570.1406 95.16399 2569.6719 96.44524L2568.1719 100.44524ZM2577.9688 106.02336L2577.9688 96.16399L2579.4688 96.16399L2579.4688 97.66399Q2580.0469 96.61711 2580.5312 96.28117Q2581.0156 95.94524 2581.6094 95.94524Q2582.4531 95.94524 2583.3281 96.49211L2582.75 98.03899Q2582.1406 97.67961 2581.5156 97.67961Q2580.9688 97.67961 2580.539 98.00774Q2580.1094 98.33586 2579.9219 98.91399Q2579.6406 99.80461 2579.6406 100.86711L2579.6406 106.02336L2577.9688 106.02336ZM2583.8906 106.83586L2585.5 107.08586Q2585.6094 107.83586 2586.0781 108.17961Q2586.6875 108.63274 2587.7656 108.63274Q2588.9375 108.63274 2589.5625 108.1718Q2590.1875 107.71086 2590.4219 106.88274Q2590.5469 106.36711 2590.5312 104.72649Q2589.4375 106.02336 2587.8125 106.02336Q2585.7812 106.02336 2584.664 104.55461Q2583.5469 103.08586 2583.5469 101.03899Q2583.5469 99.63274 2584.0625 98.43742Q2584.5781 97.24211 2585.5469 96.59367Q2586.5156 95.94524 2587.8125 95.94524Q2589.5625 95.94524 2590.6875 97.35149L2590.6875 96.16399L2592.2344 96.16399L2592.2344 104.67961Q2592.2344 106.99211 2591.7656 107.95305Q2591.2969 108.91399 2590.2812 109.46867Q2589.2656 110.02336 2587.7812 110.02336Q2586.0156 110.02336 2584.9297 109.22649Q2583.8438 108.42961 2583.8906 106.83586ZM2585.2656 100.91399Q2585.2656 102.86711 2586.039 103.75774Q2586.8125 104.64836 2587.9688 104.64836Q2589.1094 104.64836 2589.8906 103.75774Q2590.6719 102.86711 2590.6719 100.97649Q2590.6719 99.16399 2589.8672 98.24992Q2589.0625 97.33586 2587.9375 97.33586Q2586.8281 97.33586 2586.0469 98.2343Q2585.2656 99.13274 2585.2656 100.91399Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M2279.6062 511.8994L2391.632 511.8994L2391.632 566.30365L2279.6062 566.30365Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2296.1218 545.5869L2296.1218 531.99316L2297.9656 531.99316L2305.1062 542.66504L2305.1062 531.99316L2306.825 531.99316L2306.825 545.5869L2304.9812 545.5869L2297.8406 534.8994L2297.8406 545.5869L2296.1218 545.5869ZM2315.8406 545.5869L2315.8406 544.1338Q2314.7 545.80566 2312.7156 545.80566Q2311.8562 545.80566 2311.0984 545.4697Q2310.3406 545.1338 2309.9734 544.6338Q2309.6062 544.1338 2309.45 543.3994Q2309.3562 542.8994 2309.3562 541.8369L2309.3562 535.72754L2311.028 535.72754L2311.028 541.1963Q2311.028 542.5088 2311.1218 542.9619Q2311.278 543.61816 2311.7937 543.99316Q2312.3093 544.36816 2313.0593 544.36816Q2313.8093 544.36816 2314.4656 543.98535Q2315.1218 543.60254 2315.3953 542.9385Q2315.6687 542.2744 2315.6687 541.0088L2315.6687 535.72754L2317.3406 535.72754L2317.3406 545.5869L2315.8406 545.5869ZM2319.7625 545.5869L2319.7625 535.72754L2321.2625 535.72754L2321.2625 537.11816Q2321.7156 536.3994 2322.489 535.9541Q2323.2625 535.5088 2324.2468 535.5088Q2325.3406 535.5088 2326.0437 535.9619Q2326.7468 536.41504 2327.028 537.24316Q2328.2 535.5088 2330.075 535.5088Q2331.5437 535.5088 2332.3328 536.3213Q2333.1218 537.1338 2333.1218 538.8213L2333.1218 545.5869L2331.45 545.5869L2331.45 539.3838Q2331.45 538.3838 2331.2937 537.9385Q2331.1375 537.49316 2330.7078 537.22754Q2330.278 536.9619 2329.7 536.9619Q2328.6687 536.9619 2327.9812 537.6494Q2327.2937 538.3369 2327.2937 539.86816L2327.2937 545.5869L2325.6218 545.5869L2325.6218 539.18066Q2325.6218 538.0713 2325.2156 537.5166Q2324.8093 536.9619 2323.8718 536.9619Q2323.1687 536.9619 2322.5671 537.3291Q2321.9656 537.6963 2321.7 538.41504Q2321.4343 539.1338 2321.4343 540.47754L2321.4343 545.5869L2319.7625 545.5869ZM2335.5593 545.5869L2335.5593 531.99316L2345.403 531.99316L2345.403 533.5869L2337.3562 533.5869L2337.3562 537.7588L2344.8875 537.7588L2344.8875 539.35254L2337.3562 539.35254L2337.3562 543.97754L2345.7156 543.97754L2345.7156 545.5869L2335.5593 545.5869ZM2347.7156 545.5869L2347.7156 531.99316L2349.3875 531.99316L2349.3875 545.5869L2347.7156 545.5869ZM2358.6375 542.41504L2360.3562 542.6338Q2359.95 544.1338 2358.8484 544.9697Q2357.7468 545.80566 2356.028 545.80566Q2353.8718 545.80566 2352.6062 544.47754Q2351.3406 543.1494 2351.3406 540.74316Q2351.3406 538.2588 2352.614 536.8838Q2353.8875 535.5088 2355.9343 535.5088Q2357.9187 535.5088 2359.1687 536.85254Q2360.4187 538.1963 2360.4187 540.6494Q2360.4187 540.79004 2360.403 541.0869L2353.0593 541.0869Q2353.153 542.7119 2353.9812 543.5713Q2354.8093 544.43066 2356.0437 544.43066Q2356.95 544.43066 2357.5984 543.9541Q2358.2468 543.47754 2358.6375 542.41504ZM2353.153 539.7119L2358.653 539.7119Q2358.5437 538.47754 2358.028 537.85254Q2357.2312 536.8838 2355.95 536.8838Q2354.8093 536.8838 2354.0203 537.6572Q2353.2312 538.43066 2353.153 539.7119ZM2362.2625 545.5869L2362.2625 535.72754L2363.7625 535.72754L2363.7625 537.11816Q2364.2156 536.3994 2364.989 535.9541Q2365.7625 535.5088 2366.7468 535.5088Q2367.8406 535.5088 2368.5437 535.9619Q2369.2468 536.41504 2369.528 537.24316Q2370.7 535.5088 2372.575 535.5088Q2374.0437 535.5088 2374.8328 536.3213Q2375.6218 537.1338 2375.6218 538.8213L2375.6218 545.5869L2373.95 545.5869L2373.95 539.3838Q2373.95 538.3838 2373.7937 537.9385Q2373.6375 537.49316 2373.2078 537.22754Q2372.778 536.9619 2372.2 536.9619Q2371.1687 536.9619 2370.4812 537.6494Q2369.7937 538.3369 2369.7937 539.86816L2369.7937 545.5869L2368.1218 545.5869L2368.1218 539.18066Q2368.1218 538.0713 2367.7156 537.5166Q2367.3093 536.9619 2366.3718 536.9619Q2365.6687 536.9619 2365.0671 537.3291Q2364.4656 537.6963 2364.2 538.41504Q2363.9343 539.1338 2363.9343 540.47754L2363.9343 545.5869L2362.2625 545.5869Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M2272.0 119.42961L2680.0 119.42961L2680.0 375.42963L2272.0 375.42963Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2456.2344 146.02336L2456.2344 132.42961L2466.0781 132.42961L2466.0781 134.02336L2458.0312 134.02336L2458.0312 138.19524L2465.5625 138.19524L2465.5625 139.78899L2458.0312 139.78899L2458.0312 144.41399L2466.3906 144.41399L2466.3906 146.02336L2456.2344 146.02336ZM2468.4062 146.02336L2468.4062 132.42961L2470.0781 132.42961L2470.0781 146.02336L2468.4062 146.02336ZM2479.3281 142.85149L2481.0469 143.07024Q2480.6406 144.57024 2479.539 145.40617Q2478.4375 146.24211 2476.7188 146.24211Q2474.5625 146.24211 2473.2969 144.91399Q2472.0312 143.58586 2472.0312 141.17961Q2472.0312 138.69524 2473.3047 137.32024Q2474.5781 135.94524 2476.625 135.94524Q2478.6094 135.94524 2479.8594 137.28899Q2481.1094 138.63274 2481.1094 141.08586Q2481.1094 141.22649 2481.0938 141.52336L2473.75 141.52336Q2473.8438 143.14836 2474.6719 144.00774Q2475.5 144.86711 2476.7344 144.86711Q2477.6406 144.86711 2478.289 144.39055Q2478.9375 143.91399 2479.3281 142.85149ZM2473.8438 140.14836L2479.3438 140.14836Q2479.2344 138.91399 2478.7188 138.28899Q2477.9219 137.32024 2476.6406 137.32024Q2475.5 137.32024 2474.711 138.09367Q2473.9219 138.86711 2473.8438 140.14836ZM2482.9531 146.02336L2482.9531 136.16399L2484.4531 136.16399L2484.4531 137.55461Q2484.9062 136.83586 2485.6797 136.39055Q2486.4531 135.94524 2487.4375 135.94524Q2488.5312 135.94524 2489.2344 136.39836Q2489.9375 136.85149 2490.2188 137.67961Q2491.3906 135.94524 2493.2656 135.94524Q2494.7344 135.94524 2495.5234 136.75774Q2496.3125 137.57024 2496.3125 139.25774L2496.3125 146.02336L2494.6406 146.02336L2494.6406 139.82024Q2494.6406 138.82024 2494.4844 138.37492Q2494.3281 137.92961 2493.8984 137.66399Q2493.4688 137.39836 2492.8906 137.39836Q2491.8594 137.39836 2491.1719 138.08586Q2490.4844 138.77336 2490.4844 140.30461L2490.4844 146.02336L2488.8125 146.02336L2488.8125 139.61711Q2488.8125 138.50774 2488.4062 137.95305Q2488.0 137.39836 2487.0625 137.39836Q2486.3594 137.39836 2485.7578 137.76555Q2485.1562 138.13274 2484.8906 138.85149Q2484.625 139.57024 2484.625 140.91399L2484.625 146.02336L2482.9531 146.02336Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M2319.6062 157.89943L2487.632 157.89943L2487.632 212.30363L2319.6062 212.30363Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2395.4812 191.58693L2390.2 177.99318L2392.153 177.99318L2395.6843 187.86818Q2396.1218 189.05568 2396.403 190.08693Q2396.7156 188.97755 2397.1375 187.86818L2400.8093 177.99318L2402.653 177.99318L2397.325 191.58693L2395.4812 191.58693ZM2410.2625 190.36818Q2409.325 191.16505 2408.4656 191.48537Q2407.6062 191.80568 2406.6218 191.80568Q2405.0125 191.80568 2404.1375 191.01662Q2403.2625 190.22755 2403.2625 188.99318Q2403.2625 188.2588 2403.5906 187.66505Q2403.9187 187.0713 2404.45 186.71193Q2404.9812 186.35255 2405.653 186.16505Q2406.153 186.02443 2407.1375 185.91505Q2409.1687 185.66505 2410.1218 185.33693Q2410.1218 184.99318 2410.1218 184.89943Q2410.1218 183.8838 2409.653 183.46193Q2409.0125 182.89943 2407.7468 182.89943Q2406.575 182.89943 2406.0125 183.30568Q2405.45 183.71193 2405.1843 184.77443L2403.5437 184.54005Q2403.778 183.49318 2404.286 182.85255Q2404.7937 182.21193 2405.7546 181.86037Q2406.7156 181.5088 2407.9968 181.5088Q2409.2625 181.5088 2410.0437 181.80568Q2410.825 182.10255 2411.2 182.55568Q2411.575 183.0088 2411.7156 183.6963Q2411.8093 184.11818 2411.8093 185.22755L2411.8093 187.46193Q2411.8093 189.79005 2411.911 190.40724Q2412.0125 191.02443 2412.3406 191.58693L2410.5906 191.58693Q2410.325 191.0713 2410.2625 190.36818ZM2410.1218 186.64943Q2409.2156 187.0088 2407.3875 187.27443Q2406.3562 187.41505 2405.9343 187.60255Q2405.5125 187.79005 2405.278 188.14943Q2405.0437 188.5088 2405.0437 188.9463Q2405.0437 189.61818 2405.5515 190.06349Q2406.0593 190.5088 2407.028 190.5088Q2407.9968 190.5088 2408.7468 190.07912Q2409.4968 189.64943 2409.8562 188.93068Q2410.1218 188.35255 2410.1218 187.2588L2410.1218 186.64943ZM2414.1687 191.58693L2414.1687 177.99318L2415.8406 177.99318L2415.8406 191.58693L2414.1687 191.58693Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M2320.2756 227.28394L2488.4053 227.28394L2488.4053 281.68814L2320.2756 281.68814Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2366.307 256.59644L2367.9944 256.4558Q2368.1194 257.47144 2368.557 258.1277Q2368.9944 258.78394 2369.924 259.1902Q2370.8538 259.59644 2372.01 259.59644Q2373.0413 259.59644 2373.8303 259.28394Q2374.6194 258.97144 2375.01 258.4402Q2375.4006 257.90894 2375.4006 257.28394Q2375.4006 256.6433 2375.0256 256.16675Q2374.6506 255.69019 2373.7913 255.36206Q2373.2444 255.14331 2371.3694 254.698Q2369.4944 254.25269 2368.7444 253.84644Q2367.7756 253.33081 2367.299 252.58081Q2366.8225 251.83081 2366.8225 250.89331Q2366.8225 249.86206 2367.4084 248.96362Q2367.9944 248.06519 2369.1116 247.60425Q2370.2288 247.14331 2371.6038 247.14331Q2373.1194 247.14331 2374.2756 247.62769Q2375.432 248.11206 2376.049 249.05737Q2376.6663 250.00269 2376.7131 251.20581L2374.9944 251.33081Q2374.8538 250.04956 2374.049 249.3855Q2373.2444 248.72144 2371.682 248.72144Q2370.057 248.72144 2369.307 249.323Q2368.557 249.92456 2368.557 250.76831Q2368.557 251.50269 2369.0881 251.97144Q2369.6038 252.44019 2371.799 252.94019Q2373.9944 253.44019 2374.807 253.81519Q2375.9944 254.36206 2376.5647 255.198Q2377.135 256.03394 2377.135 257.1277Q2377.135 258.22144 2376.51 259.18237Q2375.885 260.1433 2374.721 260.67456Q2373.557 261.2058 2372.1038 261.2058Q2370.26 261.2058 2369.01 260.66675Q2367.76 260.1277 2367.049 259.04956Q2366.3381 257.97144 2366.307 256.59644ZM2385.885 257.79956L2387.6038 258.0183Q2387.1975 259.5183 2386.096 260.35425Q2384.9944 261.1902 2383.2756 261.1902Q2381.1194 261.1902 2379.8538 259.86206Q2378.5881 258.53394 2378.5881 256.1277Q2378.5881 253.64331 2379.8616 252.26831Q2381.135 250.89331 2383.182 250.89331Q2385.1663 250.89331 2386.4163 252.23706Q2387.6663 253.58081 2387.6663 256.03394Q2387.6663 256.17456 2387.6506 256.47144L2380.307 256.47144Q2380.4006 258.09644 2381.2288 258.9558Q2382.057 259.8152 2383.2913 259.8152Q2384.1975 259.8152 2384.846 259.33862Q2385.4944 258.86206 2385.885 257.79956ZM2380.4006 255.09644L2385.9006 255.09644Q2385.7913 253.86206 2385.2756 253.23706Q2384.4788 252.26831 2383.1975 252.26831Q2382.057 252.26831 2381.2678 253.04175Q2380.4788 253.81519 2380.4006 255.09644ZM2389.51 260.97144L2389.51 251.11206L2391.01 251.11206L2391.01 252.61206Q2391.5881 251.56519 2392.0725 251.22925Q2392.557 250.89331 2393.1506 250.89331Q2393.9944 250.89331 2394.8694 251.44019L2394.2913 252.98706Q2393.682 252.62769 2393.057 252.62769Q2392.51 252.62769 2392.0803 252.95581Q2391.6506 253.28394 2391.4631 253.86206Q2391.182 254.75269 2391.182 255.81519L2391.182 260.97144L2389.51 260.97144ZM2395.3381 256.59644L2397.0256 256.4558Q2397.1506 257.47144 2397.5881 258.1277Q2398.0256 258.78394 2398.9553 259.1902Q2399.885 259.59644 2401.0413 259.59644Q2402.0725 259.59644 2402.8616 259.28394Q2403.6506 258.97144 2404.0413 258.4402Q2404.432 257.90894 2404.432 257.28394Q2404.432 256.6433 2404.057 256.16675Q2403.682 255.69019 2402.8225 255.36206Q2402.2756 255.14331 2400.4006 254.698Q2398.5256 254.25269 2397.7756 253.84644Q2396.807 253.33081 2396.3303 252.58081Q2395.8538 251.83081 2395.8538 250.89331Q2395.8538 249.86206 2396.4397 248.96362Q2397.0256 248.06519 2398.1428 247.60425Q2399.26 247.14331 2400.635 247.14331Q2402.1506 247.14331 2403.307 247.62769Q2404.4631 248.11206 2405.0803 249.05737Q2405.6975 250.00269 2405.7444 251.20581L2404.0256 251.33081Q2403.885 250.04956 2403.0803 249.3855Q2402.2756 248.72144 2400.7131 248.72144Q2399.0881 248.72144 2398.3381 249.323Q2397.5881 249.92456 2397.5881 250.76831Q2397.5881 251.50269 2398.1194 251.97144Q2398.635 252.44019 2400.8303 252.94019Q2403.0256 253.44019 2403.8381 253.81519Q2405.0256 254.36206 2405.596 255.198Q2406.1663 256.03394 2406.1663 257.1277Q2406.1663 258.22144 2405.5413 259.18237Q2404.9163 260.1433 2403.7522 260.67456Q2402.5881 261.2058 2401.135 261.2058Q2399.2913 261.2058 2398.0413 260.66675Q2396.7913 260.1277 2396.0803 259.04956Q2395.3694 257.97144 2395.3381 256.59644ZM2411.8381 259.47144L2412.0725 260.9558Q2411.3694 261.09644 2410.807 261.09644Q2409.9006 261.09644 2409.4006 260.80737Q2408.9006 260.5183 2408.6975 260.05737Q2408.4944 259.59644 2408.4944 258.0808L2408.4944 252.42456L2407.26 252.42456L2407.26 251.11206L2408.4944 251.11206L2408.4944 248.67456L2410.1506 247.67456L2410.1506 251.11206L2411.8381 251.11206L2411.8381 252.42456L2410.1506 252.42456L2410.1506 258.17456Q2410.1506 258.8933 2410.2366 259.09644Q2410.3225 259.29956 2410.5256 259.42456Q2410.7288 259.54956 2411.1038 259.54956Q2411.3694 259.54956 2411.8381 259.47144ZM2413.3381 260.97144L2413.3381 251.11206L2414.8381 251.11206L2414.8381 252.61206Q2415.4163 251.56519 2415.9006 251.22925Q2416.385 250.89331 2416.9788 250.89331Q2417.8225 250.89331 2418.6975 251.44019L2418.1194 252.98706Q2417.51 252.62769 2416.885 252.62769Q2416.3381 252.62769 2415.9084 252.95581Q2415.4788 253.28394 2415.2913 253.86206Q2415.01 254.75269 2415.01 255.81519L2415.01 260.97144L2413.3381 260.97144ZM2419.5881 249.28394L2419.5881 247.37769L2421.26 247.37769L2421.26 249.28394L2419.5881 249.28394ZM2419.5881 260.97144L2419.5881 251.11206L2421.26 251.11206L2421.26 260.97144L2419.5881 260.97144ZM2423.7131 260.97144L2423.7131 251.11206L2425.2131 251.11206L2425.2131 252.51831Q2426.307 250.89331 2428.3538 250.89331Q2429.2444 250.89331 2429.9944 251.21362Q2430.7444 251.53394 2431.1116 252.05737Q2431.4788 252.58081 2431.635 253.28394Q2431.7288 253.75269 2431.7288 254.90894L2431.7288 260.97144L2430.057 260.97144L2430.057 254.97144Q2430.057 253.95581 2429.8616 253.448Q2429.6663 252.94019 2429.1663 252.64331Q2428.6663 252.34644 2427.9944 252.34644Q2426.932 252.34644 2426.1584 253.01831Q2425.385 253.69019 2425.385 255.59644L2425.385 260.97144L2423.7131 260.97144ZM2433.7913 261.78394L2435.4006 262.03394Q2435.51 262.78394 2435.9788 263.1277Q2436.5881 263.5808 2437.6663 263.5808Q2438.8381 263.5808 2439.4631 263.11987Q2440.0881 262.65894 2440.3225 261.8308Q2440.4475 261.3152 2440.432 259.67456Q2439.3381 260.97144 2437.7131 260.97144Q2435.682 260.97144 2434.5647 259.5027Q2433.4475 258.03394 2433.4475 255.98706Q2433.4475 254.58081 2433.9631 253.3855Q2434.4788 252.19019 2435.4475 251.54175Q2436.4163 250.89331 2437.7131 250.89331Q2439.4631 250.89331 2440.5881 252.29956L2440.5881 251.11206L2442.135 251.11206L2442.135 259.6277Q2442.135 261.9402 2441.6663 262.90112Q2441.1975 263.86206 2440.182 264.41675Q2439.1663 264.97144 2437.682 264.97144Q2435.9163 264.97144 2434.8303 264.17456Q2433.7444 263.3777 2433.7913 261.78394ZM2435.1663 255.86206Q2435.1663 257.8152 2435.9397 258.7058Q2436.7131 259.59644 2437.8694 259.59644Q2439.01 259.59644 2439.7913 258.7058Q2440.5725 257.8152 2440.5725 255.92456Q2440.5725 254.11206 2439.7678 253.198Q2438.9631 252.28394 2437.8381 252.28394Q2436.7288 252.28394 2435.9475 253.18237Q2435.1663 254.08081 2435.1663 255.86206Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M2320.0552 298.90204L2488.0747 298.90204L2488.0747 353.30624L2320.0552 353.30624Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2334.602 332.58954L2334.602 318.9958L2343.774 318.9958L2343.774 320.58954L2336.399 320.58954L2336.399 324.8083L2342.774 324.8083L2342.774 326.41766L2336.399 326.41766L2336.399 332.58954L2334.602 332.58954ZM2345.6958 320.90204L2345.6958 318.9958L2347.3677 318.9958L2347.3677 320.90204L2345.6958 320.90204ZM2345.6958 332.58954L2345.6958 322.73016L2347.3677 322.73016L2347.3677 332.58954L2345.6958 332.58954ZM2356.5708 329.41766L2358.2896 329.6364Q2357.8833 331.1364 2356.7817 331.97235Q2355.6802 332.8083 2353.9614 332.8083Q2351.8052 332.8083 2350.5396 331.48016Q2349.274 330.15204 2349.274 327.7458Q2349.274 325.2614 2350.5474 323.8864Q2351.8208 322.5114 2353.8677 322.5114Q2355.852 322.5114 2357.102 323.85516Q2358.352 325.1989 2358.352 327.65204Q2358.352 327.79266 2358.3364 328.08954L2350.9927 328.08954Q2351.0864 329.71454 2351.9146 330.5739Q2352.7427 331.4333 2353.977 331.4333Q2354.8833 331.4333 2355.5317 330.95673Q2356.1802 330.48016 2356.5708 329.41766ZM2351.0864 326.71454L2356.5864 326.71454Q2356.477 325.48016 2355.9614 324.85516Q2355.1646 323.8864 2353.8833 323.8864Q2352.7427 323.8864 2351.9536 324.65985Q2351.1646 325.4333 2351.0864 326.71454ZM2360.1646 332.58954L2360.1646 318.9958L2361.8364 318.9958L2361.8364 332.58954L2360.1646 332.58954ZM2370.7427 332.58954L2370.7427 331.33954Q2369.8052 332.8083 2367.9927 332.8083Q2366.8208 332.8083 2365.8286 332.15985Q2364.8364 331.5114 2364.2974 330.34735Q2363.7583 329.1833 2363.7583 327.66766Q2363.7583 326.1989 2364.2505 324.9958Q2364.7427 323.79266 2365.7192 323.15204Q2366.6958 322.5114 2367.9146 322.5114Q2368.8052 322.5114 2369.5005 322.8864Q2370.1958 323.2614 2370.6333 323.8708L2370.6333 318.9958L2372.2896 318.9958L2372.2896 332.58954L2370.7427 332.58954ZM2365.4614 327.66766Q2365.4614 329.5583 2366.266 330.4958Q2367.0708 331.4333 2368.149 331.4333Q2369.2427 331.4333 2370.0083 330.54266Q2370.774 329.65204 2370.774 327.8083Q2370.774 325.79266 2369.9927 324.84735Q2369.2114 323.90204 2368.0708 323.90204Q2366.9614 323.90204 2366.2114 324.8083Q2365.4614 325.71454 2365.4614 327.66766ZM2374.399 325.96454Q2374.399 322.5739 2376.2192 320.65985Q2378.0396 318.7458 2380.9146 318.7458Q2382.7896 318.7458 2384.3052 319.64423Q2385.8208 320.54266 2386.6099 322.15204Q2387.399 323.7614 2387.399 325.8083Q2387.399 327.8708 2386.563 329.5036Q2385.727 331.1364 2384.1958 331.98016Q2382.6646 332.8239 2380.899 332.8239Q2378.977 332.8239 2377.4692 331.89423Q2375.9614 330.96454 2375.1802 329.36298Q2374.399 327.7614 2374.399 325.96454ZM2376.2583 325.9958Q2376.2583 328.4489 2377.5786 329.86298Q2378.899 331.27704 2380.8833 331.27704Q2382.9146 331.27704 2384.227 329.84735Q2385.5396 328.41766 2385.5396 325.79266Q2385.5396 324.1364 2384.9849 322.90204Q2384.4302 321.66766 2383.3442 320.98016Q2382.2583 320.29266 2380.9146 320.29266Q2379.0083 320.29266 2377.6333 321.60516Q2376.2583 322.91766 2376.2583 325.9958ZM2389.2114 332.58954L2389.2114 322.73016L2390.7114 322.73016L2390.7114 324.23016Q2391.2896 323.1833 2391.774 322.84735Q2392.2583 322.5114 2392.852 322.5114Q2393.6958 322.5114 2394.5708 323.0583L2393.9927 324.60516Q2393.3833 324.2458 2392.7583 324.2458Q2392.2114 324.2458 2391.7817 324.5739Q2391.352 324.90204 2391.1646 325.48016Q2390.8833 326.3708 2390.8833 327.4333L2390.8833 332.58954L2389.2114 332.58954ZM2395.6646 332.58954L2395.6646 318.9958L2400.7896 318.9958Q2402.149 318.9958 2402.8677 319.1208Q2403.8677 319.29266 2404.5396 319.7614Q2405.2114 320.23016 2405.6255 321.0739Q2406.0396 321.91766 2406.0396 322.91766Q2406.0396 324.65204 2404.938 325.85516Q2403.8364 327.0583 2400.9458 327.0583L2397.4614 327.0583L2397.4614 332.58954L2395.6646 332.58954ZM2397.4614 325.4489L2400.977 325.4489Q2402.727 325.4489 2403.4536 324.80048Q2404.1802 324.15204 2404.1802 322.98016Q2404.1802 322.1208 2403.7505 321.5114Q2403.3208 320.90204 2402.6177 320.71454Q2402.1646 320.58954 2400.9458 320.58954L2397.4614 320.58954L2397.4614 325.4489ZM2407.8677 332.58954L2407.8677 322.73016L2409.3677 322.73016L2409.3677 324.23016Q2409.9458 323.1833 2410.4302 322.84735Q2410.9146 322.5114 2411.5083 322.5114Q2412.352 322.5114 2413.227 323.0583L2412.649 324.60516Q2412.0396 324.2458 2411.4146 324.2458Q2410.8677 324.2458 2410.438 324.5739Q2410.0083 324.90204 2409.8208 325.48016Q2409.5396 326.3708 2409.5396 327.4333L2409.5396 332.58954L2407.8677 332.58954ZM2413.477 327.66766Q2413.477 324.9333 2415.0083 323.60516Q2416.274 322.5114 2418.102 322.5114Q2420.1333 322.5114 2421.4224 323.84735Q2422.7114 325.1833 2422.7114 327.52704Q2422.7114 329.4333 2422.141 330.51923Q2421.5708 331.60516 2420.4849 332.20673Q2419.399 332.8083 2418.102 332.8083Q2416.0396 332.8083 2414.7583 331.48016Q2413.477 330.15204 2413.477 327.66766ZM2415.1958 327.66766Q2415.1958 329.5583 2416.024 330.4958Q2416.852 331.4333 2418.102 331.4333Q2419.352 331.4333 2420.1724 330.48798Q2420.9927 329.54266 2420.9927 327.60516Q2420.9927 325.77704 2420.1646 324.83954Q2419.3364 323.90204 2418.102 323.90204Q2416.852 323.90204 2416.024 324.83954Q2415.1958 325.77704 2415.1958 327.66766ZM2424.477 336.3708L2424.477 322.73016L2426.0083 322.73016L2426.0083 324.0114Q2426.5396 323.2614 2427.2192 322.8864Q2427.899 322.5114 2428.852 322.5114Q2430.1177 322.5114 2431.0864 323.15985Q2432.0552 323.8083 2432.5474 324.9958Q2433.0396 326.1833 2433.0396 327.58954Q2433.0396 329.10516 2432.4927 330.3161Q2431.9458 331.52704 2430.9146 332.16766Q2429.8833 332.8083 2428.7427 332.8083Q2427.899 332.8083 2427.2349 332.45673Q2426.5708 332.10516 2426.149 331.5739L2426.149 336.3708L2424.477 336.3708ZM2425.9927 327.71454Q2425.9927 329.6208 2426.766 330.52704Q2427.5396 331.4333 2428.6333 331.4333Q2429.7427 331.4333 2430.5317 330.4958Q2431.3208 329.5583 2431.3208 327.5739Q2431.3208 325.6989 2430.5474 324.7614Q2429.774 323.8239 2428.6958 323.8239Q2427.6333 323.8239 2426.813 324.8239Q2425.9927 325.8239 2425.9927 327.71454ZM2438.524 332.58954L2438.524 320.58954L2434.0552 320.58954L2434.0552 318.9958L2444.8208 318.9958L2444.8208 320.58954L2440.3208 320.58954L2440.3208 332.58954L2438.524 332.58954ZM2446.1646 336.3864L2445.9927 334.8239Q2446.5396 334.96454 2446.9458 334.96454Q2447.4927 334.96454 2447.8286 334.77704Q2448.1646 334.58954 2448.3833 334.2614Q2448.5396 334.0114 2448.8833 333.0114Q2448.9302 332.8708 2449.0396 332.60516L2445.3052 322.73016L2447.102 322.73016L2449.149 328.4489Q2449.5552 329.52704 2449.8677 330.73016Q2450.149 329.5739 2450.5552 328.48016L2452.649 322.73016L2454.3208 322.73016L2450.5708 332.7614Q2449.977 334.3864 2449.6333 334.9958Q2449.1958 335.8239 2448.6177 336.20673Q2448.0396 336.58954 2447.2427 336.58954Q2446.7583 336.58954 2446.1646 336.3864ZM2455.5708 336.3708L2455.5708 322.73016L2457.102 322.73016L2457.102 324.0114Q2457.6333 323.2614 2458.313 322.8864Q2458.9927 322.5114 2459.9458 322.5114Q2461.2114 322.5114 2462.1802 323.15985Q2463.149 323.8083 2463.641 324.9958Q2464.1333 326.1833 2464.1333 327.58954Q2464.1333 329.10516 2463.5864 330.3161Q2463.0396 331.52704 2462.0083 332.16766Q2460.977 332.8083 2459.8364 332.8083Q2458.9927 332.8083 2458.3286 332.45673Q2457.6646 332.10516 2457.2427 331.5739L2457.2427 336.3708L2455.5708 336.3708ZM2457.0864 327.71454Q2457.0864 329.6208 2457.8599 330.52704Q2458.6333 331.4333 2459.727 331.4333Q2460.8364 331.4333 2461.6255 330.4958Q2462.4146 329.5583 2462.4146 327.5739Q2462.4146 325.6989 2461.641 324.7614Q2460.8677 323.8239 2459.7896 323.8239Q2458.727 323.8239 2457.9067 324.8239Q2457.0864 325.8239 2457.0864 327.71454ZM2472.7114 329.41766L2474.4302 329.6364Q2474.024 331.1364 2472.9224 331.97235Q2471.8208 332.8083 2470.102 332.8083Q2467.9458 332.8083 2466.6802 331.48016Q2465.4146 330.15204 2465.4146 327.7458Q2465.4146 325.2614 2466.688 323.8864Q2467.9614 322.5114 2470.0083 322.5114Q2471.9927 322.5114 2473.2427 323.85516Q2474.4927 325.1989 2474.4927 327.65204Q2474.4927 327.79266 2474.477 328.08954L2467.1333 328.08954Q2467.227 329.71454 2468.0552 330.5739Q2468.8833 331.4333 2470.1177 331.4333Q2471.024 331.4333 2471.6724 330.95673Q2472.3208 330.48016 2472.7114 329.41766ZM2467.227 326.71454L2472.727 326.71454Q2472.6177 325.48016 2472.102 324.85516Q2471.3052 323.8864 2470.024 323.8864Q2468.8833 323.8864 2468.0942 324.65985Q2467.3052 325.4333 2467.227 326.71454Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M2543.6062 303.8994L2655.632 303.8994L2655.632 351.30362L2543.6062 351.30362Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2591.4812 334.0869L2586.2 320.49316L2588.153 320.49316L2591.6843 330.36816Q2592.1218 331.55566 2592.403 332.5869Q2592.7156 331.47754 2593.1375 330.36816L2596.8093 320.49316L2598.653 320.49316L2593.325 334.0869L2591.4812 334.0869ZM2606.2625 332.86816Q2605.325 333.66504 2604.4656 333.98535Q2603.6062 334.30566 2602.6218 334.30566Q2601.0125 334.30566 2600.1375 333.5166Q2599.2625 332.72754 2599.2625 331.49316Q2599.2625 330.7588 2599.5906 330.16504Q2599.9187 329.5713 2600.45 329.2119Q2600.9812 328.85254 2601.653 328.66504Q2602.153 328.5244 2603.1375 328.41504Q2605.1687 328.16504 2606.1218 327.8369Q2606.1218 327.49316 2606.1218 327.3994Q2606.1218 326.3838 2605.653 325.9619Q2605.0125 325.3994 2603.7468 325.3994Q2602.575 325.3994 2602.0125 325.80566Q2601.45 326.2119 2601.1843 327.2744L2599.5437 327.04004Q2599.778 325.99316 2600.286 325.35254Q2600.7937 324.7119 2601.7546 324.36035Q2602.7156 324.0088 2603.9968 324.0088Q2605.2625 324.0088 2606.0437 324.30566Q2606.825 324.60254 2607.2 325.05566Q2607.575 325.5088 2607.7156 326.1963Q2607.8093 326.61816 2607.8093 327.72754L2607.8093 329.9619Q2607.8093 332.29004 2607.911 332.90723Q2608.0125 333.5244 2608.3406 334.0869L2606.5906 334.0869Q2606.325 333.5713 2606.2625 332.86816ZM2606.1218 329.1494Q2605.2156 329.5088 2603.3875 329.7744Q2602.3562 329.91504 2601.9343 330.10254Q2601.5125 330.29004 2601.278 330.6494Q2601.0437 331.0088 2601.0437 331.4463Q2601.0437 332.11816 2601.5515 332.56348Q2602.0593 333.0088 2603.028 333.0088Q2603.9968 333.0088 2604.7468 332.5791Q2605.4968 332.1494 2605.8562 331.43066Q2606.1218 330.85254 2606.1218 329.7588L2606.1218 329.1494ZM2610.1687 334.0869L2610.1687 320.49316L2611.8406 320.49316L2611.8406 334.0869L2610.1687 334.0869Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M2272.0 254.93092L2308.0007 255.30888" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2307.966 258.61215L2317.0764 255.40416L2308.0354 252.0056Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M2288.0 255.42961L2288.0 183.42961" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2288.0 183.42961L2308.0 183.42961" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2308.0 186.73308L2317.0762 183.42961L2308.0 180.12614Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M2288.0 255.42961L2288.0 327.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2288.0 327.42963L2308.0 327.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2308.0 330.7331L2317.0762 327.42963L2308.0 324.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M2488.0 327.42963L2532.0 327.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2532.0 330.7331L2541.0762 327.42963L2532.0 324.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M2488.0 255.42961L2668.0 255.42961" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2668.0 258.73306L2677.0762 255.42961L2668.0 252.12614Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M2488.0 183.42961L2600.0 183.42961" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2600.0 303.42963L2600.0 255.42961" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2600.0 183.42961L2600.0 255.42961" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2456.0 407.42963L2864.0 407.42963L2864.0 663.4296L2456.0 663.4296Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2640.2344 434.02338L2640.2344 420.42963L2650.0781 420.42963L2650.0781 422.02338L2642.0312 422.02338L2642.0312 426.19525L2649.5625 426.19525L2649.5625 427.789L2642.0312 427.789L2642.0312 432.414L2650.3906 432.414L2650.3906 434.02338L2640.2344 434.02338ZM2652.4062 434.02338L2652.4062 420.42963L2654.0781 420.42963L2654.0781 434.02338L2652.4062 434.02338ZM2663.3281 430.8515L2665.0469 431.07025Q2664.6406 432.57025 2663.539 433.4062Q2662.4375 434.24213 2660.7188 434.24213Q2658.5625 434.24213 2657.2969 432.914Q2656.0312 431.58588 2656.0312 429.17963Q2656.0312 426.69525 2657.3047 425.32025Q2658.5781 423.94525 2660.625 423.94525Q2662.6094 423.94525 2663.8594 425.289Q2665.1094 426.63275 2665.1094 429.08588Q2665.1094 429.2265 2665.0938 429.52338L2657.75 429.52338Q2657.8438 431.14838 2658.6719 432.00775Q2659.5 432.86713 2660.7344 432.86713Q2661.6406 432.86713 2662.289 432.39056Q2662.9375 431.914 2663.3281 430.8515ZM2657.8438 428.14838L2663.3438 428.14838Q2663.2344 426.914 2662.7188 426.289Q2661.9219 425.32025 2660.6406 425.32025Q2659.5 425.32025 2658.711 426.0937Q2657.9219 426.86713 2657.8438 428.14838ZM2666.9531 434.02338L2666.9531 424.164L2668.4531 424.164L2668.4531 425.55463Q2668.9062 424.83588 2669.6797 424.39056Q2670.4531 423.94525 2671.4375 423.94525Q2672.5312 423.94525 2673.2344 424.39838Q2673.9375 424.8515 2674.2188 425.67963Q2675.3906 423.94525 2677.2656 423.94525Q2678.7344 423.94525 2679.5234 424.75775Q2680.3125 425.57025 2680.3125 427.25775L2680.3125 434.02338L2678.6406 434.02338L2678.6406 427.82025Q2678.6406 426.82025 2678.4844 426.37494Q2678.3281 425.92963 2677.8984 425.664Q2677.4688 425.39838 2676.8906 425.39838Q2675.8594 425.39838 2675.1719 426.08588Q2674.4844 426.77338 2674.4844 428.30463L2674.4844 434.02338L2672.8125 434.02338L2672.8125 427.61713Q2672.8125 426.50775 2672.4062 425.95306Q2672.0 425.39838 2671.0625 425.39838Q2670.3594 425.39838 2669.7578 425.76556Q2669.1562 426.13275 2668.8906 426.8515Q2668.625 427.57025 2668.625 428.914L2668.625 434.02338L2666.9531 434.02338Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M2503.6062 445.8994L2671.632 445.8994L2671.632 500.30362L2503.6062 500.30362Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2579.4812 479.5869L2574.2 465.99316L2576.153 465.99316L2579.6843 475.86816Q2580.1218 477.05566 2580.403 478.0869Q2580.7156 476.97754 2581.1375 475.86816L2584.8093 465.99316L2586.653 465.99316L2581.325 479.5869L2579.4812 479.5869ZM2594.2625 478.36816Q2593.325 479.16504 2592.4656 479.48535Q2591.6062 479.80566 2590.6218 479.80566Q2589.0125 479.80566 2588.1375 479.0166Q2587.2625 478.22754 2587.2625 476.99316Q2587.2625 476.2588 2587.5906 475.66504Q2587.9187 475.0713 2588.45 474.7119Q2588.9812 474.35254 2589.653 474.16504Q2590.153 474.0244 2591.1375 473.91504Q2593.1687 473.66504 2594.1218 473.3369Q2594.1218 472.99316 2594.1218 472.8994Q2594.1218 471.8838 2593.653 471.4619Q2593.0125 470.8994 2591.7468 470.8994Q2590.575 470.8994 2590.0125 471.30566Q2589.45 471.7119 2589.1843 472.7744L2587.5437 472.54004Q2587.778 471.49316 2588.286 470.85254Q2588.7937 470.2119 2589.7546 469.86035Q2590.7156 469.5088 2591.9968 469.5088Q2593.2625 469.5088 2594.0437 469.80566Q2594.825 470.10254 2595.2 470.55566Q2595.575 471.0088 2595.7156 471.6963Q2595.8093 472.11816 2595.8093 473.22754L2595.8093 475.4619Q2595.8093 477.79004 2595.911 478.40723Q2596.0125 479.0244 2596.3406 479.5869L2594.5906 479.5869Q2594.325 479.0713 2594.2625 478.36816ZM2594.1218 474.6494Q2593.2156 475.0088 2591.3875 475.2744Q2590.3562 475.41504 2589.9343 475.60254Q2589.5125 475.79004 2589.278 476.1494Q2589.0437 476.5088 2589.0437 476.9463Q2589.0437 477.61816 2589.5515 478.06348Q2590.0593 478.5088 2591.028 478.5088Q2591.9968 478.5088 2592.7468 478.0791Q2593.4968 477.6494 2593.8562 476.93066Q2594.1218 476.35254 2594.1218 475.2588L2594.1218 474.6494ZM2598.1687 479.5869L2598.1687 465.99316L2599.8406 465.99316L2599.8406 479.5869L2598.1687 479.5869Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M2504.2756 515.28394L2672.4053 515.28394L2672.4053 569.6882L2504.2756 569.6882Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2550.307 544.59644L2551.9944 544.4558Q2552.1194 545.47144 2552.557 546.1277Q2552.9944 546.78394 2553.924 547.1902Q2554.8538 547.59644 2556.01 547.59644Q2557.0413 547.59644 2557.8303 547.28394Q2558.6194 546.97144 2559.01 546.4402Q2559.4006 545.90894 2559.4006 545.28394Q2559.4006 544.6433 2559.0256 544.16675Q2558.6506 543.6902 2557.7913 543.36206Q2557.2444 543.1433 2555.3694 542.698Q2553.4944 542.2527 2552.7444 541.84644Q2551.7756 541.3308 2551.299 540.5808Q2550.8225 539.8308 2550.8225 538.8933Q2550.8225 537.86206 2551.4084 536.9636Q2551.9944 536.0652 2553.1116 535.60425Q2554.2288 535.1433 2555.6038 535.1433Q2557.1194 535.1433 2558.2756 535.6277Q2559.432 536.11206 2560.049 537.0574Q2560.6663 538.0027 2560.7131 539.2058L2558.9944 539.3308Q2558.8538 538.04956 2558.049 537.3855Q2557.2444 536.72144 2555.682 536.72144Q2554.057 536.72144 2553.307 537.323Q2552.557 537.92456 2552.557 538.7683Q2552.557 539.5027 2553.0881 539.97144Q2553.6038 540.4402 2555.799 540.9402Q2557.9944 541.4402 2558.807 541.8152Q2559.9944 542.36206 2560.5647 543.198Q2561.135 544.03394 2561.135 545.1277Q2561.135 546.22144 2560.51 547.1824Q2559.885 548.1433 2558.721 548.67456Q2557.557 549.2058 2556.1038 549.2058Q2554.26 549.2058 2553.01 548.66675Q2551.76 548.1277 2551.049 547.04956Q2550.3381 545.97144 2550.307 544.59644ZM2569.885 545.79956L2571.6038 546.0183Q2571.1975 547.5183 2570.096 548.35425Q2568.9944 549.1902 2567.2756 549.1902Q2565.1194 549.1902 2563.8538 547.86206Q2562.5881 546.53394 2562.5881 544.1277Q2562.5881 541.6433 2563.8616 540.2683Q2565.135 538.8933 2567.182 538.8933Q2569.1663 538.8933 2570.4163 540.23706Q2571.6663 541.5808 2571.6663 544.03394Q2571.6663 544.17456 2571.6506 544.47144L2564.307 544.47144Q2564.4006 546.09644 2565.2288 546.9558Q2566.057 547.8152 2567.2913 547.8152Q2568.1975 547.8152 2568.846 547.3386Q2569.4944 546.86206 2569.885 545.79956ZM2564.4006 543.09644L2569.9006 543.09644Q2569.7913 541.86206 2569.2756 541.23706Q2568.4788 540.2683 2567.1975 540.2683Q2566.057 540.2683 2565.2678 541.04175Q2564.4788 541.8152 2564.4006 543.09644ZM2573.51 548.97144L2573.51 539.11206L2575.01 539.11206L2575.01 540.61206Q2575.5881 539.5652 2576.0725 539.22925Q2576.557 538.8933 2577.1506 538.8933Q2577.9944 538.8933 2578.8694 539.4402L2578.2913 540.98706Q2577.682 540.6277 2577.057 540.6277Q2576.51 540.6277 2576.0803 540.9558Q2575.6506 541.28394 2575.4631 541.86206Q2575.182 542.7527 2575.182 543.8152L2575.182 548.97144L2573.51 548.97144ZM2579.3381 544.59644L2581.0256 544.4558Q2581.1506 545.47144 2581.5881 546.1277Q2582.0256 546.78394 2582.9553 547.1902Q2583.885 547.59644 2585.0413 547.59644Q2586.0725 547.59644 2586.8616 547.28394Q2587.6506 546.97144 2588.0413 546.4402Q2588.432 545.90894 2588.432 545.28394Q2588.432 544.6433 2588.057 544.16675Q2587.682 543.6902 2586.8225 543.36206Q2586.2756 543.1433 2584.4006 542.698Q2582.5256 542.2527 2581.7756 541.84644Q2580.807 541.3308 2580.3303 540.5808Q2579.8538 539.8308 2579.8538 538.8933Q2579.8538 537.86206 2580.4397 536.9636Q2581.0256 536.0652 2582.1428 535.60425Q2583.26 535.1433 2584.635 535.1433Q2586.1506 535.1433 2587.307 535.6277Q2588.4631 536.11206 2589.0803 537.0574Q2589.6975 538.0027 2589.7444 539.2058L2588.0256 539.3308Q2587.885 538.04956 2587.0803 537.3855Q2586.2756 536.72144 2584.7131 536.72144Q2583.0881 536.72144 2582.3381 537.323Q2581.5881 537.92456 2581.5881 538.7683Q2581.5881 539.5027 2582.1194 539.97144Q2582.635 540.4402 2584.8303 540.9402Q2587.0256 541.4402 2587.8381 541.8152Q2589.0256 542.36206 2589.596 543.198Q2590.1663 544.03394 2590.1663 545.1277Q2590.1663 546.22144 2589.5413 547.1824Q2588.9163 548.1433 2587.7522 548.67456Q2586.5881 549.2058 2585.135 549.2058Q2583.2913 549.2058 2582.0413 548.66675Q2580.7913 548.1277 2580.0803 547.04956Q2579.3694 545.97144 2579.3381 544.59644ZM2595.8381 547.47144L2596.0725 548.9558Q2595.3694 549.09644 2594.807 549.09644Q2593.9006 549.09644 2593.4006 548.8074Q2592.9006 548.5183 2592.6975 548.0574Q2592.4944 547.59644 2592.4944 546.0808L2592.4944 540.42456L2591.26 540.42456L2591.26 539.11206L2592.4944 539.11206L2592.4944 536.67456L2594.1506 535.67456L2594.1506 539.11206L2595.8381 539.11206L2595.8381 540.42456L2594.1506 540.42456L2594.1506 546.17456Q2594.1506 546.8933 2594.2366 547.09644Q2594.3225 547.29956 2594.5256 547.42456Q2594.7288 547.54956 2595.1038 547.54956Q2595.3694 547.54956 2595.8381 547.47144ZM2597.3381 548.97144L2597.3381 539.11206L2598.8381 539.11206L2598.8381 540.61206Q2599.4163 539.5652 2599.9006 539.22925Q2600.385 538.8933 2600.9788 538.8933Q2601.8225 538.8933 2602.6975 539.4402L2602.1194 540.98706Q2601.51 540.6277 2600.885 540.6277Q2600.3381 540.6277 2599.9084 540.9558Q2599.4788 541.28394 2599.2913 541.86206Q2599.01 542.7527 2599.01 543.8152L2599.01 548.97144L2597.3381 548.97144ZM2603.5881 537.28394L2603.5881 535.3777L2605.26 535.3777L2605.26 537.28394L2603.5881 537.28394ZM2603.5881 548.97144L2603.5881 539.11206L2605.26 539.11206L2605.26 548.97144L2603.5881 548.97144ZM2607.7131 548.97144L2607.7131 539.11206L2609.2131 539.11206L2609.2131 540.5183Q2610.307 538.8933 2612.3538 538.8933Q2613.2444 538.8933 2613.9944 539.2136Q2614.7444 539.53394 2615.1116 540.0574Q2615.4788 540.5808 2615.635 541.28394Q2615.7288 541.7527 2615.7288 542.90894L2615.7288 548.97144L2614.057 548.97144L2614.057 542.97144Q2614.057 541.9558 2613.8616 541.448Q2613.6663 540.9402 2613.1663 540.6433Q2612.6663 540.34644 2611.9944 540.34644Q2610.932 540.34644 2610.1584 541.0183Q2609.385 541.6902 2609.385 543.59644L2609.385 548.97144L2607.7131 548.97144ZM2617.7913 549.78394L2619.4006 550.03394Q2619.51 550.78394 2619.9788 551.1277Q2620.5881 551.5808 2621.6663 551.5808Q2622.8381 551.5808 2623.4631 551.1199Q2624.0881 550.65894 2624.3225 549.8308Q2624.4475 549.3152 2624.432 547.67456Q2623.3381 548.97144 2621.7131 548.97144Q2619.682 548.97144 2618.5647 547.5027Q2617.4475 546.03394 2617.4475 543.98706Q2617.4475 542.5808 2617.9631 541.3855Q2618.4788 540.1902 2619.4475 539.54175Q2620.4163 538.8933 2621.7131 538.8933Q2623.4631 538.8933 2624.5881 540.29956L2624.5881 539.11206L2626.135 539.11206L2626.135 547.6277Q2626.135 549.9402 2625.6663 550.9011Q2625.1975 551.86206 2624.182 552.41675Q2623.1663 552.97144 2621.682 552.97144Q2619.9163 552.97144 2618.8303 552.17456Q2617.7444 551.3777 2617.7913 549.78394ZM2619.1663 543.86206Q2619.1663 545.8152 2619.9397 546.7058Q2620.7131 547.59644 2621.8694 547.59644Q2623.01 547.59644 2623.7913 546.7058Q2624.5725 545.8152 2624.5725 543.92456Q2624.5725 542.11206 2623.7678 541.198Q2622.9631 540.28394 2621.8381 540.28394Q2620.7288 540.28394 2619.9475 541.1824Q2619.1663 542.0808 2619.1663 543.86206Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M2504.0552 586.90204L2672.0747 586.90204L2672.0747 641.3063L2504.0552 641.3063Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2518.602 620.58954L2518.602 606.9958L2527.774 606.9958L2527.774 608.58954L2520.399 608.58954L2520.399 612.8083L2526.774 612.8083L2526.774 614.41766L2520.399 614.41766L2520.399 620.58954L2518.602 620.58954ZM2529.6958 608.90204L2529.6958 606.9958L2531.3677 606.9958L2531.3677 608.90204L2529.6958 608.90204ZM2529.6958 620.58954L2529.6958 610.73016L2531.3677 610.73016L2531.3677 620.58954L2529.6958 620.58954ZM2540.5708 617.41766L2542.2896 617.6364Q2541.8833 619.1364 2540.7817 619.97235Q2539.6802 620.8083 2537.9614 620.8083Q2535.8052 620.8083 2534.5396 619.48016Q2533.274 618.15204 2533.274 615.7458Q2533.274 613.2614 2534.5474 611.8864Q2535.8208 610.5114 2537.8677 610.5114Q2539.852 610.5114 2541.102 611.85516Q2542.352 613.1989 2542.352 615.65204Q2542.352 615.79266 2542.3364 616.08954L2534.9927 616.08954Q2535.0864 617.71454 2535.9146 618.5739Q2536.7427 619.4333 2537.977 619.4333Q2538.8833 619.4333 2539.5317 618.9567Q2540.1802 618.48016 2540.5708 617.41766ZM2535.0864 614.71454L2540.5864 614.71454Q2540.477 613.48016 2539.9614 612.85516Q2539.1646 611.8864 2537.8833 611.8864Q2536.7427 611.8864 2535.9536 612.65985Q2535.1646 613.4333 2535.0864 614.71454ZM2544.1646 620.58954L2544.1646 606.9958L2545.8364 606.9958L2545.8364 620.58954L2544.1646 620.58954ZM2554.7427 620.58954L2554.7427 619.33954Q2553.8052 620.8083 2551.9927 620.8083Q2550.8208 620.8083 2549.8286 620.15985Q2548.8364 619.5114 2548.2974 618.34735Q2547.7583 617.1833 2547.7583 615.66766Q2547.7583 614.1989 2548.2505 612.9958Q2548.7427 611.79266 2549.7192 611.15204Q2550.6958 610.5114 2551.9146 610.5114Q2552.8052 610.5114 2553.5005 610.8864Q2554.1958 611.2614 2554.6333 611.8708L2554.6333 606.9958L2556.2896 606.9958L2556.2896 620.58954L2554.7427 620.58954ZM2549.4614 615.66766Q2549.4614 617.5583 2550.266 618.4958Q2551.0708 619.4333 2552.149 619.4333Q2553.2427 619.4333 2554.0083 618.54266Q2554.774 617.65204 2554.774 615.8083Q2554.774 613.79266 2553.9927 612.84735Q2553.2114 611.90204 2552.0708 611.90204Q2550.9614 611.90204 2550.2114 612.8083Q2549.4614 613.71454 2549.4614 615.66766ZM2558.399 613.96454Q2558.399 610.5739 2560.2192 608.65985Q2562.0396 606.7458 2564.9146 606.7458Q2566.7896 606.7458 2568.3052 607.6442Q2569.8208 608.54266 2570.6099 610.15204Q2571.399 611.7614 2571.399 613.8083Q2571.399 615.8708 2570.563 617.5036Q2569.727 619.1364 2568.1958 619.98016Q2566.6646 620.8239 2564.899 620.8239Q2562.977 620.8239 2561.4692 619.8942Q2559.9614 618.96454 2559.1802 617.363Q2558.399 615.7614 2558.399 613.96454ZM2560.2583 613.9958Q2560.2583 616.4489 2561.5786 617.863Q2562.899 619.27704 2564.8833 619.27704Q2566.9146 619.27704 2568.227 617.84735Q2569.5396 616.41766 2569.5396 613.79266Q2569.5396 612.1364 2568.9849 610.90204Q2568.4302 609.66766 2567.3442 608.98016Q2566.2583 608.29266 2564.9146 608.29266Q2563.0083 608.29266 2561.6333 609.60516Q2560.2583 610.91766 2560.2583 613.9958ZM2573.2114 620.58954L2573.2114 610.73016L2574.7114 610.73016L2574.7114 612.23016Q2575.2896 611.1833 2575.774 610.84735Q2576.2583 610.5114 2576.852 610.5114Q2577.6958 610.5114 2578.5708 611.0583L2577.9927 612.60516Q2577.3833 612.2458 2576.7583 612.2458Q2576.2114 612.2458 2575.7817 612.5739Q2575.352 612.90204 2575.1646 613.48016Q2574.8833 614.3708 2574.8833 615.4333L2574.8833 620.58954L2573.2114 620.58954ZM2579.6646 620.58954L2579.6646 606.9958L2584.7896 606.9958Q2586.149 606.9958 2586.8677 607.1208Q2587.8677 607.29266 2588.5396 607.7614Q2589.2114 608.23016 2589.6255 609.0739Q2590.0396 609.91766 2590.0396 610.91766Q2590.0396 612.65204 2588.938 613.85516Q2587.8364 615.0583 2584.9458 615.0583L2581.4614 615.0583L2581.4614 620.58954L2579.6646 620.58954ZM2581.4614 613.4489L2584.977 613.4489Q2586.727 613.4489 2587.4536 612.8005Q2588.1802 612.15204 2588.1802 610.98016Q2588.1802 610.1208 2587.7505 609.5114Q2587.3208 608.90204 2586.6177 608.71454Q2586.1646 608.58954 2584.9458 608.58954L2581.4614 608.58954L2581.4614 613.4489ZM2591.8677 620.58954L2591.8677 610.73016L2593.3677 610.73016L2593.3677 612.23016Q2593.9458 611.1833 2594.4302 610.84735Q2594.9146 610.5114 2595.5083 610.5114Q2596.352 610.5114 2597.227 611.0583L2596.649 612.60516Q2596.0396 612.2458 2595.4146 612.2458Q2594.8677 612.2458 2594.438 612.5739Q2594.0083 612.90204 2593.8208 613.48016Q2593.5396 614.3708 2593.5396 615.4333L2593.5396 620.58954L2591.8677 620.58954ZM2597.477 615.66766Q2597.477 612.9333 2599.0083 611.60516Q2600.274 610.5114 2602.102 610.5114Q2604.1333 610.5114 2605.4224 611.84735Q2606.7114 613.1833 2606.7114 615.52704Q2606.7114 617.4333 2606.141 618.5192Q2605.5708 619.60516 2604.4849 620.2067Q2603.399 620.8083 2602.102 620.8083Q2600.0396 620.8083 2598.7583 619.48016Q2597.477 618.15204 2597.477 615.66766ZM2599.1958 615.66766Q2599.1958 617.5583 2600.024 618.4958Q2600.852 619.4333 2602.102 619.4333Q2603.352 619.4333 2604.1724 618.488Q2604.9927 617.54266 2604.9927 615.60516Q2604.9927 613.77704 2604.1646 612.83954Q2603.3364 611.90204 2602.102 611.90204Q2600.852 611.90204 2600.024 612.83954Q2599.1958 613.77704 2599.1958 615.66766ZM2608.477 624.3708L2608.477 610.73016L2610.0083 610.73016L2610.0083 612.0114Q2610.5396 611.2614 2611.2192 610.8864Q2611.899 610.5114 2612.852 610.5114Q2614.1177 610.5114 2615.0864 611.15985Q2616.0552 611.8083 2616.5474 612.9958Q2617.0396 614.1833 2617.0396 615.58954Q2617.0396 617.10516 2616.4927 618.3161Q2615.9458 619.52704 2614.9146 620.16766Q2613.8833 620.8083 2612.7427 620.8083Q2611.899 620.8083 2611.2349 620.4567Q2610.5708 620.10516 2610.149 619.5739L2610.149 624.3708L2608.477 624.3708ZM2609.9927 615.71454Q2609.9927 617.6208 2610.766 618.52704Q2611.5396 619.4333 2612.6333 619.4333Q2613.7427 619.4333 2614.5317 618.4958Q2615.3208 617.5583 2615.3208 615.5739Q2615.3208 613.6989 2614.5474 612.7614Q2613.774 611.8239 2612.6958 611.8239Q2611.6333 611.8239 2610.813 612.8239Q2609.9927 613.8239 2609.9927 615.71454ZM2622.524 620.58954L2622.524 608.58954L2618.0552 608.58954L2618.0552 606.9958L2628.8208 606.9958L2628.8208 608.58954L2624.3208 608.58954L2624.3208 620.58954L2622.524 620.58954ZM2630.1646 624.3864L2629.9927 622.8239Q2630.5396 622.96454 2630.9458 622.96454Q2631.4927 622.96454 2631.8286 622.77704Q2632.1646 622.58954 2632.3833 622.2614Q2632.5396 622.0114 2632.8833 621.0114Q2632.9302 620.8708 2633.0396 620.60516L2629.3052 610.73016L2631.102 610.73016L2633.149 616.4489Q2633.5552 617.52704 2633.8677 618.73016Q2634.149 617.5739 2634.5552 616.48016L2636.649 610.73016L2638.3208 610.73016L2634.5708 620.7614Q2633.977 622.3864 2633.6333 622.9958Q2633.1958 623.8239 2632.6177 624.2067Q2632.0396 624.58954 2631.2427 624.58954Q2630.7583 624.58954 2630.1646 624.3864ZM2639.5708 624.3708L2639.5708 610.73016L2641.102 610.73016L2641.102 612.0114Q2641.6333 611.2614 2642.313 610.8864Q2642.9927 610.5114 2643.9458 610.5114Q2645.2114 610.5114 2646.1802 611.15985Q2647.149 611.8083 2647.641 612.9958Q2648.1333 614.1833 2648.1333 615.58954Q2648.1333 617.10516 2647.5864 618.3161Q2647.0396 619.52704 2646.0083 620.16766Q2644.977 620.8083 2643.8364 620.8083Q2642.9927 620.8083 2642.3286 620.4567Q2641.6646 620.10516 2641.2427 619.5739L2641.2427 624.3708L2639.5708 624.3708ZM2641.0864 615.71454Q2641.0864 617.6208 2641.8599 618.52704Q2642.6333 619.4333 2643.727 619.4333Q2644.8364 619.4333 2645.6255 618.4958Q2646.4146 617.5583 2646.4146 615.5739Q2646.4146 613.6989 2645.641 612.7614Q2644.8677 611.8239 2643.7896 611.8239Q2642.727 611.8239 2641.9067 612.8239Q2641.0864 613.8239 2641.0864 615.71454ZM2656.7114 617.41766L2658.4302 617.6364Q2658.024 619.1364 2656.9224 619.97235Q2655.8208 620.8083 2654.102 620.8083Q2651.9458 620.8083 2650.6802 619.48016Q2649.4146 618.15204 2649.4146 615.7458Q2649.4146 613.2614 2650.688 611.8864Q2651.9614 610.5114 2654.0083 610.5114Q2655.9927 610.5114 2657.2427 611.85516Q2658.4927 613.1989 2658.4927 615.65204Q2658.4927 615.79266 2658.477 616.08954L2651.1333 616.08954Q2651.227 617.71454 2652.0552 618.5739Q2652.8833 619.4333 2654.1177 619.4333Q2655.024 619.4333 2655.6724 618.9567Q2656.3208 618.48016 2656.7114 617.41766ZM2651.227 614.71454L2656.727 614.71454Q2656.6177 613.48016 2656.102 612.85516Q2655.3052 611.8864 2654.024 611.8864Q2652.8833 611.8864 2652.0942 612.65985Q2651.3052 613.4333 2651.227 614.71454Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M2727.6062 591.8994L2839.632 591.8994L2839.632 639.30365L2727.6062 639.30365Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2775.4812 622.0869L2770.2 608.49316L2772.153 608.49316L2775.6843 618.36816Q2776.1218 619.55566 2776.403 620.5869Q2776.7156 619.47754 2777.1375 618.36816L2780.8093 608.49316L2782.653 608.49316L2777.325 622.0869L2775.4812 622.0869ZM2790.2625 620.86816Q2789.325 621.66504 2788.4656 621.98535Q2787.6062 622.30566 2786.6218 622.30566Q2785.0125 622.30566 2784.1375 621.5166Q2783.2625 620.72754 2783.2625 619.49316Q2783.2625 618.7588 2783.5906 618.16504Q2783.9187 617.5713 2784.45 617.2119Q2784.9812 616.85254 2785.653 616.66504Q2786.153 616.5244 2787.1375 616.41504Q2789.1687 616.16504 2790.1218 615.8369Q2790.1218 615.49316 2790.1218 615.3994Q2790.1218 614.3838 2789.653 613.9619Q2789.0125 613.3994 2787.7468 613.3994Q2786.575 613.3994 2786.0125 613.80566Q2785.45 614.2119 2785.1843 615.2744L2783.5437 615.04004Q2783.778 613.99316 2784.286 613.35254Q2784.7937 612.7119 2785.7546 612.36035Q2786.7156 612.0088 2787.9968 612.0088Q2789.2625 612.0088 2790.0437 612.30566Q2790.825 612.60254 2791.2 613.05566Q2791.575 613.5088 2791.7156 614.1963Q2791.8093 614.61816 2791.8093 615.72754L2791.8093 617.9619Q2791.8093 620.29004 2791.911 620.9072Q2792.0125 621.5244 2792.3406 622.0869L2790.5906 622.0869Q2790.325 621.5713 2790.2625 620.86816ZM2790.1218 617.1494Q2789.2156 617.5088 2787.3875 617.7744Q2786.3562 617.91504 2785.9343 618.10254Q2785.5125 618.29004 2785.278 618.6494Q2785.0437 619.0088 2785.0437 619.4463Q2785.0437 620.11816 2785.5515 620.5635Q2786.0593 621.0088 2787.028 621.0088Q2787.9968 621.0088 2788.7468 620.5791Q2789.4968 620.1494 2789.8562 619.43066Q2790.1218 618.85254 2790.1218 617.7588L2790.1218 617.1494ZM2794.1687 622.0869L2794.1687 608.49316L2795.8406 608.49316L2795.8406 622.0869L2794.1687 622.0869Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M2456.0 542.9309L2492.0007 543.3089" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2491.966 546.6122L2501.0764 543.4042L2492.0354 540.0056Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M2472.0 543.4296L2472.0 471.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2472.0 471.42963L2492.0 471.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2492.0 474.7331L2501.0762 471.42963L2492.0 468.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M2472.0 543.4296L2472.0 615.4296" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2472.0 615.4296L2492.0 615.4296" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2492.0 618.7331L2501.0762 615.4296L2492.0 612.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M2672.0 615.4296L2716.0 615.4296" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2716.0 618.7331L2725.0762 615.4296L2716.0 612.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M2672.0 543.4296L2852.0 543.4296" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2852.0 546.7331L2861.0762 543.4296L2852.0 540.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M2672.0 471.42963L2784.0 471.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2784.0 591.4296L2784.0 543.4296" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2784.0 471.42963L2784.0 543.4296" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2192.0 407.42963L2224.0 407.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2224.0 407.42963L2224.0 255.42961" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2224.0 255.42961L2260.0 255.42961" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2260.0 258.73306L2269.0762 255.42961L2260.0 252.12614Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M2224.0 407.42963L2224.0 543.4296" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2224.0 543.4296L2268.0 543.4296" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2268.0 546.7331L2277.0762 543.4296L2268.0 540.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M2234.4531 477.55463L2236.1406 477.414Q2236.2656 478.42963 2236.7031 479.08588Q2237.1406 479.74213 2238.0703 480.14838Q2239.0 480.55463 2240.1562 480.55463Q2241.1875 480.55463 2241.9766 480.24213Q2242.7656 479.92963 2243.1562 479.39838Q2243.5469 478.86713 2243.5469 478.24213Q2243.5469 477.6015 2243.1719 477.12494Q2242.7969 476.64838 2241.9375 476.32025Q2241.3906 476.1015 2239.5156 475.6562Q2237.6406 475.21088 2236.8906 474.80463Q2235.9219 474.289 2235.4453 473.539Q2234.9688 472.789 2234.9688 471.8515Q2234.9688 470.82025 2235.5547 469.9218Q2236.1406 469.02338 2237.2578 468.56244Q2238.375 468.1015 2239.75 468.1015Q2241.2656 468.1015 2242.4219 468.58588Q2243.5781 469.07025 2244.1953 470.01556Q2244.8125 470.96088 2244.8594 472.164L2243.1406 472.289Q2243.0 471.00775 2242.1953 470.3437Q2241.3906 469.67963 2239.8281 469.67963Q2238.2031 469.67963 2237.4531 470.2812Q2236.7031 470.88275 2236.7031 471.7265Q2236.7031 472.46088 2237.2344 472.92963Q2237.75 473.39838 2239.9453 473.89838Q2242.1406 474.39838 2242.9531 474.77338Q2244.1406 475.32025 2244.711 476.1562Q2245.2812 476.99213 2245.2812 478.08588Q2245.2812 479.17963 2244.6562 480.14056Q2244.0312 481.1015 2242.8672 481.63275Q2241.7031 482.164 2240.25 482.164Q2238.4062 482.164 2237.1562 481.62494Q2235.9062 481.08588 2235.1953 480.00775Q2234.4844 478.92963 2234.4531 477.55463ZM2246.4062 481.92963L2246.4062 480.25775L2253.375 471.55463Q2254.125 470.61713 2254.7969 469.92963L2247.2031 469.92963L2247.2031 468.33588L2256.9375 468.33588L2256.9375 469.92963L2249.3125 479.36713L2248.4844 480.32025L2257.1719 480.32025L2257.1719 481.92963L2246.4062 481.92963ZM2257.4062 481.92963L2262.6406 468.33588L2264.5781 468.33588L2270.1406 481.92963L2268.0938 481.92963L2266.5 477.80463L2260.8125 477.80463L2259.3281 481.92963L2257.4062 481.92963ZM2261.3281 476.3515L2265.9375 476.3515L2264.5312 472.57025Q2263.875 470.86713 2263.5625 469.75775Q2263.2969 471.07025 2262.8281 472.3515L2261.3281 476.3515ZM2271.375 481.92963L2271.375 468.33588L2277.4062 468.33588Q2279.2188 468.33588 2280.164 468.69525Q2281.1094 469.05463 2281.6719 469.9843Q2282.2344 470.914 2282.2344 472.039Q2282.2344 473.49213 2281.3047 474.4843Q2280.375 475.4765 2278.4062 475.74213Q2279.125 476.08588 2279.5 476.414Q2280.2812 477.14838 2280.9844 478.2265L2283.3594 481.92963L2281.0938 481.92963L2279.2969 479.1015Q2278.5 477.88275 2277.9922 477.2265Q2277.4844 476.57025 2277.0781 476.31244Q2276.6719 476.05463 2276.2656 475.96088Q2275.9531 475.88275 2275.25 475.88275L2273.1719 475.88275L2273.1719 481.92963L2271.375 481.92963ZM2273.1719 474.33588L2277.0312 474.33588Q2278.2656 474.33588 2278.961 474.07806Q2279.6562 473.82025 2280.0234 473.25775Q2280.3906 472.69525 2280.3906 472.039Q2280.3906 471.07025 2279.6875 470.45306Q2278.9844 469.83588 2277.4688 469.83588L2273.1719 469.83588L2273.1719 474.33588ZM2284.8438 481.92963L2284.8438 468.33588L2290.875 468.33588Q2292.6875 468.33588 2293.6328 468.69525Q2294.5781 469.05463 2295.1406 469.9843Q2295.7031 470.914 2295.7031 472.039Q2295.7031 473.49213 2294.7734 474.4843Q2293.8438 475.4765 2291.875 475.74213Q2292.5938 476.08588 2292.9688 476.414Q2293.75 477.14838 2294.4531 478.2265L2296.8281 481.92963L2294.5625 481.92963L2292.7656 479.1015Q2291.9688 477.88275 2291.461 477.2265Q2290.9531 476.57025 2290.5469 476.31244Q2290.1406 476.05463 2289.7344 475.96088Q2289.4219 475.88275 2288.7188 475.88275L2286.6406 475.88275L2286.6406 481.92963L2284.8438 481.92963ZM2286.6406 474.33588L2290.5 474.33588Q2291.7344 474.33588 2292.4297 474.07806Q2293.125 473.82025 2293.4922 473.25775Q2293.8594 472.69525 2293.8594 472.039Q2293.8594 471.07025 2293.1562 470.45306Q2292.4531 469.83588 2290.9375 469.83588L2286.6406 469.83588L2286.6406 474.33588ZM2296.7969 481.92963L2302.0312 468.33588L2303.9688 468.33588L2309.5312 481.92963L2307.4844 481.92963L2305.8906 477.80463L2300.2031 477.80463L2298.7188 481.92963L2296.7969 481.92963ZM2300.7188 476.3515L2305.3281 476.3515L2303.9219 472.57025Q2303.2656 470.86713 2302.9531 469.75775Q2302.6875 471.07025 2302.2188 472.3515L2300.7188 476.3515ZM2314.5625 481.92963L2314.5625 476.164L2309.3281 468.33588L2311.5156 468.33588L2314.1875 472.42963Q2314.9375 473.58588 2315.5781 474.7265Q2316.1875 473.664 2317.0625 472.32025L2319.6875 468.33588L2321.7969 468.33588L2316.3594 476.164L2316.3594 481.92963L2314.5625 481.92963Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M2231.125 235.69524L2223.9219 236.19524L2220.9062 236.19524L2220.9062 234.13274L2223.9219 234.13274L2231.125 234.61711L2231.125 235.69524ZM2234.5 236.13274L2232.5938 236.13274L2232.5938 234.21086L2234.5 234.21086L2234.5 236.13274ZM2230.125 231.78899L2229.9844 230.10149Q2231.0 229.97649 2231.6562 229.53899Q2232.3125 229.10149 2232.7188 228.1718Q2233.125 227.24211 2233.125 226.08586Q2233.125 225.05461 2232.8125 224.26555Q2232.5 223.47649 2231.9688 223.08586Q2231.4375 222.69524 2230.8125 222.69524Q2230.1719 222.69524 2229.6953 223.07024Q2229.2188 223.44524 2228.8906 224.30461Q2228.6719 224.85149 2228.2266 226.72649Q2227.7812 228.60149 2227.375 229.35149Q2226.8594 230.32024 2226.1094 230.7968Q2225.3594 231.27336 2224.4219 231.27336Q2223.3906 231.27336 2222.4922 230.68742Q2221.5938 230.10149 2221.1328 228.9843Q2220.6719 227.86711 2220.6719 226.49211Q2220.6719 224.97649 2221.1562 223.82024Q2221.6406 222.66399 2222.586 222.0468Q2223.5312 221.42961 2224.7344 221.38274L2224.8594 223.10149Q2223.5781 223.24211 2222.914 224.0468Q2222.25 224.85149 2222.25 226.41399Q2222.25 228.03899 2222.8516 228.78899Q2223.4531 229.53899 2224.2969 229.53899Q2225.0312 229.53899 2225.5 229.00774Q2225.9688 228.49211 2226.4688 226.2968Q2226.9688 224.10149 2227.3438 223.28899Q2227.8906 222.10149 2228.7266 221.53117Q2229.5625 220.96086 2230.6562 220.96086Q2231.75 220.96086 2232.711 221.58586Q2233.6719 222.21086 2234.2031 223.37492Q2234.7344 224.53899 2234.7344 225.99211Q2234.7344 227.83586 2234.1953 229.08586Q2233.6562 230.33586 2232.5781 231.0468Q2231.5 231.75774 2230.125 231.78899ZM2234.5 219.83586L2232.8281 219.83586L2224.125 212.86711Q2223.1875 212.11711 2222.5 211.44524L2222.5 219.03899L2220.9062 219.03899L2220.9062 209.30461L2222.5 209.30461L2231.9375 216.92961L2232.8906 217.75774L2232.8906 209.07024L2234.5 209.07024L2234.5 219.83586ZM2234.5 208.85149L2220.9062 203.61711L2220.9062 201.67961L2234.5 196.11711L2234.5 198.16399L2230.375 199.75774L2230.375 205.44524L2234.5 206.92961L2234.5 208.85149ZM2228.9219 204.92961L2228.9219 200.32024L2225.1406 201.72649Q2223.4375 202.38274 2222.3281 202.69524Q2223.6406 202.96086 2224.9219 203.42961L2228.9219 204.92961ZM2234.5 194.86711L2220.9062 194.86711L2220.9062 188.83586Q2220.9062 187.02336 2221.2656 186.07805Q2221.625 185.13274 2222.5547 184.57024Q2223.4844 184.00774 2224.6094 184.00774Q2226.0625 184.00774 2227.0547 184.93742Q2228.0469 185.86711 2228.3125 187.83586Q2228.6562 187.11711 2228.9844 186.74211Q2229.7188 185.96086 2230.7969 185.25774L2234.5 182.88274L2234.5 185.14836L2231.6719 186.94524Q2230.4531 187.74211 2229.7969 188.24992Q2229.1406 188.75774 2228.8828 189.16399Q2228.625 189.57024 2228.5312 189.97649Q2228.4531 190.28899 2228.4531 190.99211L2228.4531 193.07024L2234.5 193.07024L2234.5 194.86711ZM2226.9062 193.07024L2226.9062 189.21086Q2226.9062 187.97649 2226.6484 187.28117Q2226.3906 186.58586 2225.8281 186.21867Q2225.2656 185.85149 2224.6094 185.85149Q2223.6406 185.85149 2223.0234 186.55461Q2222.4062 187.25774 2222.4062 188.77336L2222.4062 193.07024L2226.9062 193.07024ZM2234.5 181.39836L2220.9062 181.39836L2220.9062 175.36711Q2220.9062 173.55461 2221.2656 172.6093Q2221.625 171.66399 2222.5547 171.10149Q2223.4844 170.53899 2224.6094 170.53899Q2226.0625 170.53899 2227.0547 171.46867Q2228.0469 172.39836 2228.3125 174.36711Q2228.6562 173.64836 2228.9844 173.27336Q2229.7188 172.49211 2230.7969 171.78899L2234.5 169.41399L2234.5 171.67961L2231.6719 173.47649Q2230.4531 174.27336 2229.7969 174.78117Q2229.1406 175.28899 2228.8828 175.69524Q2228.625 176.10149 2228.5312 176.50774Q2228.4531 176.82024 2228.4531 177.52336L2228.4531 179.60149L2234.5 179.60149L2234.5 181.39836ZM2226.9062 179.60149L2226.9062 175.74211Q2226.9062 174.50774 2226.6484 173.81242Q2226.3906 173.11711 2225.8281 172.74992Q2225.2656 172.38274 2224.6094 172.38274Q2223.6406 172.38274 2223.0234 173.08586Q2222.4062 173.78899 2222.4062 175.30461L2222.4062 179.60149L2226.9062 179.60149ZM2234.5 169.46086L2220.9062 164.22649L2220.9062 162.28899L2234.5 156.72649L2234.5 158.77336L2230.375 160.36711L2230.375 166.05461L2234.5 167.53899L2234.5 169.46086ZM2228.9219 165.53899L2228.9219 160.92961L2225.1406 162.33586Q2223.4375 162.99211 2222.3281 163.30461Q2223.6406 163.57024 2224.9219 164.03899L2228.9219 165.53899ZM2234.5 151.67961L2228.7344 151.67961L2220.9062 156.91399L2220.9062 154.72649L2225.0 152.05461Q2226.1562 151.30461 2227.2969 150.66399Q2226.2344 150.05461 2224.8906 149.17961L2220.9062 146.55461L2220.9062 144.44524L2228.7344 149.88274L2234.5 149.88274L2234.5 151.67961Z" fill-rule="nonzero" fill="#000000"/>
                        <path d="M2392.0 543.4296L2444.0 543.4296" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2444.0 546.7331L2453.0762 543.4296L2444.0 540.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M2864.0 543.4296L2888.0 543.4296" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2888.0 543.4296L2888.0 383.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2680.0 255.42961L2888.0 255.42961" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2888.0 255.42961L2888.0 383.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2888.0 383.42963L2908.0 383.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2908.0 386.7331L2917.0762 383.42963L2908.0 380.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M1384.0 399.42963L1436.0 399.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1436.0 402.7331L1445.0762 399.42963L1436.0 396.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M1448.0 399.42963L1472.0 399.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1472.0 399.42963L1472.0 343.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1472.0 399.42963L1472.0 463.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1472.0 343.42963L1484.0 343.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1484.0 346.7331L1493.0762 343.42963L1484.0 340.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M1472.0 463.42963L1492.0 463.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1492.0 466.7331L1501.0762 463.42963L1492.0 460.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M1672.0 407.42963L1692.0 407.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1692.0 410.7331L1701.0762 407.42963L1692.0 404.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M1672.0 407.42963L1672.0 343.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1672.0 343.42963L1632.0 343.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1640.0 463.42963L1672.0 463.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1672.0 463.42963L1672.0 407.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1872.0 407.42963L1916.0 407.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1916.0 410.7331L1925.0762 407.42963L1916.0 404.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M2112.0 407.42963L2180.0 407.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2180.0 410.7331L2189.0762 407.42963L2180.0 404.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M3143.6404 383.4283L3143.6404 383.4283C3143.6404 372.64352 3152.6653 363.90073 3163.7979 363.90073L3163.7979 363.90073C3169.144 363.90073 3174.2712 365.9581 3178.0513 369.62024C3181.8315 373.28235 3183.9553 378.24927 3183.9553 383.4283L3183.9553 383.4283C3183.9553 394.21307 3174.9307 402.95587 3163.7979 402.95587L3163.7979 402.95587C3152.6653 402.95587 3143.6404 394.21307 3143.6404 383.4283Z" fill-rule="nonzero" fill="#cfe2f3" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2920.0 383.42963L2956.0 383.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2956.0 386.7331L2965.0762 383.42963L2956.0 380.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M2968.0 383.42963L3132.0 383.42963" fill-rule="evenodd" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M3132.0 386.7331L3141.0762 383.42963L3132.0 380.12616Z" fill-rule="evenodd" fill="#073763" stroke="#073763" stroke-width="2.0" stroke-linecap="butt"/>
                        <path d="M1424.0 399.42963L1424.0 -0.57038844" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1424.0 -0.57038844L3000.0 -0.57038844" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M3000.0 -0.57038844L3000.0 383.42963" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M3056.0 383.42963L3056.0 807.4296" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M3056.0 807.4296L1400.0 807.4296" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1400.0 399.42963L1400.0 807.4296" fill-rule="nonzero" stroke="#073763" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1384.0 399.42963L1400.0 399.42963" fill-rule="nonzero" stroke="#073763" stroke-width="3.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1424.0 399.42963L1440.0 399.42963" fill-rule="nonzero" stroke="#073763" stroke-width="3.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2968.0 383.42963L3000.0 383.42963" fill-rule="nonzero" stroke="#073763" stroke-width="3.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M3056.0 383.42963L3136.0 383.42963" fill-rule="nonzero" stroke="#073763" stroke-width="3.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M768.0 271.42963L840.0 271.42963" fill-rule="nonzero" stroke="#073763" stroke-width="4.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M952.0 559.4296L1024.0 559.4296" fill-rule="nonzero" stroke="#073763" stroke-width="4.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M1672.0 407.42963L1696.0 407.42963" fill-rule="nonzero" stroke="#073763" stroke-width="4.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2600.0 255.42961L2672.0 255.42961" fill-rule="nonzero" stroke="#073763" stroke-width="4.0" stroke-linejoin="round" stroke-linecap="butt"/>
                        <path d="M2784.0 543.4296L2856.0 543.4296" fill-rule="nonzero" stroke="#073763" stroke-width="4.0" stroke-linejoin="round" stroke-linecap="butt"/>
                    </svg>
                </svg>
            </section>
        </section>
        <section id="_data" guid="3197f08e-4cb5-481d-a148-92258b2d100f">
            <header><code>.data</code></header>
            <introduction/>
        </section>
        <section id="_emitbyte" guid="4b82a665-3a04-4010-8e23-c52177722399">
            <header><code>.emitbyte</code></header>
            <introduction/>
        </section>
        <section id="_entrypoint" guid="cf7ff248-2a57-4032-8a54-a945990ce622">
            <header><code>.entrypoint</code></header>
            <introduction/>
        </section>
        <section special="undocumented" id="_export" guid="7d5de718-9958-415b-971d-0fea3c5dd73c">
            <header><code>.export</code></header>
            <introduction/>
        </section>
        <section id="fault" guid="2c2df25b-8820-4e30-ab10-4a3522ce12dc">
            <header><code>fault</code></header>
            <introduction/>
        </section>
        <section id="_field" guid="5131b0e1-eceb-47e4-b99e-5b6de0a8c1dd">
            <header><code>.field</code></header>
            <introduction/>
            <!--TODO: See section 16.1.4 in MS Partition II.pdf-->
        </section>
        <section id="_file" guid="155f5a74-40b6-43ee-8164-a58ad46b36aa">
            <header><code>.file</code></header>
            <introduction/>
        </section>
        <section special="ms-specific" id="_file_alignment" guid="b4a471a4-cc6b-4853-b9bf-71be385dcf6f">
            <header><code>.file alignment</code></header>
            <introduction/>
        </section>
        <section id="filter" guid="dd0a85e1-8294-419d-a858-2f36bc4ecb75">
            <header><code>filter</code></header>
            <introduction/>
        </section>
        <section id="finally" guid="14114e50-b11a-410b-990c-cd664071226e">
            <header><code>finally</code></header>
            <introduction/>
        </section>
        <section id="_fire" guid="12a975ab-853b-4eff-a652-f9c4043f1c1a">
            <header><code>.fire</code></header>
            <introduction>Defines fire method for event. This method is used for firing the event.</introduction>
            <syntax>
                .removeon <ref>CallingConvention</ref> <ref>Type</ref> [<ref>TypeSpec</ref>::] <ref>MethodName</ref> \([<ref>Param</ref> [, <ref>Param</ref>]]\)
            </syntax>
            <syntax-dl>
                <dt><code-ref>CallingConvention</code-ref> (<ref ref="CallConv">CallConv</ref>)</dt>
                <dd>Method calling convention</dd>
                <dt><code-ref>Type</code-ref> (<ref ref="Type">Type</ref>)</dt>
                <dd>Method return type</dd>
                <dt><code-ref>TypeSpec</code-ref> (<ref ref="TypeSpec">TypeSpec</ref>)</dt>
                <dd>The type where the method is declared. Defaults to same type the event is declared in.</dd>
                <dt><code-ref>MethodName</code-ref> (<ref ref="MethodName">MethodName</ref>)</dt>
                <dd><code>.cctor | .ctor | <ref>DottedName</ref></code></dd>
                <dd>The name of referenced method. Theoretically <code>.cctor</code> and <code>.ctor</code> are possible, practically it cannot work.</dd>
                <dt><code-ref>Param</code-ref> (<ref ref="Param">Param</ref>)</dt>
                <dd>Parameters define signature of refereced method.</dd>
            </syntax-dl>
            <parents><internal-link ref="_eventB">.event {}</internal-link></parents>
            <p>
                CLS specifies naming conventions and consistency constraints for event methods and requires the fire method to be marked with <code>specialname</code>.
            </p>
            <seealso>
                <internal-link ref="_addon">.addon</internal-link>
                <internal-link ref="_get">.get</internal-link>
                <internal-link ref="_other">.other</internal-link>
                <internal-link ref="_removeon">.removeon</internal-link>
                <internal-link ref="_set">.set</internal-link>
            </seealso>
        </section>
        <section id="_get" guid="aa99b7ec-83a4-42fa-8023-6200f1d61ebd">
            <header><code>.get</code></header>
            <introduction/>
        </section>
        <section id="handler" guid="9adc75e3-e399-44d5-9a61-cf7cc6fe8cd1">
            <header><code>handler</code></header>
            <introduction/>
        </section>
        <section id="_hash" guid="e482d889-b6f5-4247-9555-442a0d860bd9">
            <header><code>.hash</code></header>
            <introduction/>
        </section>
        <section id="_hash_alghoritm" guid="70da21dd-092c-48c5-8b66-f84510cbc668">
            <header><code>.hash alghoritm</code></header>
            <introduction/>
        </section>
        <section special="ms-specific" id="_imagebase" guid="c4e3bc53-89e8-4464-b4a9-f93dd1fb3d24">
            <header><code>.imagebase</code></header>
            <introduction/>
        </section>
        <section special="ms-specific" id="_language" guid="27d2766f-ba22-45f8-867c-b6b20172d3cb">
            <header><code>.language</code></header>
            <introduction/>
        </section>
        <section id="_line" guid="bef239b4-0a82-47db-8906-53c4a12a931e">
            <header><code>.line</code> (<code>#line</code>)</header>
            <introduction/>
        </section>
        <section special="ms-specific" id="_locale" guid="b7409e19-9c6c-45dc-a869-ee53b533047f">
            <header><code>.locale</code></header>
            <introduction/>
        </section>
        <section id="_locals" guid="31043c83-08b1-4432-b87d-cbda65e8483d">
            <header><code>.locals</code></header>
            <introduction/>
        </section>
        <section id="_maxstack" guid="0d65bf77-ba02-4285-9a66-f5a2c50dd058">
            <header><code>.maxstack</code></header>
            <introduction/>
        </section>
        <section id="_module" guid="4bfc275e-6e3a-4fbf-ab12-940abe610ec6">
            <header><code>.module</code></header>
            <introduction/>
        </section>
        <section id="_module_extern" guid="94c52bb2-020b-40cb-8f74-bf7026cf17a5">
            <header><code>.module extern</code></header>
            <introduction/>
        </section>
        <section special="ms-specific" id="_namespace" guid="c7846447-c88f-444b-9e88-26ba00384886">
            <header><code>.namespace</code></header>
            <introduction/>
        </section>
        <section id="_other" guid="9e7d2dbc-aaa0-49a6-b729-d8d675add705">
            <header><code>.other</code></header>
            <introduction/>
        </section>
        <section id="_override" guid="992b3bc2-52ca-45f8-bb36-68a1dd2657db">
            <header><code>.override</code></header>
            <introduction/>
        </section>
        <section id="_override_method" guid="8f711996-58aa-4c4f-838b-0b8618ff6cbe">
            <header><code>.override method</code></header>
            <introduction/>
        </section>
        <section id="_pack" guid="94f1b99c-3a49-4109-9dbf-4fa8d66807e7">
            <header><code>.pack</code></header>
            <introduction/>
        </section>
        <section id="_param" guid="e5808673-535d-4dec-a4f5-3520cf700be4">
            <header><code>.param</code></header>
            <introduction/>
        </section>
        <section id="_param_type" guid="4b9ab2a8-4653-4af1-974f-dfbb07af08ff">
            <header><code>.param type</code></header>
            <introduction/>
        </section>
        <section id="_permission" guid="26047966-4043-4e28-9cb0-843ae3385797">
            <header><code>.permission</code></header>
            <introduction/>
        </section>
        <section id="_permissionset" guid="ebf17d31-1fe9-404f-bd88-c9975425a241">
            <header><code>.permissionset</code></header>
            <introduction/>
        </section>
        <section id="_publickey" guid="acf601a2-56e8-4422-9d99-2cb0e3f896b9">
            <header><code>.publickey</code></header>
            <introduction/>
        </section>
        <section id="_publickeytoken" guid="053b910e-96d3-49be-b10f-ae9309885fbd">
            <header><code>.publickeytoken</code></header>
            <introduction/>
        </section>
        <section id="_removeon" guid="7eaad505-87fd-43d0-a944-98220d1d6eaf" r="II.18">
            <header><code>.removeon</code></header>
            <introduction>Defines remove method for event. This method is used for removing handler from an event.</introduction>
            <syntax>
                .removeon <ref>CallingConvention</ref> <ref>Type</ref> [<ref>TypeSpec</ref>::] <ref>MethodName</ref> \([<ref>Param</ref> [, <ref>Param</ref>]]\)
            </syntax>
            <syntax-dl>
                <dt><code-ref>CallingConvention</code-ref> (<ref ref="CallConv">CallConv</ref>)</dt>
                <dd>Method calling convention</dd>
                <dt><code-ref>Type</code-ref> (<ref ref="Type">Type</ref>)</dt>
                <dd>Method return type</dd>
                <dt><code-ref>TypeSpec</code-ref> (<ref ref="TypeSpec">TypeSpec</ref>)</dt>
                <dd>The type where the method is declared. Defaults to same type the event is declared in.</dd>
                <dt><code-ref>MethodName</code-ref> (<ref ref="MethodName">MethodName</ref>)</dt>
                <dd><code>.cctor | .ctor | <ref>DottedName</ref></code></dd>
                <dd>The name of referenced method. Theoretically <code>.cctor</code> and <code>.ctor</code> are possible, practically it cannot work.</dd>
                <dt><code-ref>Param</code-ref> (<ref ref="Param">Param</ref>)</dt>
                <dd>Parameters define signature of refereced method.</dd>
            </syntax-dl>
            <parents><internal-link ref="_eventB">.event {}</internal-link></parents>
            <p>
                CLS specifies naming conventions and consistency constraints for event methods and requires the remove method to be marked with <code>specialname</code>.
            </p>
            <seealso>
                <internal-link ref="_addon">.addon</internal-link>
                <internal-link ref="_fire">.fire</internal-link>
                <internal-link ref="_get">.get</internal-link>
                <internal-link ref="_other">.other</internal-link>
                <internal-link ref="_set">.set</internal-link>
            </seealso>
        </section>
        <section id="_set" guid="77d435f2-ec68-4e80-bff7-29ff9ce45ad5">
            <header><code>.set</code></header>
            <introduction/>
        </section>
        <section id="_size" guid="4e407480-d0f3-42a5-9095-72acefdbc8af">
            <header><code>.size</code></header>
            <introduction/>
        </section>
        <section special="undocumented" id="_stackreserve" guid="53aaab03-5a5d-4039-b84e-d6d8b76a25a5">
            <header><code>.stackreserve</code></header>
            <introduction/>
        </section>
        <section id="_try" guid="094b8227-82c2-4ce7-bfac-f892b8fe2780">
            <header><code>.try</code></header>
            <introduction/>
        </section>
        <section id="_subsystem" guid="fe5d32d1-c45f-4cb4-b07e-129c46208e10">
            <header><code>.subsystem</code></header>
            <introduction/>
        </section>
        <section id="_ver" guid="270893db-17ab-412a-8a80-1678aa35475e">
            <header><code>.ver</code></header>
            <introduction/>
        </section>
        <section special="undocumented" id="_vtentry" guid="6932c4b6-6b86-436e-ba90-61e6d78602d9">
            <header><code>.vtentry</code></header>
            <introduction/>
        </section>
        <section id="_vtfixup" guid="471534a4-c10c-4eca-a828-26786a676f12">
            <header><code>.vtfixup</code></header>
            <introduction/>
        </section>
        <section id="Label" guid="3bd656e8-8bd1-46bb-b93b-159ced4ebb8b">
            <header>Label</header>
            <introduction/>
        </section>
    </section>
    <!--Instructions-->
    <section id="instructions" guid="9DE21037-C6E2-4515-9D60-A55E6343AF3C" r="III">
        <header>Instructions</header>
        <introduction/>
    </section>
</ildoc>