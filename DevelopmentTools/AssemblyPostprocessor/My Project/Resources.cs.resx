<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ex_PropertyOrFieldNotFound" xml:space="preserve">
    <value>Ani vlastnost ani proměnná s názvem '{0}' nebyla nalezena</value>
  </data>
  <data name="Usage" xml:space="preserve">
    <value>Použití: {0} assembly1 assembly2 ...</value>
  </data>
  <data name="msg_ItemError" xml:space="preserve">
    <value>Chyba {0} nastala pro položku {1}: {2}</value>
  </data>
  <data name="msg_InnerException" xml:space="preserve">
    <value>Vnitřní výjimka:</value>
  </data>
  <data name="msg_Apply" xml:space="preserve">
    <value>Aplikuji {0}</value>
  </data>
  <data name="wrn_AttributeAppliedOnUnsupportedItem" xml:space="preserve">
    <value>VAROVÁNÍ: {0} applikován na nepodporované položce {1}</value>
  </data>
  <data name="msg_Transform" xml:space="preserve">
    <value>{0} -&gt; {1}</value>
  </data>
  <data name="msg_ProcessingAssembly" xml:space="preserve">
    <value>Zpracovávám sestavení ...</value>
  </data>
  <data name="wrn_TypeNotFound" xml:space="preserve">
    <value>VAROVÁNÍ: Typ {0} nenalezen</value>
  </data>
  <data name="GenParsNotSupported" xml:space="preserve">
    <value>Generické parametry na {0} nesjou podporovány</value>
  </data>
  <data name="MessageProcessorTypeError" xml:space="preserve">
    <value>Objekt pro zpracování zpráv musí dědit of {0}</value>
  </data>
  <data name="TaskReceiverTypeError" xml:space="preserve">
    <value>Typ receiveru musí být {0}</value>
  </data>
  <data name="ex_UnsupportedGParOwner" xml:space="preserve">
    <value>Porovnání shody typů, které představují generické argumenty něčeho jiného než typů a method, není podporováno</value>
  </data>
  <data name="ex_TypeDoesNotImplement" xml:space="preserve">
    <value>{0} neimplementuje {1}</value>
  </data>
  <data name="ex_TypeDoesNotInherit" xml:space="preserve">
    <value>{0} nedědí od {1}</value>
  </data>
  <data name="ex_StaticMethodCannotImplement" xml:space="preserve">
    <value>Statická metoda {0} nemůže implementovat člena rodičovské třídy</value>
  </data>
  <data name="ex_CannotImplement" xml:space="preserve">
    <value>{0} nelze implementovat</value>
  </data>
  <data name="ex_MethodAmbiguous" xml:space="preserve">
    <value>Více jak jedna metoda {0}.{1} splňuje kritéria</value>
  </data>
  <data name="ex_PropertyAmbiguous" xml:space="preserve">
    <value>Více jak jedna {0}.{1} vlastnost splňuje kritéria</value>
  </data>
  <data name="ex_PropertyWOGetterSetter" xml:space="preserve">
    <value>Jen vlastosti s getterem, setterem nebo oběma jsou podporovány.</value>
  </data>
  <data name="ex_PropertyMixedAccessorStaticInstance" xml:space="preserve">
    <value>Jen vlastnosti jejichž všechny accessory jsou instanční jsou podporovány</value>
  </data>
  <data name="ex_PropertyExternalAccessor" xml:space="preserve">
    <value>Jenom vlastnosti jejichž všechny accessory jsou implementovány v tom samém typu jako vlastnost sama jsou podporovány.</value>
  </data>
  <data name="ex_EventWOAddRemove" xml:space="preserve">
    <value>Jen události s adderem nebo removerem jsou podporovány</value>
  </data>
  <data name="ex_EventMixedAccessorStaticInstance" xml:space="preserve">
    <value>Jen události jejichž všechny accessory jsou instanční jsou podporovány</value>
  </data>
  <data name="ex_EventExternalAccessor" xml:space="preserve">
    <value>Jenom události jejichž všechny accessory jsou implementovány v tom samém typu jako událost sama jsou podporovány.</value>
  </data>
  <data name="ex_EventAmbiguous" xml:space="preserve">
    <value>Více jak jedna událost {0}.{1} splňuje kritéria</value>
  </data>
  <data name="ex_OnylAssemblyAndModule" xml:space="preserve">
    <value>{0} podporuje jen sestavení a moduly</value>
  </data>
  <data name="ex_RemovalNotSupported" xml:space="preserve">
    <value>Odstranění {0} není podporováno</value>
  </data>
  <data name="ex_UnsupportedGParRemoval" xml:space="preserve">
    <value>Odstranění generických argumentů z {0} není podporováno</value>
  </data>
  <data name="Implements" xml:space="preserve">
    <value>{0} implementuje {1}</value>
  </data>
  <data name="Removed" xml:space="preserve">
    <value>{0} odstraněno z {1}</value>
  </data>
  <data name="ex_RemoveReturnValue" xml:space="preserve">
    <value>Návratová hodnota nemůže být odebrána</value>
  </data>
  <data name="ex_AttrIsNotSupportedOnItem" xml:space="preserve">
    <value>{0} není podporováno na {1}</value>
  </data>
  <data name="msg_Rename" xml:space="preserve">
    <value>Přejmenování {0} -&gt; {1}</value>
  </data>
  <data name="msg_AddedResource" xml:space="preserve">
    <value>Přídán {0} zdroj {1} z {2}.</value>
  </data>
  <data name="resource_embeded" xml:space="preserve">
    <value>vestavěný</value>
  </data>
  <data name="resource_linked" xml:space="preserve">
    <value>linkovaný</value>
  </data>
  <data name="msg_RemoveReference" xml:space="preserve">
    <value>Odstranit referenci {0} z {1}</value>
  </data>
</root>