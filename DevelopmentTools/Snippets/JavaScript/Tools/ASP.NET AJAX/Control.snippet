<?xml version="1.0" encoding="UTF-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet" xmlns:xml="http://www.w3.org/XML/1998/namespace">
    <CodeSnippet Format="1.0.0">
        <Header>
            <Title>Control</Title>
            <Author>Đonny</Author>
            <Description>Adds code for JavaScript Control "class"</Description>
            <SnippetTypes>
                <SnippetType>Expansion</SnippetType>
            </SnippetTypes>
        </Header>
        <Snippet>
            <Declarations>
                <Literal>
                    <ID>Namespace</ID>
                    <ToolTip>Name of namespace class will be defined in</ToolTip>
                    <Default>Namespace</Default>
                </Literal>
                <Literal>
                    <ID>ClassName</ID>
                    <ToolTip>Name of the class (will be appended with Behavior)</ToolTip>
                    <Default>MyClass</Default>
                </Literal>
                <Literal>
                    <ID>base</ID>
                    <ToolTip>Base class of this class</ToolTip>
                    <Default>Sys.UI.Control</Default>
                </Literal>
            </Declarations>
            <Code Language="JavaScript">
<![CDATA[Type.registerNamespace('$Namespace$');

$Namespace$.$ClassName$Behavior = function (element) {
    /// <summary>Provides client-side behavior for the <see cref="T:$Namespace$.$ClassName$"/> server-side class</summary>
    /// <param name="element" domElement="true">A HTML element this class provides client behavior of</param>
    $Namespace$.$ClassName$Behavior.initializeBase(this, [element]);
};
$Namespace$.$ClassName$Behavior.prototype = {
    initialize: function initialize() {
        /// <summary>Initializes a newly created instance of <see cref="$Namespace$.$ClassName$Behavior"/> class</summary>
        $Namespace$.$ClassName$Behavior.callBaseMethod(this, 'initialize');
    },
    dispose: function dispose() {
        /// <summary>Removes the component from the application.</summary>
        $Namespace$.$ClassName$Behavior.callBaseMethod(this, 'dispose');
    }
    //Add your code here
};
$Namespace$.$ClassName$Behavior.registerClass('$Namespace$.$ClassName$Behavior', $base$);]]>
            </Code>
        </Snippet>
    </CodeSnippet>
</CodeSnippets>